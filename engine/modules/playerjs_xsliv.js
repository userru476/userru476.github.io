//	Playerjs.com 19.12.14
//	24.11.2024 17:40:43
//	API - https://playerjs.com/docs/q=api

eval(function(p, a, c, k, e, d) {
    e = function(c) {
        return (c < a ? '' : e(parseInt(c / a))) + ((c = c % a) > 35 ? String.fromCharCode(c + 29) : c.toString(36))
    }
    ;
    if (!''.replace(/^/, String)) {
        while (c--) {
            d[e(c)] = k[c] || e(c)
        }
        k = [function(e) {
            return d[e]
        }
        ];
        e = function() {
            return '\\w+'
        }
        ;
        c = 1
    }
    ;while (c--) {
        if (k[c]) {
            p = p.replace(new RegExp('\\b' + e(c) + '\\b','g'), k[c])
        }
    }
    return p
}('if(!1t.4U){1t.4U=[];1t.aN}if(1t[\'yE\']){1E(yE,1)};E tX(2q){B o={1r:I,hJ:[],mZ:[],dI:I,fZ:\'H0\',GZ:tS,GW:tZ,6S:\'19.12.14\',bY:[\'6p\',\'\'],fY:\'\',1O:I,5X:I,9a:I,GS:I,b5:I,6n:I,7o:I,7x:I,u:\'#H7#Ho#uo#iD#Hi#Hg#Hf#Hb#H8#Gm#Gl#Gi#iD#Gf#Gd#GK#GG#GE#uo#iD#GB#In#Ii#Ig#If#iD#IB#Iy\',u2:\'\',u3:\'\',u4:\'\',u5:\'\',u6:\'\',u7:\'\',u8:\'\',u9:\'\',Ix:\'\',y:\'xx?xx?=\',p:\'\',Iv:-1,qi:"uA",du:"//uA.9Q",5u:[],dt:H,pr:H,ga:I,ab:I,g8:[],HJ:I,b4:\'//.7g//\',uO:0,2S:[],6h:[],8c:[],8B:[],yf:[],8a:0,HG:[],jr:0,pf:I,4A:I,1A:I,q9:I,6l:I,ni:\'<uF>\',fb:\'</uF>\',bo:1t.8m.1g<2b&&1t.8m.1d<2b,so:[],Hu:[],ey:{\'1F\':1,\'wc\':1,\'iq\':1,\'aY\':1,\'hN\':0},8l:[],qx:0,aw:0,4a:I,9A:I,c8:I,oj:I,Hz:[],pY:[],8S:I,am:0,fK:I,lW:1H,fB:1H,n4:I,tU:E(x){B a;J a},Hy:0,iB:5c,3S:I,ay:I,rj:1K.rj,d:6G.qW,gL:6G.qW,6O:6G.6O,ec:6G.6O.K("ec")==0,Hx:{},qs:\'Hw-tQ.9Q/tQ.js\',fd:["tU","tV"],4R:[],HL:[],HC:[],eD:1,j1:[],tV:E(x,y,z){B a;J a},Z:0,lv:0,4i:I,dk:-1,8N:3,I4:0,ox:0,7K:0,3b:{x:1,y:1,x0:1,y0:1},fH:["i5","ho","hv","hP","hR","hY","oe","hC","f2","l7","pG","pI"],I3:["I2","Ga","I0","HZ"],aO:0,HW:0,pc:0,wy:0,bd:0,vW:[],a9:[\'5Y\',\'aQ\',\'hl\',\'51\'],HO:[],l6:H,k0:[],l1:0,ws:"w"+"s",dI:I,cY:[I,I,I]};B dU={P:{w:20,h:20,17:"-",HV:"-",a:1,8e:-1,1S:"3u",1G:"",1F:1,dE:-1,8V:0,23:1,1f:"",1u:"",4I:"HU",ir:12,iE:0,1p:"R",33:"0 3 0 3",aX:"0 0 0 0",2a:1,ep:"0 0 0 0",HT:0,fM:1,bg:0,lD:0,yS:0,7A:1,8Q:-1,5d:"3x",8R:-1,ei:"0 0 0 0",pk:-1,pK:"3u",8H:-1,iu:-1,4E:"1R",6F:"qS",23:0,gM:"3x",h3:0.7,oK:0,oG:"3u",eu:"3 5 3 5",HS:"0 0 0 0",HP:1,oN:"hT-hW",oM:11,oL:0,2l:"",CO:5,CN:0,3g:0,Ht:2,Gb:2,Cs:0.2,Cp:0,Cn:0.1,fJ:0,Ew:"ED",EG:1,F1:5,Cu:"3x",Cr:"3u",Cm:"3u",Cv:1,yY:1,pj:1,6B:0,2R:0,cJ:20,az:"<2I 1g=\'20\' 1d=\'20\'><g><eE ry=\'5\' rx=\'5\' cy=\'10\' cx=\'10\' 5F=\'#bN\'/></g></2I>",pw:1,kb:-1,ea:0,lx:1,p9:-1,EK:0.1,d5:0,2x:"",Et:0,E8:"qS",2Y:"",Df:jQ,Ef:jQ,zr:0,7a:0,jO:"3u",Ch:0,Cg:"3x",Ci:9,ph:"0 0 10 0",pi:"0 0 0 0",C3:0}};E BQ(){J H;o.BR=H}E cg(s){if(s.K(\'.\')==-1){s=s.1B(1);s2=\'\';W(i=0;i<s.S;i+=3){s2+=\'%u0\'+s.4v(i,i+3)}s=EP(s2)}J s};E AY(){if(o.u!=\'\'){v=7T(v,46.5k(ba(o.u)))}if(2q.K("#"+v.bb)==0){2C{2q=46.5k(o[o.fd[0]](2q))}2k(e){}}F{if(2q.K("#"+v.dg)==0){2C{2q=46.5k(o[o.fd[1]](2q))}2k(e){}}}}E gs(x,y){}E kw(y,1q){}B rR=E(){B dc=1Z("2p");o.1M.1V(dc);Q(dc,{\'1p\':\'2n\',\'1b\':0,\'1c\':0,\'1g\':\'1w%\',\'1d\':30,\'2y-1S\':v.xt,\'1I\':v.yv,\'2o\':\'1R\'});B x=1Z("2p");o.1M.1V(x);Q(x,{\'1p\':\'2n\',\'1b\':0,\'1c\':0,\'1g\':\'1w%\',\'1S\':v.xk,\'4I-3Y\':v.y5,\'3U\':(v.xp+\'px \'+v.yu+\'px\'),\'2o\':\'1R\'});G.7g=E(1u,n){x.2B=1u;5l(x);Q(dc,{\'1d\':x.2D,\'2o\':\'6g\'});dc.C.4k="EI";W(B i=0;i<x.aU(\'a\').S;i++){x.aU(\'a\')[i].C.1S=\'#bN\'}if(n){1E(G.hn,2b*n)}x.C.4k="Ey"};G.hn=E(){3i(x);3i(dc)}};4G(E(w,i,s,e){B 8i=0;B 7z=0;B d4=0;B bQ=[];B au=[];jK(H){if(8i<5)au.2U(w.5g(8i));F if(8i<w.S)bQ.2U(w.5g(8i));8i++;if(7z<5)au.2U(i.5g(7z));F if(7z<i.S)bQ.2U(i.5g(7z));7z++;if(d4<5)au.2U(s.5g(d4));F if(d4<s.S)bQ.2U(s.5g(d4));d4++;if(w.S+i.S+s.S+e.S==bQ.S+au.S+e.S)1j}B vc=bQ.n7(\'\');B ul=au.n7(\'\');7z=0;B n9=[];W(8i=0;8i<bQ.S;8i+=2){B o4=-1;if(ul.8A(7z)%2)o4=1;n9.2U(5D.qn(2P(vc.1B(8i,2),36)-o4));7z++;if(7z>=au.S)7z=0}J n9.n7(\'\')}(\'F5\',\'FR\',\'FS\',\'FE\'));B v={1l:0,qm:0,hS:"#3x",3n:0,q7:1,aG:"#3x",5d:"#3u",6B:0,jy:1,hu:1,ka:0,sa:1,bM:0,qK:1,1m:{FT:0,1S:"3x",a:"0.4",h:34,gc:1,1k:1,eQ:1,b7:0,DX:3,6o:0,o5:3,4E:"1R",1p:"3v",33:"0 0 0 0",6B:0,eq:0,7f:\'\'},1D:{on:1,f:1,r:1,m:1,3r:5,n5:"3r",bw:1,n8:"1y",jB:0,AR:0,oI:1,g3:0.2},X:{5d:"3x",8R:"kx",7A:0.9,8Q:-1,1p:"1b",33:"0 0 0 0",3U:"7 15 7 15",1S:"3u",4I:"vk, vl, hT-hW",ir:12,v5:10,iE:0,jO:"uK",FW:1,aG:"F9",a:1,8e:-1,Fa:0,Fb:1w,F7:Fl,Fq:1,Fr:1,Fs:"Fu",Fv:"3x",Fw:-1,IJ:-1,IL:0,uJ:3,vo:16,Lf:"LT",6B:0,sQ:1,sI:1,tw:"3u",LX:0,LW:"3x",Mr:1,Mp:0,Mm:"kx",tB:0,tH:5c,dX:0,9F:0,Em:0,DA:0,kI:1,DU:0,Mk:50,Mc:0,Mg:1,Me:Md,Mb:0,LR:"kx",Lv:"0 0 0 0",nf:30,aG:"tL"},1e:{5d:"3x",8R:"Ls",7A:0.7,8Q:-1,4I:"vk, vl, hT-hW",1p:"3v-2Q",33:"0 0 0 0",3U:"7 10 7 15",1S:"3u",ir:12,vo:16,v5:10,iE:0,Ll:"3u",jO:"uK",a:1,1F:5,8e:-1,Lj:1,uJ:3,sQ:1,sI:1,tw:"3u",tB:0,tH:5c,6B:0,Mu:1,N8:"7l",3K:1,Np:"9m",Nn:1,Nm:"42",Nl:0,Nk:"7S",Ng:0,Nf:"6i",nf:30,aG:"tL"},Nd:{1p:"3v-2Q",33:"0 10 50 0"},1y:0.8,p6:1,lb:1,7V:0,de:0,tj:1,4j:0,4p:0,vw:0,vA:0,2T:0,m1:1,sD:0,z2:0,z3:0,gG:\',\',er:\';\',eZ:\'//\',mV:1,gx:\'[\',b6:\']\',cQ:\'5F\',l9:1,lp:-1,mz:0,Nc:\'20 0 0 20\',Nb:\'1c-1b\',Nq:1w,Nr:1w,NC:-1,sg:0,xs:1,xt:"p3",xk:"3u",xp:5,yu:10,yv:1,y5:10,jr:0,od:1,NF:1,da:1,3W:\'ND\',na:0,h5:\'56\',7R:1,w7:0,vX:0,te:0,7e:1,9Y:1,yr:5,5f:0,sY:1,kZ:0,sb:5,Nx:0,Nv:0,MK:0,iT:1,tR:1,t9:0,MI:0,MH:0,ra:1,ko:0,2L:"xZ",MG:yR,i2:\'1w%\',ga:0,vP:{6A:1,2j:0,ew:0,4e:0,1r:1,qT:0,qV:0,qX:0,MF:0,MC:0,MB:0},vK:{6A:1,2j:0,ew:0,4e:0,1r:1,qT:0,qV:0,qX:0},Mz:1w,wk:1,N5:1,yV:14,i5:\'1w%\',N4:1,z4:20,N3:1,hR:0.7,N2:2,MZ:3,f2:10,ho:"3u",hv:"MX",hP:"3x",hY:0,oe:0,hC:rP,AG:1,l7:0,MW:1,xz:1,K0:1,Ld:0.3,JD:3,JC:4,Jv:5,Ju:0,JE:Jw,JV:Cd,tO:0,tM:1,oH:1,dy:1,CK:1,s0:0,C0:JT,Bq:90,Bo:0,Bn:1,Bm:"kx",Bp:0,Bl:1,bb:\'2\',dg:\'3\',JM:10,JL:1,IS:1,IO:-1,J2:1,Jk:1,Jg:-1,Jc:0,Jb:1,Jn:0,KC:1,KS:0,KR:1,KN:0,KM:1,KK:0,KD:1,KJ:0,KI:1,KG:0,pN:1,KT:0,Lb:0,L7:1,L6:0,L0:1,KY:"#3u",KX:"#3x",KA:"#3x",Ke:"#3u",Kc:"#3x",Kb:"#3u",K1:"#3x",Kh:"#3u",Ki:"#3x",Ks:"#3u",Km:"#3x",F4:"#3u",LU:1,Kl:0,Kn:1,Ko:0.5,Kp:"#3u",Kq:"#3x",Kk:1,Kr:1,Kt:1,Ku:1,Kv:1,Kw:10,Kx:-1,Ky:1,Kz:1,K9:0,jc:0,K2:"or",K3:"or",K4:"or",K5:"or",K6:"50%",K7:-1,K8:0,Ka:-1,Kd:0,Kf:0,Bs:1,Bt:0,Kg:30,Kj:2,sS:10,t8:0,KB:30,Dg:1,Dw:1,4W:0,1Q:{on:0,5d:"3x",3n:0,di:2,aG:"3x",1p:"1b",33:"20 0 0 20",1g:KV,1k:0}};v.8f="ru";B zc=E(1a,bg,C){B 1f=1Z("2p");B cu;1a.1V(1f);Q(1f,{"1p":"2n","1c":(-bg.2D/2)-1,"2y-1S":3O(2r(C.KZ,"#L1")),"3n-L2":1,"2o":"1R","bX":"1R"});if(C.kX==1&&C.y3){cu=C.y3.2g(",");Q(1f,{"4I-3Y":8,"1S":"#bN","3U":"mD mD 0 mD","2A-1d":"1"})}F{C.kX=0;Q(1f,{"1d":9,"1g":13,"2y-7f":"18(21:7f/2I+L3;cA,KW=)"})}G.dP=E(){B y=0;B x=o.O.mb();x=x.1P(41("2X")+\' \',\'\');if(x){if(C.kX!=1){if(x==\'HD\'||x.K(\' HD\')>0||x.K(\'hd\')==0||x.K(\'Hd\')==0){x=\'uz\'}}B x0=x;if(x.K(\' \')>0){x0=x.1B(0,x.K(\' \'))}y=2P(x0)}B t=\'-1\';B z;if(C.kX==1){if(lm(y)){y=x}t=\'\';W(B i=0;i<cu.S;i++){B l0=cu[i].2g(":");if(l0.S==2){if(4c(l0[0])==y){t=4c(l0[1])}}}if(t==\'\'){if(y>jQ){z=H;1f.2B="HD"}}F{z=H;1f.2B=t}}F{if(y>jQ){z=H}}if(z){5l(1f);if(bg.1U-1f.1U>0){Q(1f,{"1b":(bg.1U-1f.1U)/2-2})}}F{3i(1f)}}};o.L8={"2X":"Авто","1r":"Пуск","2Z":"Пауза","2h":"Стоп","1O":"Во весь экран","nY":"Выйти из полноэкранного режима","1e":"Настройки","2q":"Параметры","1y":"Громкость","4j":"Выключить звук","7q":"Включить звук","4a":"В ЭФИРЕ","X":"Плейлист","7l":"Качество","7S":"Скачать","42":"Субтитры","6i":"Скорость","hE":"Обычная","2j":"ошибка","L9":"Включите звук","9m":"Аудио","jb":"ошибка загрузки","rQ":"Очень низкое","iG":"Низкое","iN":"Среднее","iM":"Высокое","rF":"Высокое","56":"Следующий","9V":"Предыдущий","3y":"Поделиться","wQ":"Скопировано в буфер обмена","wP":"Реклама","5N":"Пропустить","La":"Пропустить через ","wM":"Перейти на сайт рекламодателя","i5":"Размер текста","l7":"Сдвиг по времени","ho":"Цвет текста","hv":"Цвет текста 2","hP":"Цвет фона","hR":"Прозрачность фона","hY":"Тень","oe":"Контур","hC":"Толщина текста","f2":"Отступ снизу","pG":"Сбросить","pI":"Скрыть параметры","Lc":"Загрузить","wK":"Сон","wS":"Пропуск","L5":"Час","KU":"Минута","KL":"Секунда","wE":"Да","wf":"Нет","of":"из","6d":"Пароль","xV":"Ошибка воспроизведения на устройстве","yo":"Играет на устройстве","nz":"Канал","1F":"Масштаб","on":"Вкл.","bs":"Выкл.","vM":"Все сразу","cG":"кбит/с","pW":"Код","18":"Ссылка","1S":"Цвет","wc":"Контраст","iq":"Яркость","aY":"Насыщенность","hN":"Сепия"};B 9q=E(x){B cw;B KE;B 2v;B 3Q;B 3B;B hG;B dS=0;B lE;B lX=I;B mI;if(x.me!=1H&&x.mc!=1H&&x.1G!=1H&&x.to!=1H){if(x.Z==28){if(x.1G.K("cD")>-1){x.to==0?x.Z=0.5:x.Z=0.2}F{x.Z=0.20}}cw=wX(x.ce);if(x.1G.K("1F")==-1){if(L(o.5u[x.me])){o.5u[x.me].rh()}o.5u[x.me]=G}if(x.1n==1){x.mc.1J("2o",H)}2v=x.1G.2g(\'|\');3B=5D(x.to).2g(\'|\');3Q=1C bj();W(B i=0;i<2v.S;i++){if(!3B[i]){3B[i]=3B[0]}if(2v[i]=="cD"){3Q[i]=x.mc.g("1I")}if(2v[i]=="aM"){3Q[i]=x.mc.C.1I}if(2v[i]=="y"){3Q[i]=x.mc.g("y")}if(2v[i]=="x"){3Q[i]=x.mc.g("x")}if(2v[i]=="1b"){3Q[i]=2P(x.mc.C.1b)}if(2v[i]=="1c"){3Q[i]=2P(x.mc.C.1c)}if(2v[i]=="1F"){3Q[i]=x.mc.g("2F")}if(2v[i]=="g7"){3Q[i]=x.mc.km}if(2v[i]=="wF"){3Q[i]=x.mc.fA}if(2v[i]=="2K"){3Q[i]=x.mc.g("2K")}if(2v[i]=="2F"){3Q[i]=x.mc.g("2F")}if(2v[i]=="1g"){3Q[i]=x.mc.g("1g")}if(2v[i]=="wW"){3Q[i]=x.mc.1U;3B[i]=2u.6R(3B[i]);x.me=="KF"?1l("1g",x.me,3Q[i],3B[i],x.mc.1U):\'\'}if(2v[i]=="1d"){3Q[i]=x.mc.g("1d")}if(2v[i]=="wZ"){3Q[i]=x.mc.2D}3B[i]=vG(3B[i]);3Q[i]=vG(3Q[i])}lE=x.Z*2b/cw.S;hG=cw.S;if(2v.S==1&&3Q[0]==3B[0]){7Z()}F{1E(i4,2u.5r(lE))}}E i4(){W(B i=0;i<2v.S;i++){B 1L=3Q[i]+(3B[i]-3Q[i])*(cw[dS]?cw[dS]:0);mv(2v[i],1L);if(2v[i]=="y"){x.mc.1J("1c",1L)}if(2v[i]=="x"){x.mc.1J("1b",1L)}if(2v[i]=="1b"){x.mc.C.1b=1L+"px"}if(2v[i]=="1c"){x.mc.C.1c=1L+"px"}if(2v[i]=="1F"){x.mc.1J("1F",1L)}if(2v[i]=="2K"){x.mc.1J("2K",1L)}if(2v[i]=="2F"){x.mc.1J("2F",1L)}if(2v[i]=="g7"){x.mc.km=1L}if(2v[i]=="wF"){x.mc.fA=1L}if(2v[i]=="1g"){x.mc.1J("1g",1L)}if(2v[i]=="wW"){Q(x.mc,{"1g":1L})}if(2v[i]=="1d"){x.mc.1J("1d",1L)}if(2v[i]=="wZ"){Q(x.mc,{"1d":1L})}}dS++;if(!lX){if(dS==hG){7Z()}F{mI=1E(i4,2u.5r(lE))}}}E 7Z(){lX=H;if(x.1k){if(2v[0]=="aM"||2v[0]=="1b"){1k(x.mc)}F{x.mc.1J("2o",I)}}if(x.1G.K("1F")==-1){o.5u[x.me]=28;3R o.5u[x.me]}W(B i=0;i<2v.S;i++){mv(2v[i],3B[i])}2w(mI)};E mv(y,z){if(y=="cD"){x.mc.1J("1I",z)}if(y=="aM"){x.mc.C.1I=z}}G.rh=E(){7Z()};G.tm=E(){dS=hG-1;i4();7Z()};G.DK=E(x0,x1,y0,y1){B e=I;W(B i=0;i<2v.S;i++){if(2v[i]==\'x\'&&x0!=x1){e=H}if(2v[i]==\'y\'&&y0!=y1){e=H}}e?7Z():\'\'};E wX(vL){aI(vL){1o"JZ":J[0,0.JY,0.J6,1.J7,1.J8,1.J9,1.u1,0.Ja,0.J5,0.87,0.Je,0.Jf,1.Jh,1.Ji,1.Jj,1.Jd,0.J3,0.IU,0.IN,0.IP,1.IQ,1.vH,1.IR,1.vH,1.IM,0.oS,0.jm,0.jm,0.jm,0.jm,1];1j;1o"Ej":J[0,0.IT,0.IV,0.IW,0.IX,0.IY,0.IZ,0.J0,0.J1,0.Jl,0.J4,0.Jm,0.JG,0.JI,0.JJ,0.JK,0.JN,0.JO,0.yC,0.95,0.JH,0.JP,0.JR,0.JS,0.99,0.JU,0.JW,0.oS,1];1j;6a:J[0,0.JX,0.32,0.44,0.52,0.6,0.67,0.73,0.JQ,0.82,0.85,0.JF,0.Jp,0.yC,0.95,0.97,0.Jq,0.Jr,1];1j}}};B CJ=E(){B N=5W.Js,ua=5W.Jt,nC;B M=ua.nH(/(ib|eJ|5R|yA|xc)\\/?\\s*(\\.?\\d+(\\.\\d+)*)/i);B M=ua.nH(/(ib|eJ|5R|yA|xc|Jx|kn)\\/?\\s*(\\.?\\d+(\\.\\d+)*)/i);if(M&&(nC=ua.nH(/6S\\/([\\.\\d]+)/i))!=28)M[2]=nC[1];B iv=5W.tI;G.ar=M?M[1]:N;G.6S=M?M[2]:5W.JA;G.bi=5W.tI>1;G.8f=5W.xC;G.ib=G.ar=="Le";G.pA=G.ar=="sT 9.0";G.ie=G.ar=="sT"||G.ar=="MQ"||G.ar=="MR";G.kn=ua.ao(/(kn)\\/?\\s*/i)>-1;G.ff=G.ar=="MS";G.5R=G.ar=="MU";G.eJ=1t.eJ;G.gQ=ua.ao("MV NT")>-1;G.3E=(ua.ao(/(5A|gy|MP)\\/?\\s*/i)>-1)||(5W.N0===\'N1\'&&iv>1);G.tv=v.vf!=1&&ua.ao(/(TV|MY|MN|ME|MM|Mx|My|MA)\\/?\\s*/i)>-1;G.lg=v.vf!=1&&ua.ao(/(LG)\\/?\\s*/i)>-1;G.5A=ua.ao(/(5A)\\/?\\s*/i)>-1;G.gy=G.3E&&!G.5A;G.3o=\'MD\'in 1K.jZ.C;if(ua.ao(/(bD)\\/?\\s*/i)>-1){iv>0?G.bD=H:G.tv=H;if(MJ(\'(4V:ML)\').N6){G.tv=H}}G.1W=(2q.1W==1||G.3E||G.bD||(ua.ao(/(N7|Ns|ib k6)\\/?\\s*/i)>-1))&&!G.tv&&2q.Nu!=1;G.Nw=G.5R||G.eJ;G.1O=I;if(G.3E){G.Ny=3l(ua.1B(ua.K(\'OS \')+3,4).1P(\'3V\',\'.\'));if(G.gy&&(!\'Au\'in 1t||iv<2)){G.1W=G.3E=I;G.tv=H}}G.cq=!G.1W;G.pH=G.1W||G.bi;G.CV=G.1W||G.tv;G.Nz=G.3o&&G.cq;if(o.1M.qE||o.1M.qA||o.1M.qG||o.1M.qH||o.1M.qI){G.1O=H}};E 7T(3X,5L){W(B s in 5L){if(1z(5L[s])==\'2W\'){if(s=="2L"||s=="3e"){3X[s]=5L[s]}F{W(B s2 in 5L[s]){if(1z(3X[s])!=\'2W\'){3X[s]={}}if(1z(5L[s][s2])==\'2W\'){W(B s3 in 5L[s][s2]){if(1z(3X[s][s2])!=\'2W\'){3X[s][s2]={}}if(1z(5L[s][s2][s3])==\'2W\'){W(B s4 in 5L[s][s2][s3]){if(1z(3X[s][s2][s3])!=\'2W\'){3X[s][s2][s3]={}}3X[s][s2][s3][s4]=5L[s][s2][s3][s4];if(s3==\'3U\'||s3==\'33\'){3X[s][s2][s3][s4]=2P(3X[s][s2][s3][s4])}}}F{3X[s][s2][s3]=5L[s][s2][s3];if(s2==\'3U\'||s2==\'33\'){3X[s][s2][s3]=2P(3X[s][s2][s3])}}}}F{3X[s][s2]=5L[s][s2];if(s==\'3U\'||s==\'33\'){3X[s][s2]=2P(3X[s][s2])}}}}}F{if(s.K("NA")>0&&4c(5L[s])===""){}F{3X[s]=oU(s,5L[s])}}}J 3X};B oU=E(Y,7a){if(1z(7a)==\'47\'){7a=4c(7a);if(Y.K("1S")>-1&&7a!=-1){7a=3O(7a)}}J 7a};E D5(){2C{B 4M=1t[\'3D\'],x=\'Nt\';4M.96(x,x);4M.o2(x);J H}2k(e){J I}};E np(aH){if(aH){if(L(o.5u[aH])){o.5u[aH].rh()}}};B 41=E(x){B y=x;if(y){y=x.5g(0).xi()+x.4v(1);if(y.K("3V")>-1){y=y.1P(/3V/ig," ")}}B en={"of":"of","cG":"cG","yo":"wd on w4","xV":"wd 2j on w4","vM":"NE at NH","6d":"jD","wf":"No","wK":"Nh","wS":"Na","wE":"Ne","f2":"N9 33","hC":"Ni j0","hY":"Nj","hR":"8G 1I","hP":"8G 1S","i5":"p5 3Y","ho":"p5 1S","hv":"p5 1S 2","l7":"3t LS","pI":"ac 2q","pG":"LB","9V":"LC","wQ":"LE to LF","rQ":"Lz","iG":"LH","iN":"LK","iM":"wU","rF":"wU","sm":"HD","rX":"LL HD","LM":"LN HD","rW":"LO HD","oi":"LP HD 4K","wP":"Ad","wM":"Go to Lo Lw\'s Lh","9m":"Li","4a":"Lk","1O":"Lm 1O","nY":"uZ 1O"};if(L(en[x])){y=en[x]}if(v.wI==1){if(o[\'kh\'+o.1i.8f]){v.8f=o.1i.8f;v.wI=0}}if(L(o[\'kh\'+v.8f])){if(L(o[\'kh\'+v.8f][x])){y=o[\'kh\'+v.8f][x]}}if(v.oF){if(v.oF[x]){y=v.oF[x]}}J y};B 8h=E(x,y,z){if(!L(o.g8[y])&&v.nl!=1){B t=o.bn?o.bn:(v.29?v.29:\'\');L(v.6U)?t=v.6U:\'\';if(v.vK[x]==1&&v.sO==1&&L(v.oy)){if(L(1t["vC"+v.oy])){1t["vC"+v.oy].Lp(\'k3\'+x,{29:t});1l("vx",\'k3\'+x)}F{1l("vx Lq 2j")}}if(v.vP[x]==1){if(v.ga==1){B e6;if(1t.vZ){e6={\'Lr\':\'Lt\',\'Lu\':t};if(v.fy){if(1z(v.fy)=="2W"){W(B g in v.fy){if(v.fy.2e(g)){e6[g]=v.fy[g]}}}}v.Ly==1?1l(\'ga\',\'k3\'+x,e6):\'\';vZ(\'1q\',\'k3\'+x,e6)}}}}z?o.g8[y]=H:\'\'};B tC=E(18){B x=\'\';18=18.1P("v=","{=");if(18){if(18.K(\'iF.be/\')>-1){x=18.1B(18.K(".be/")+4);x.1P("/","")}F{x=18.2g(/(iF.be\\/|v\\/|pW\\/|Mh\\?|4t.Mi\\/BA\\/[^#]*#([^\\/]*?\\/)*)\\??{?=?([^#\\&\\?]*)/)[3]}if(x!=\'\'){if(x.K("?t=")>0){v.1A=x.1B(x.K("?t=")+3);B h=0;B m=0;B s=0;if(v.1A.K("h")>0){h=v.1A.1B(0,v.1A.K("h"));v.1A=v.1A.1B(v.1A.K("h")+1)}if(v.1A.K("m")>0){m=v.1A.1B(0,v.1A.K("m"));v.1A=v.1A.1B(v.1A.K("m")+1)}if(v.1A.K("s")>0){s=v.1A.1B(0,v.1A.K("s"));v.1A=v.1A.1B(v.1A.K("s")+1)}if(h>0||m>0||s>0){v.1A=h*uk+m*60+s*1}}if(x.K("?")>0){x=x.1B(0,x.K("?"))}}}J x};B js=E(x,y,li,ev){if(x=="6A"){o.6A=H}if(ev==1){W(B yi in y){if(y.2e(yi)){if(1z(y[yi])=="2W"){y[yi]=\'\'}}}}if(v.ko==1&&o.6A){if(v.Mj==1||li==1){nN(x,y)}F{if(y!=1H){if(1z(y)==\'2W\'){2C{y=46.pS(y)}2k(e){}}F{if(1z(y)==\'47\'){y=y.1P(/\'/ig,\'′\')}}}if(1z(v.2L)==\'47\'){if(v.2L.K("{")==0){2C{v.2L=v.2L.1P(/\\\'/ig,\'"\');v.2L=46.5k(v.2L)}2k(e){7p.1l(e)}}}if(1z(v.2L)==\'2W\'){if(L(v.2L[x])||L(v.2L[\'oE\'])){B z=x;if(!L(v.2L[x])&&L(v.2L[\'oE\'])){z=\'oE\'}if(x.K("4S")==0){if(L(v.2L[\'1N\'])){z=\'1N\'}}2C{if(y!==1H){4G(v.2L[z]+"(\'"+x+"\',\'"+v.id+"\',\'"+y+"\')")}F{4G(v.2L[z]+"(\'"+x+"\',\'"+v.id+"\')")}}2k(e){1l("2L",e,x)}}}F{if(v.2L==\'\'){v.2L="xZ"}2C{if(y!==1H){4G(v.2L+"(\'"+x+"\',\'"+v.id+"\',\'"+y+"\')")}F{4G(v.2L+"(\'"+x+"\',\'"+v.id+"\')")}}2k(e){1l("2L",e,x,y)}}}}if(o.6A&&v.tD==1){if(o.yk){2C{o.yk.fm.lI({1q:x,6X:y},"*")}2k(e){}}}if(v.BX==1&&li!==1){if(x&&22(v.xn)){B pm=v.xn.1P(/\\s+/ig,\'\').2g(\',\');if(pm.K(x)==-1){J}}B zv={1q:x,Z:o.O?(x=="3r"?o.sP:o.O.Z()):0};if(y!=1H){zv["21"]=y}if(x=="1h"||x=="Z"){zv["1h"]=o.O.1h()}if(x=="1y"||x=="7q"){zv["1y"]=v.1y}if(x=="1C"){zv["id"]=3a("vg")}2C{1t.7H.lI(zv,\'*\')}2k(e){};B z=x;x=="6A"||x=="1A"||x=="4e"?z=x+"ed":\'\';x=="1r"?z="Mo":\'\';x=="2Z"?z="a2":\'\';x=="4j"?z="2H":\'\';x=="7q"?z="Mq":\'\';x=="3r"?z="Ms":\'\';x=="Ml"?z="Ma":\'\';zv["1q"]=z;if(z!=\'\'&&z!=x){zv=46.5k(46.pS(zv));2C{1t.7H.lI(zv,\'*\')}2k(e){}}}};B nN=E(x,y){B ev=1K.M1(\'5G\');if(y!==1H){ev.6X=y}ev.M9(x,H,H);o.26.IK(ev)};G.2N=E(x,y,P){v.LV==1?1l(\'2N\',x,y):\'\';J 3a(x,y,P)};E 3a(x,y,P){if(L(o.U)&&1z(x)==\'47\'){if(o.fS==1){J}if(P){if(1z(P)==\'47\'){if(P.K("id:")==0){P=o.R.qe(P.1B(3),"3N");if(P){if(x=="jj"&&y=="LY"){P.yW()}}}}}if(x=="1r"||x=="3e"){if(L(y)){B 8S=I;if(1z(y)==\'47\'){y=y.1P(/(\\r\\n|\\n|\\r)/gm,"");B 2c=-1;if(y.K("[3r:")>-1&&y.LZ("]")==y.S-1){2c=y.1B(y.K("[3r:")+6,y.S-1);2c=2c.1B(0,2c.S-1);if(2c=="Z"){2c=o.O.Z()}F{2c=2P(2c)}y=y.1B(0,y.K("[3r:"));if(y==\'\'){if(o.O.1h()>0){o.U.3p(2c);o.U.2i();J}F{o.2c=2c;o.U.2i();J}}F{o.2c=2c}}if(y.K("[xm]")>-1){8S=H;y=y.1P(\'[xm]\',\'\')}if(y.K("#"+v.bb)==0){y=o[o.fd[0]](y)}if(y.K("#"+v.dg)==0&&y.K(v.eZ)>0){o[o.fd[1]](y,va,x);J}if(y.K("#0")==0){y=cg(y)}if(v.ap==1){y=ap(y)}if(y.K(".7g")==y.S-4){B 4q=fT(y);4q.c6=E(){if(G.f3==4&&G.6b==5c){2C{3a(\'1r\',46.5k(G.c5))}2k(e){}}};4q.dR();J}if(y.K("id:")==0&&L(o.2V)){B z=v9(y);if(L(o.2V[z])){o.R.zR(z);2c>-1?o.2c=2c:\'\';J H}F{J I}}if(y.K("M0:")==0){B z=y.1B(10);if(o.2f=="4t"){o.O.tN(z);J H}F{y=\'//iF.be/\'+z}}}if(x=="1r"){o.R.zS();o.U.ge(y,1H,1H,(8S?1:0))}if(x=="3e"){o.kQ=H;v.2T=0;o.U.ge(y,1,1H,(8S?1:0));o.R.3k(0,0);o.1A=I}}F{if(x=="1r"){o.U.2i()}if(x=="3e"){1z xj==\'E\'?xj():\'\'}}}if(x=="bx"){y?o.O.uU(y):\'\'}if(x=="4p"){if(L(y)){o.kQ=H;o.U.ge(y,1,1)}F{o.O.nE()}}if(x=="2Z"){if(o.1r){o.U.2O();o.U.oW()}if(L(y)){if(y==1){2C{if(o.1N){o.1N.2Z()}if(o.a8){o.a8.2Z()}}2k(e){}}}}if(x=="nz"&&L(y)){o.1A&&o.8w?o.8w.M3(y):\'\'}if(x.K("M4")==0){if(o.1N){o.1N.M5(x.1B(6),y)}}if(x=="M6"){J o.dI}if(x=="7Y"){o.7Y.hn();o.7Y=1C rR();if(L(y)){o.7Y.7g(y)}F{if(v.x6==1){o.7Y.7g(v.xe)}F{o.7Y.7g("M7 8u")}if(v.xE==1&&L(v.xB)){o.bv=1C xy()}}}if(x=="6f"){!o.1A?o.R.mX():\'\';o.R.7r();o.R.zZ("sq")}if(x=="dP"){o.1r?o.U.2O():o.U.2i()}if(x=="2h"){v.4p=0;v.2T=0;o.O.nh();o.U.9G()}if(x=="5f"){o.Z=o.O.Z();o.U.dJ()}if(x=="7S"){if(v.8F){if(v.8F.on==1&&v.8F.M8==1){o.U.kN()}}}if(x=="nB"&&L(y)){if(o.4b){o.4b.2N(y)}}if(x=="3y"){o.R.Dv()}if(x=="FA"&&L(y)){if(v.1N==1){if(y.K(\'js:\')==0){v.51=y;v.eN=H;o.U.rc("51")}F{if(o.p!=\'\'){B sv=46.5k(ba(o.p));W(B l in sv){if(sv.2e(l)){if(L(sv[l].id)){if(y==sv[l].id){v.51=\'Fz\'+(L(sv[l][\'qM\'])?\'qM\'+sv[l][\'qM\']:\'\')+y+\'3V\'+sv[l].5Y;v.eN=H;o.U.rc("51")}}}}}}}}if(x=="Fx"){1z xF=="E"?xF(y):\'\'}if(x=="xO"&&y){v.xO=y;o.2M?o.2M.Fp():\'\'}if(x=="4j"){o.U.4C()}if(x=="6i"){if(L(y)){o.U.aW(y)}F{J o.4R[o.8N]}}if(x=="pZ"){if(v.8F&&o.92){if(v.8F.92==1){J 2u.5r((o.92.6W(Fo).S-1)/2u.5r(o.O.1h())*1w)}}}if(x=="gU"){J o.4R}if(x=="7q"){o.U.5j()}if(x=="uL"){if(L(y)){v[x]=y;o.U.gN()}}if(x=="a0"){J o.2S}if(x=="v3"){J o.ab?H:I}if(x=="4a"){J o.O?o.O.53():I}if(x=="DJ"){J v.xz==1?(v.Fk==1?o.8B.4v(1):o.8B.4v(0,-1)):o.8B}if(x=="AN"){o.9A?o.3I.bs():o.3I.hb(2r(o.Fj,(o.3I.Fi()==0?1:0)))}if(x=="eh"){J o.9a}if(x.K("42:")==0&&y){v[x.1P(\'29:\',\'3V\')]=y;o.U.oW()}if(x=="Fh"){J o.fw}if(x=="8j"){J o.6h}if(x=="1y"||x=="Fg"){if(L(y)){if(1z y=="47"){if(y.K("+")==0){y=v.1y+3l(y.1B(1))}F{if(y.K("-")==0){y=v.1y-3l(y.1B(1))}}}if(y>=0&&y<=1){o.U.3q(y)}}J o.2H?0:v.1y}if(x=="2H"){J L(o.2H)?o.2H:I}if(x=="Ff"){o.R?o.R.A6(y):\'\'}if(x=="d7"){y<2?y=\'\':\'\';if(22(o[\'u\'+y])){B x2=46.5k(ba(o[\'u\'+y]));B v2=o.v0?gw(o.v0):{};v=v2;v=7T(v,x2);v=7T(v,2q);v=7T(v,o.pY);B qD=I;if(o.R.al()){o.R.6E();qD=H}B qB=I;if(o.R.e0()){o.R.9v();qB=H}o.R.4s();o.R=28;o.R=1C pJ();if(o.O.6b()=="8Z"){o.R.2i()}o.R.3q(v.1y);if(L(v.29)){ak(v.29)}if(qD){o.R.6E()}if(qB){o.R.9v()}if(o.1O){o.R.7y()}o.R.3k(o.O.Z(),o.O.1h());8q()}}if(x=="pV"){J v.pV}if(x=="3Z"){o.R.3Z(H)}if(x=="Fc"){o.R.Dm()}if(x=="Dn"){8q()}if(x=="2j"){o.O.5M(x)}if(x=="3r"){if(L(y)){if(1z y=="47"){if(y.K("%")>-1){y=2P(y.1B(0,y.K("%")));y=o.O.1h()*y/1w}F{B jR=o.O.Z();if(o.2M&&!o.1A){if(!o.2M.h7){B f=o.2M.8L();if(f.t&&f.d){jR=f.t;o.2M.h7=H}}}if(y.K("+")==0){y=jR+3l(y.1B(1))}F{if(y.K("-")==0){y=jR-3l(y.1B(1))}}}}y=y*1;y<0?y=0:\'\';if(o.O.1h()>0){y>o.O.1h()?y=0:\'\'}if(!L(o.1N)&&!L(o.4w)&&o.O.1h()>0){o.2c=1H;o.U.3p(y,H);o.U.mA()}F{o.2c=y}}}if(x=="FB"){7p.1l(y);y?v.1D.3r=y:\'\'}if(x=="1O"){!o.1O?o.U.7y():\'\'}if(x=="oh"){o.1O?o.U.6z():\'\'}if(x=="Fm"){J o.1O}if(x=="3Y"){J o.2E+\'/\'+o.3L}if(x=="FC"){J o.O?o.O.3Y():1H}if(x=="FU"){if(L(o.cV)){o.cV.Do()}}if(x=="D6"||x=="G8"){if(L(o.cV)){o.cV.Un()}}if(x=="Z"||x=="tl"){B gz=o.O?o.O.Z():0;if(o.2M&&v.aE==1&&!o.1A&&gz==0){B f=o.2M.8L();if(f.t){gz=f.t}}J x=="tl"?cM(gz):gz}if(x=="G6"){if(o.fl){3a("1r","id:"+o.fl)}if(o.td){3a("3r",o.td);3a("1r")}}if(x=="1h"){J o.O?o.O.1h():0}if(x=="6u"){J o.O?o.O.8I():0}if(x=="bF"){if(y){v.bF=y;o.R.k7()}}if(x=="7l"){if(L(y)){if(P){v.hd=8D(v.hd,y,P);if(o.2S.S==2){o.U.6J(v.hd)}}F{o.U.6J(y)}}F{J o.O?nm(o.O.mb()):0}}if(x=="9m"){if(L(y)){if(y==\'t0\'){J o.5t*1}if(P){v.qy=8D(v.qy,y,P);if(o.6h.S==2){o.U.dv(v.qy)}}F{o.U.dv(y)}}F{J o.O?o.O.ub():0}}if(x=="G3"){J o.2f=="4t"}if(x=="oX"){if(o.5t>0){o.ij=o.5t}o.U.ge(o.3w[o.i0])}if(x=="8Z"){J o.1r}if(x=="G2"){J o.1A}if(x=="1i"){J o.1i[y]}if(x=="G1"){o.fS!=1?o.O.rv():\'\'}if(x=="id"){J v.id}if(x=="1l"){v.1l=y}if(x=="ko"){v.ko=y}if(x=="1Q"){o.O.w5()}if(x=="FZ"){o.O.x3();if(P){o.qx=8D(o.qx,y,P)}}if(x=="6n"){o.O.i6()}if(x=="7o"){o.O.bK()}if(x=="2q"&&v.nl!=1){7p.1l(2q)}if(x=="FX"&&o.3j){o.3j.6A()}if(x=="FV"&&o.3j){o.3j.5C()}if(x=="42"){if(L(y)){if(y==\'t0\'){J o.iJ*1}if(y==\'0/1\'){if(o.9A){o.qF=o.iJ;y=-1}F{y=o.qF?o.qF:0}}if(y.4T().S<3&&o.3I){o.3I.hb(y*1)}F{v.42=y;o.U.iC(y)}}F{J o.8B?o.8B[o.iJ]:\'\'}}if(x=="+42"&&v.42){if(L(y)){v.42+=\',\'+y;o.U.iC(v.42)}}if(x=="ag"){if(L(o.ag)){if(L(y)){o.ag.2N(y)}F{J o.ag.FQ()}}}if(x=="pL"){if(o.tK){J o.tK}F{J I}}if(x=="7s"){J o.O.7s()}if(x=="6P"){if(o.ah){o.ah.3T?o.ah.3T.3C(o.ah):\'\'}o.ah=1Z("2p");o.ah.id=y;o.ah.C.4k=FP;o.1M.1V(o.ah)}if(x=="Eh"){if(o.3S){B 4o=1Z("4o");B 3Y=o.O.3Y();4o.1g=3Y.1g>0?3Y.1g:o.8p;4o.1d=3Y.1d>0?3Y.1d:o.aS;Q(4o,{"1p":"2n","1c":-4o.1d,"1b":-4o.1g,"2o":"1R"});1K.8T.1V(4o);B 7j=4o.tu(\'2d\');7j.qU(o.O.8x(),0,0,4o.1g,4o.1d);B 7l=2;B g6=1K.1Z("4o");g6.1g=4o.1g*7l;g6.1d=4o.1d*7l;B gb=g6.tu("2d");gb.qU(o.O.8x(),0,0,4o.1g*7l,4o.1d*7l);if(v.FN==1&&L(v.qY)){!L(v.gk)?v.gk=20:\'\';!L(v.r4)?v.r4="3u":\'\';gb.4I=v.gk+"px FM, FL";gb.FK=3O(v.r4);gb.FH((v.qY=="gL"?o.gL:v.qY),v.gk,4o.1d*7l-v.gk-5)}7j.qU(g6,0,0,4o.1g,4o.1d);B 4d;2C{4d=4o.EC("7f/EA")}2k(e){7p.1l(e.8u);J I}J 4d}F{J I}}if(x=="3m"){J o.2f==x?o.O.iz():1H}if(x=="1v"){J o.2f==x?o.O.iy():1H}if(x=="1T"){if(!o.1r||v.da===0){o.O.8y(y);J H}F{J I}}if(x=="A8"){if(L(y)){y==\'1/0\'?y=1-2r(v.j2,0):\'\';v.j2=y;o.O.ee()}F{J 2r(v.j2,0)}}if(x=="1F"){if(L(y)){if(y==0){o.O.ee()}F{o.O.1F(y)}}F{J[o.3b.x,o.3b.y,o.3d.C.1b,o.3d.C.1c]}}if(x=="29"){if(L(y)){L(y)?v.29=y:\'\';o.U.ak(\'29\');J H}F{J v.29}}if(x=="Ez"){o.U.uQ()}if(x=="2U"){if(y){!o.fW?o.fW=[]:\'\';if(1z(y)==\'2W\'){y=o.fW.8d(y);x="X"}}}if(x=="X"){if(y){if(1z(y)==\'2W\'){2C{o.U.aT(y);J H}2k(e){J I}}F{if(y.K(".7g")==y.S-4||y.K(".7g?")>0){B 4q=fT(y);4q.c6=E(){if(G.f3==4&&G.6b==5c){2C{3a(\'X\',46.5k(G.c5))}2k(e){}}};4q.dR();J H}F{if(y==\'\'){o.U.aT([])}F{if(y==\'pZ\'&&o.fw>0){B 1L=2u.5r(((o.uO+(!o.R.an("pZ")?o.O.Z():0))/o.fw)*1w);if(1L<o.pR||1L>1w){J o.pR}F{o.pR=1L;J 1L}}}}}}}if(x=="56"){o.R?o.R.9e():\'\'}if(x=="9V"){o.R?o.R.df():\'\'}if(x=="4Q"){o.R?o.R.es(y):\'\'}if(x=="4Q?"){J o.7C?[o.F0,o.EX]:0}if(x=="dV"){o.O?o.O.dV():\'\'}if(x=="kt"){if(L(y)&&L(o.2V)){!o.1r?v.2T=0:\'\';W(B j in o.2V){if(o.2V.2e(j)){if(o.2V[j].dW==y){y=j}}}if(L(o.2V[y])){o.R.Am(y);J H}F{J I}}}if(x=="EW"){B 1L=[];if(L(o.2V)){W(B j in o.2V){if(o.2V[j].7c&&o.2V[j].ww==-1){1L.2U({29:o.2V[j].29,id:o.2V[j].id})}}}J 1L}if(x=="vg"){if(o.9R){J o.2V[o.9R].dW?o.2V[o.9R].dW:o.9R}}if(x=="EN"){if(o.2V){J dx.9E(o.2V).S}F{J-1}}if(x=="q8"){if(L(o.q8)){J o.q8}}if(x=="EL"){o.R.e5(y)}if(x=="EM"){o.O.fh()}if(x=="1m"){if(y=="on"){v.1m.1k=0}F if(y=="bs"){v.1m.1k=1;o.R.dq()}F{o.R.et()}}if(x=="EO"){o.R.6E()}if(x=="EQ"||x=="ER"||x=="ES"){if(L(y)){o[\'EV\'+x.4v(-1)]=v[x]=y*1;o.R.fx(\'3z\'+x.4v(-1))}F{J v[x]}}if(x=="4A"){o[x]=H}if(x=="EY"){if(o.1N){J H}F{J I}}if(x=="EZ"){if(o.1N){J uI()}F{J I}}if(x=="F2"){if(o.1N){J o.1N.2Z()}F{J I}}if(x=="F3"){if(o.1N){J o.1N.v4()}F{J I}}if(x=="EU"){if(o.1N){o.1N.EJ()}F{J I}}if(x=="EF"){if(o.1N){o.1N.4j()}F{J I}}if(x=="4W"){if(P){v.4W=8D(v.4W,y,P);o.O.4W()}F{J v.4W}}if(x=="7V"){if(L(P)){v.7V=8D(v.7V,y,P)}F{if(L(y)){y==\'0/1\'?y=1-v.7V:\'\';v.7V=y}F{J v.7V}}}if(x=="de"){if(L(P)){v.de=8D(v.de,y,P)}F{if(L(y)){v.de=y}F{J v.de}}}if(x=="i7"||x=="lH"){B z="dX";x=="lH"?z="lF":"";if(L(P)){v.X[z]=8D(v.X[z],y,P)}F{if(L(y)){y==\'0/1\'?y=1-v.X[z]:\'\';v.X[z]=y}}J v.X[z]}if(x=="hd"){if(o.2S.S==2){v.hd=o.2S[o.2J];v.hd=8D(v.hd,y,P);if(o.2S[0]==v.hd){o.U.6J(0)}F{o.U.6J(1)}}}if(x=="v"&&y){if(y.K(\'3e\')==0||y.K(\'bk\')==0){J}J v[y]}if(x.K("aJ:")==0){B xx=x.1B(7);if(1z(y)==\'2W\'&&1z(v[xx])==\'2W\'){W(B yy in y){if(y.2e(yy)){v[xx][yy]=y[yy]}}}F{if(x.K(\'BZ\')==-1){v[xx]=y}}J H}if(x.K("1u:")==0){o.R.Ds(x.1B(5),y)}if(v.BG==1&&x.K("1S")==0&&y){j4(\'4L, 4L > *{--7k\'+x+\':\'+5O(y,v[y.1P("1S","6r")+\'a\'])+\'}\')}if(x=="EB"){J o.O?o.O.9y():\'\'}if(x=="Ev"){J o.6S+\' \'+o.fZ}if(x=="fZ"){J o.fZ}if(x=="m9"){J o.m9}if(x=="ve"){J o.ve}if(x=="5n"){J o.5n}if(x=="EH"){J o.1N?o.ue:1H}if(x=="8v"){o.U.kl();v.1D.on=0;if(v.sa==1){W(B i=0;i<4U.S;i++){if(4U[i]){if(4U[i].2N("id")==v.id){4U[i]=28}}}}W(B w in 1t){if(1t[w]==o.G){1t[w]=28}}if(1t.aN==v.id){1t.aN=\'\'}if(o.3j){o.3j.5C()}o.fS=1;o.26.2B=\'\';o.G=28}}F{J I}};E va(x,y){if(x&&y){3a(y,x)}}E 8D(x,y,P){B z=4c(y)+\'\';if(y){if(y.K("/")>0){B y2=y.2g("/");if(y2.S==2){if(x==4c(y2[0])){z=4c(y2[1]);if(P){P.9Z(1)}}F{z=4c(y2[0]);if(P){P.9Z(0)}}}}}J z}E fT(x){B 4q=1C uE();4q.6I(\'uy\',x,H);J 4q}E v9(y){B z=y.1B(3);if(o.2V){W(B j in o.2V){if(o.2V.2e(j)){if(o.2V[j].dW==z){z=j}}}}J z}E uI(){B x;if(o.1N){if(o.1N.qq()){x=o.1N}}if(!x&&o.4w){x=o.4w}if(x){B y={is:o.3f,1i:x.6X("G9"),6S:x.6X("6S"),HQ:x.6X("wa"),18:o.vY+(x.6X("uH")?x.6X("HR")+x.6X("uH"):\'\'),1G:x.6X("HY"),1h:x.6X("a3"),3e:x.6X("3e"),Z:(o.O?o.O.Z():\'\'),1y:x.I1(),id:o.ue};if(o.3f=="51"){y.HM=o.Hv}J y}}E v1(){if(\'d3\'in 5W){5W.d3.6l=1C HA({29:uq(2r(o.bn,v.29)),HB:[{2Y:2r(v.1T,\'\')}]});if(!o.tY){5W.d3.jF(\'1r\',E(){3a("1r")});5W.d3.jF(\'2Z\',E(){3a("2Z")});if(o.R.eV()){5W.d3.jF(\'HE\',E(){3a("9V")});5W.d3.jF(\'HI\',E(){3a("56")})}o.tY=H}}}B 1Z=E(x){B y=x;x==\'2p\'||x==\'qk\'?y=\'4L\':\'\';B z=1K.1Z(y);if(x==\'qk\'){Q(z,{"9c":"4V","2o":"6g"})}J z};B 1l=E(a,b,c,d,e,f,g){if(v.1l==1||v.qm==1){B x=a+(b!=1H?" "+b:"")+(c!=1H?" "+c:"")+(d!=1H?" "+d:"")+(e!=1H?" "+e:"")+(f!=1H?" "+f:"")+(g!=1H?" "+g:"");7p.1l("tX"+(v.qR==1?"2":"")+": "+x);if(v.qm==1&&L(1K.7h("tT"))){1K.7h("tT").2B+=x+\'<br/>\'}}};B BO=E(){if(v.lY==1&&L(v.bI)&&v.bI!=\'\'){B x=1K.1Z(\'d5\');x.7O=\'HK\';v.bI.K(\':\')>0&&v.bI.K(\':iZ\')==-1?v.bI=v.bI.1P(/:/ig,\':iZ@\'):\'\';x.6O=\'ec://lY.I5.9Q/HN?kB=\'+v.bI.1P(/,/ig,"&kB=").1P(/ /ig,"+");1K.I6.1V(x)+\'&2o=Ir\'}};B zP=E(2p,6r){B x=["pa","cl","Ct","eA","eE","It"];W(B y=0;y<x.S;y++){B z=2p.p1("2I "+x[y]);if(z.S>0){W(B y2=0;y2<z.S;y2++){z[y2].C.5F=6r}}}};B rl=E(){if(v.8F){if(v.8F.Iu==1){js("2a")}}};B 3t=E(Z){Z<0?Z=0:\'\';B uD=o.O.1h>=ek?H:I;B uG=o.O.1h>=uk?H:I;B 4X=2u.6R(Z/60);B 5P=2u.6R(Z-4X*60);B 6s=2u.6R(4X/60);B gH=2u.6R(6s/24);4X=4X-6s*60;if(gH>0){6s=6s-gH*24}if(v.jq==1&&o.O.53()){B d=1C 6L();J 5D(1C 6L(d.a6()+Z*2b).ux())}F{J 5D((gH>0?gH+\':\':\'\')+(6s>0||uG?6s+\':\':\'\')+((6s>0||uD)&&4X<10?\'0\':\'\')+4X+\':\'+(5P<10?\'0\':\'\')+5P)}};B cM=E(x){B 5P=2u.6R(x);B 4X=2u.6R(5P/60);B 6s=2u.6R(4X/60);4X=2u.6R(4X%60);5P=2u.6R(5P%60);6s>0&&4X<10?4X="0"+4X:"";5P=5P>=0?((5P>=10)?5P:"0"+5P):"f9";B 7E=(6s>0?6s+":":"")+(4X>=0?4X:"0")+":"+5P;if(v.jq==1&&o.O.53()){B d=1C 6L();J 5D(1C 6L(d.a6()+x*2b).ux())}F{J 7E}};B B4=E(){J B5((1t.6G!=1t.7H.6G)?1K.iA:1K.6G.6O)};B nm=E(x){if(x){x=x.4T();B qc=x.K(" <a4 C=\'1I");if(qc>-1){x=x.1B(0,qc)}}J x};B BM=E(x,y,z){B t;if(!wL(x)&&y){t=1K.1Z(\'lA\');y=="Iz"?y=x:\'\';t.2Y=y.K(\'//\')==-1?\'ec://\'+y:y;t.Is=1;if(z){t.5Z=z}B s=1K.aU(\'lA\')[0];s.3T.IA(t,s)}J t};B uq=E(x){if(x){if(1z(x)==\'47\'){x=x.1P(/<[^>]*>?/gm,\'\')}}J x};B wL=E(y){B x=I;B jn=1K.aU(\'lA\');W(B i=0;i<jn.S;i++){if(jn[i].2Y.K(y)>-1){x=H}}J x};B 5O=E(x,y,z){if(x){if(x.K(\'1S\')>-1||x.K(\'B\')>-1){if(L(y)&&L(z)){z.C.1I=y}J 3O(x)}F{x=x.1P(\'#\',\'\');B r=2P(x.S==3?x.4v(0,1).cj(2):x.4v(0,2),16);B g=2P(x.S==3?x.4v(1,2).cj(2):x.4v(2,4),16);B b=2P(x.S==3?x.4v(2,3).cj(2):x.4v(4,6),16);if(L(y)){J\'9T(\'+r+\', \'+g+\', \'+b+\', \'+y+\')\'}F{J\'yt(\'+r+\', \'+g+\', \'+b+\')\'}}}};B 6C=E(y){B x=y;if(v.zm&&v.zm!=1){x=y/v.zm}J x};B Q=E(e,o){if(L(e)){W(B Y in o){if(o.2e(Y)){if(o[Y]!=\'ID\'&&o[Y]!=1H){if(1z o[Y]==\'IE\'&&Y!=\'4I-j0\'&&Y!=\'1I\'&&Y!=\'4k\'){o[Y]+=\'px\'}if(Y.K("IF")>-1&&Y.K("Bz")==-1){o[Y]=3O(o[Y])}if(Y=="2t"||Y.K("jV")>-1){e.C[\'-ms-\'+Y]=o[Y];e.C[\'-oB-\'+Y]=o[Y];e.C[\'-3o-\'+Y]=o[Y];e.C[\'-o-\'+Y]=o[Y]}if(Y=="q3"){if(o[Y].K(" ")>-1){o[Y]=\'"\'+o[Y]+\'"\'}}if(Y=="6P-je"){e.C.IG(Y,o[Y],\'6N\')}F{e.C[Y]=o[Y]}}}}}};B pE=E(x,6r,b1,b2){6r=3O(6r);B y=2r(b1,1)*1;B z=2r(b2,1)*1;Q(x,{"2y":"IH-3A-5h(-II,"+6r+","+6r+" "+y+"px,9T(0,0,0,0),"+y+"px,9T(0,0,0,0) "+(y+z)+"px)"})};B 3O=E(c){if(c){c.K("1S")==0?c=\'B(--7k\'+c+\')\':\'\';J c.1B(0,1)!=\'#\'&&c.K("B")==-1&&c.K("yt")==-1?c="#"+c:c}F{J\'#bN\'}};B AU=E(x,1S,y){!1S?1S=\'#bN\':\'\';1S=3O(1S);B r=4J(l3,Iq);x=x.1P(/\\(vn\\)/g,r);x=x.1P(/\\(1S\\)/g,1S);x=x.1P(/\\(f4\\)/g,1+(v.Ih.1F-1)/2);B uw=x.1B(0,x.K(\'|||\'));B qh=x.1B(x.K(\'|||\')+3);B 8C=\'\';if(o.1i.3o){8C=qh.1P(/4E:/g,"-3o-4E:");8C=8C.1P(/4E-/g,"-3o-4E-");8C=8C.1P(/@un/g,"@-3o-un");8C=8C.1P(/2t/g,"-3o-2t")}y?y.2B=uw:\'\';j4(8C+qh)};B 6e=E(x,y,f){B z=I;if(x){W(B i=0;i<x.S;i++){if(x[i]){if(f){if(3l(y)==3l(x[i])){z=i;1j}}F{if(5D(x[i]).K(y)>-1){z=H}}}}}J z};B dF=E(x,y){B z=I;if(x&&y){W(B i=0;i<y.S;i++){if(5D(x).K(y[i])>-1){z=H}}}J z};B j4=E(x){if(o.Q){if(o.Q.uC){o.Q.uC.Ia=x}F{o.Q.1V(1K.CT(x))}}};B ix=E(x){Q(x,{"1p":"2n","1c":0,"1b":0,"1g":"1w%","1d":"1w%"})};B ro=E(x){Q(x,{"bX":"1R"})};B 4q=E(y,z){B x=1C uE();x.6I(\'uy\',y,H);x.c6=z;x.dR()};B Ic=E(x){if(x){W(B i=0;i<5;i++){if(x.Id=="Ie"){1j}F{if(x.uj){x=x.uj}}}}J x};B dB=E(z){B dB=1K.1Z("4d");if(o.j1.K(z)>-1){o.j1.2U(z);if(z.K("?")>0){z=z+\'&\'+2u.4J()}F{z=z+\'?\'+2u.4J()}}F{o.j1.2U(z)}dB.5V(\'2Y\',z);dB.5V(\'1d\',\'bh\');dB.5V(\'1g\',\'bh\')};B 3P=E(e,o){W(B Y in o){if(o.2e(Y)){e.5V(Y,o[Y])}}};B 8v=E(e){if(e){2C{e.3T.3C(e);e=28}2k(e){}}};B 4J=E(b0,6j){J 2u.6R(Ij.S>1?(6j-b0+1)*2u.4J()+b0:(b0+1)*2u.4J())};B lf=E(){J 2u.4J().4T(36).Ik(2,12)};B Il=E(x,y){x=dx.9E(x).Im(E(3X,Y){if(Y!=y){3X[Y]=x[Y]}J 3X},{});J x};B 4c=E(x){if(1z x=="47"){J x.1P(/^\\s+|\\s+$/gm,\'\')}F{J x}};B 4Q=E(x,y,z){B r=I;if(x){if(x.K(y)>-1){B r=x.1B(x.K(y)+y.S);if(z){if(r.K(z)>-1){r=r.1B(0,r.K(z))}}}}J r};B Io=E(x,n){if(n==0){J"#0"+9X.e(x)}if(n==-1){J 9X.e(x)}if(n==1){J"#1"+qj(9X.e(x),1)}};B sc=E(x){if(v[x]!=""){if(1z v[x]!="47"){o[x+\'o\']=v[x]}F{if(v[x].K("[{")==0){2C{v[x]=v[x].1P(/7k\'qt/ig,\'"\');o[x+\'o\']=4G(v[x])}2k(e){}}}}};B 4B=E(x){J 5D.qn(x)};B ba=E(x){if(x.1B(0,2)=="#1"){J 9X.d(qj(x.1B(2),-1))}F if(x.1B(0,2)=="#0"){J 9X.d(x.1B(2))}F{J x}};B A5=E(x){if(x){if(x.K(\'4O\')==-1&&x.K(\'.\')==-1&&x.S>1w&&x.K(\'21:\')==-1){x=\'21:7f/qJ;cA,\'+x}}J x};B 1k=E(x){x?x.C.5n="3g":\'\'};B 1n=E(x){x?x.C.5n="3H":\'\'};B 3i=E(x){if(x){if(bj.tP(x)){W(B i in x){if(1z x[i]=="2W"){x[i].C.2o="1R"}}}F{x.C.2o="1R"}}};B 5l=E(x){if(x){if(bj.tP(x)){W(B i in x){if(1z x[i]=="2W"){x[i].C.2o="6g"}}}F{x.C.2o="6g"}}};B 5U=E(x){J x?x.C.5n!="3g"&&x.C.2o!="1R":I};B 4F=E(s){if(1z s=="47"){if(s.K("px")>0){s=s.1B(0,s.K("px"))}}J 2P(s)};B 3g=E(x){J x.C.2o=="1R"};B 4h=E(o,x,y){o[x+\'1c\']=0;o[x+\'2Q\']=0;o[x+\'3v\']=0;o[x+\'1b\']=0;if(L(o[y])){B z=o[y].2g(" ");if(z.S==4){o[x+\'1c\']=z[0]?3l(z[0]):0;o[x+\'2Q\']=z[1]?3l(z[1]):0;o[x+\'3v\']=z[2]?3l(z[2]):0;o[x+\'1b\']=z[3]?3l(z[3]):0}}J o};B yN=E(x){if(x){x=x.1P(/ /ig,\'px \')}J x+\'px\'};B Hs=E(x,y){J v[x]&&v[x]!=\'\'?v[x]:y};B dO=5D.qn(65,66,67,68,69,70,71,72,73,74,75,76,77,97,98,99,1w,Hr,u1,Gy,Gz,GA,GC,GD,Gw,GH,78,79,80,81,82,83,84,85,86,87,88,89,90,GI,GJ,GL,GM,GF,Gu,Gk,Gt,Ge,Gg,vh,Gh,Gc);B 9X={8r:dO+"Gj+/=",e:E(e){B t="";B n,r,i,s,o,u,a;B f=0;e=9X.uf(e);jK(f<e.S){n=e.8A(f++);r=e.8A(f++);i=e.8A(f++);s=n>>2;o=(n&3)<<4|r>>4;u=(r&15)<<2|i>>6;a=i&63;if(lm(r)){u=a=64}F if(lm(i)){a=64}t=t+G.8r.5g(s)+G.8r.5g(o)+G.8r.5g(u)+G.8r.5g(a)}J t},d:E(e){B t="";B n,r,i;B s,o,u,a;B f=0;e=e.1P(/[^A-vd-z0-9\\+\\/\\=]/g,"");jK(f<e.S){s=G.8r.K(e.5g(f++));o=G.8r.K(e.5g(f++));u=G.8r.K(e.5g(f++));a=G.8r.K(e.5g(f++));n=s<<2|o>>4;r=(o&15)<<4|u>>2;i=(u&3)<<6|a;t=t+4B(n);if(u!=64){t=t+4B(r)}if(a!=64){t=t+4B(i)}}t=9X.ug(t);J t},uf:E(e){e=e.1P(/\\r\\n/g,"\\n");B t="";W(B n=0;n<e.S;n++){B r=e.8A(n);if(r<gF){t+=4B(r)}F if(r>Gr&&r<Gs){t+=4B(r>>6|GN);t+=4B(r&63|gF)}F{t+=4B(r>>12|uh);t+=4B(r>>6&63|gF);t+=4B(r&63|gF)}}J t},ug:E(e){B t="";B n=0;B r=0;B c1=0;B c2=0;B c3=0;jK(n<e.S){r=e.8A(n);if(r<gF){t+=4B(r);n++}F if(r>Ha&&r<uh){c2=e.8A(n+1);t+=4B((r&31)<<6|c2&63);n+=2}F{c2=e.8A(n+1);c3=e.8A(n+2);t+=4B((r&15)<<12|(c2&63)<<6|c3&63);n+=3}}J t}};B qj=E(s,n){s=s.1P(/\\+/g,"#");s=s.1P(/#/g,"+");B a=v8(o.y)*n;if(n<0)a+=dO.S/2;B r=dO.1B(a*2)+dO.1B(0,a*2);J s.1P(/[A-vd-z]/g,E(c){J r.5g(dO.K(c))})};B v8=E(x){x=x.2g(4B(61));B j3=\'\';B c1=4B(vh);B pP;W(B i in x){if(x.2e(i)){B pX=\'\';W(B j in x[i]){if(x[i].2e(j)){pX+=(x[i][j]==c1)?4B(49):4B(48)}}pP=2P(pX,2);j3+=4B(pP.4T(10))}}J j3.1B(0,j3.S-1)};B L=E(x){J x!=28&&1z(x)!=\'1H\'&&x!=\'1H\'};B 2r=E(x,y){J L(x)?x:y};B 22=E(x){J L(x)&&x!=-1&&x!=\'\'};B Hn=E(x,y){J 22(x)?x:y};B gw=E(x){if(1z x=="2W"){x=46.5k(46.pS(x))}J x};B db=E(el){B x=el.vr().1b+(1t.vp?1t.vp:1t.Hp);J x};B g2=E(x){v.Hq==1&&22(v.vq)?x=v.vq:\'\';J x};B g0=E(el){Hj eA=el.vr();J eA.1c+1t.GY};B 8b=E(x,y){if(x!=\'\'){if(v.H6==1||y==\'GR\'){1t.6I(x)}F{if(v.GT==1||y==\'1c\'){1t.7H.6G.6O=x}F{1t.6G.6O=x}}x=\'\'}};B qf=E(){if(v.3M==1){o.3M?o.1M.3C(o.3M):\'\';o.3M=28}};B D2=E(){B kC=I;o.1i.tv?1l("tv"):\'\';o.1i.1W?1l("1W"+(o.1i.3E?\' 3E\':\'\')):\'\';G.ak=E(x){o.R?o.R.29(x):\'\'};G.5e=E(x){if(x){if(1z(x)==\'47\'){x=hq(x)}if(1z(x)==\'47\'){x=x.1P(/(\\r\\n|\\n|\\r)/gm,"");if(x.K("[{")==0){2C{x=x.1P(/7k\'qt/ig,\'"\');x=46.5k(x)}2k(e){x="vN 46"}}}if(1z(x)==\'2W\'){o.2V=[];o.fW=gw(x);o.X=s8(x);if(o.X.S>0){if(v.X.GU==1&&!v.6c){B 9E=dx.9E(o.2V);B pU=9E.4v(-1)[0];pU?v.6c=pU:\'\'}B y=wh();if(y){x=y.3e;o.bn=y.29;o.R?o.R.Dx(y.29):\'\';if(22(y.1T)){if(o.O){o.O.8y(y.1T)}F{v.1T=y.1T}}if(L(y.vj)){y.42=y.vj}if(L(y.1A)){if(y.1A=="2M"&&!o.1A){}F{v.1A=o.2c=y.1A}}gs("GX");if(L(y.id)){o.9R=y.id}B sx=["42","pV","pW","18","H1","H2","H3","uL","gd","H5","6U","7S","bF","5C","sd","4e","3R","NK","i3","1h","5N","8K","1y"];if(L(v.aq)){if(v.aq.Mw==1&&v.aq.sD==1){sx.2U("29");sx.2U("t1");sx.2U("t2");sx.2U("t3");sx.2U("t4");sx.2U("t5")}}W(B i=0;i<sx.S;i++){if(L(y[sx[i]])){v[sx[i]]=y[sx[i]];o.pY[sx[i]]=y[sx[i]]}}W(B uv in y){if(uv.K("TL")==0){v[uv.1B(7)]=y[uv]}}hQ(y);if(sx.K(\'29\')>0){if(v.aq.yJ==1){o.ll=v.aq.yK;o.U.nW(y)}o.U.ak(\'29\')}if(L(y.1y)){1E(E(){o.U.3q(y.1y)},5c)}if(o.R){o.R.aT(o.X);if(v.8K){o.R.Dt()}}if(o.4x){o.4x.yh()}}F{}}}if(1z(x)==\'47\'){x=hq(x);if(x){if(x.K("#"+v.bb)==0){x=o[o.fd[0]](x)}if(x){if(x.K("#"+v.dg)==0&&x.K(v.eZ)>0){x=o[o.fd[1]](x)}if(x){if(x.K("#0")==0){x=cg(x)}x=hq(x)}F{x=\'\'}}}if(v.ap==1){x=ap(x)}if(x==\'\'){1l("9P 3e");o.7m=H;js("2j","9P")}o.2S=[];o.8c=[];o.6h=[];o.i0=0;o.2J=0;o.5t=0;o.8a=0;v.gG==\'\'?v.gG=\',\':\'\';if((x.K(v.gx)>-1&&x.K(v.b6)>-1)||L(v.a0)){o.3w=x.2g(v.gG)}F{o.3w=[x]}o.8j=[];if(L(v.a0)){B a0=v.a0.2g(v.gG)}if(o.3w.S>0){B q=-1;W(B i=0;i<o.3w.S;i++){o.3w[i]=4c(o.3w[i]);if(o.3w[i]!=\'\'){if(o.3w[i].K(v.gx)==0&&o.3w[i].K(v.b6)>1){o.2S[i]=o.3w[i].1B(o.3w[i].K(v.gx)+v.gx.S,o.3w[i].K(v.b6)-v.b6.S);o.3w[i]=o.3w[i].1B(o.3w[i].K(v.b6)+v.b6.S)}F{if(L(v.a0)){o.2S[i]=L(a0[i])?a0[i]:\'\'}F{o.2S[i]=i+1}}B is=0;if(L(v.4D)&&q==-1){if(5D(v.4D).K("hx:")==0){if(v.4D.1B(4)*1==i){is=1}}if(v.4D==o.2S[i]){is=1}if(v.4D=="6j"&&i==o.3w.S-1){is=1}}if(L(o.4D)){if(o.4D==o.2S[i]){is=1;q=i}}if(is==1){o.i0=i;o.2J=i}o.3w[i]=q0(o.3w[i])}}}F{o.3w[0]=q0(o.3w[0])}J o.3w[o.i0]}}F{J x}};E q0(x){if(L(v.iR)&&x.K("//")==-1){x=v.iR+x}J x};G.uQ=E(){if(o.X){B x=o.X.TD();W(B i=0;i<x.S;i++){x[i].wu=i}o.X=x;o.R.aT(o.X)}};E hQ(y){B q4;W(B i=1;i<6;i++){B t="1u"+i;if(L(y[t])){v[t]=y[t];q4=H}}if(q4&&o.R){o.R.Dq()}}G.hQ=E(x){hQ(x)};G.aT=E(x){if(1z(x)==\'2W\'){o.2V=[];o.fW=gw(x);o.X=s8(x);if(o.R){o.R.aT(o.X)}}};G.ge=E(x,y,z,no){if(!L(y)){o.2T=H;o.bu=H}!L(z)?v.4p=0:\'\';v.1h=1H;v.4e=1H;!2q.3R?v.3R=1H:\'\';o.7m!=2?o.7m=I:\'\';o.6l=I;o.7o=I;o.7K=0;o.g8=[];o.sC=I;o.n3=I;o.yb=I;o.7J=1H;o.cY=[I,I,I];o.Tz=lf();o.D4=0;o.aw=0;o.92?o.92=[]:\'\';o.2f!=\'7k\'&&o.3I?o.3I.5C():\'\';if(o.uT){o.uT=[];o.Tw=[]}o.9U=0;o.Tv=0;if(o.bv){o.bv.5C()}if(o.O.6b()=="8Z"){G.9G()}if(o.4Q&&o.7C){o.R.es()}if(L(o.3y)){o.3y.4s()}if(L(o.9N)){2w(o.9N)}js("1C");if(v.1N==1&&no!=1){o.U.dY();o.U.dY(\'51\')}x=G.5e(x);if(y==1){o.2f=\'\';5B();1E(E(){o.O.xl()},1w);o.q6=H}o.O.5e(x);if((o.1i.1W||o.1i.5R)&&!L(y)){o.U.2i()}if(L(o.fU)){o.3b={x:1,y:1,x0:1,y0:1};o.O.ee()}y!=1?8h("1r","2i"):\'\';o.O.eT();o.R.f1();o.R.hh();o.R.5m();o.cH?o.cH.zQ():\'\'};G.nW=E(x){B y=I;if(x&&o.ll){v.29=o.ll;W(B i=1;i<6;i++){if(L(x[\'t\'+i])){v.29=v.29.1P("{"+i+"}",x[\'t\'+i]);y=H}}}J y};G.kM=E(){if(v.2T==1&&!v.uV||o.2T){if(v.gJ==1){1E(E(){o.U.2i()},4l)}F{G.2i()}v.uV=1;o.2T=I}gN()};G.gN=E(){gN()};E gN(){if(v.s0==1){if(1z uW!=="1H"){o.th=1C uW()}}}G.eT=E(){B x=I;if(o.1i.1W){x=H;if(v.CM==1&&o.1i.5A){x=I}if(v.CQ==1&&o.1i.gy){x=I}if(v.CL==1&&o.1i.3E){x=I}if(v.Tr==1&&o.1i.bD){x=I}}if(v.Tq==1&&o.1i.tv){x=H}J x};G.sr=E(){o.O.3q(v.1y);if(o.2H){o.O.4C()}o.6l=H;o.R?o.R.5m():\'\';if(!o.1r&&!o.1A){v.4b==1?o.4b.2N("2Z"):\'\'}if(o.4i&&o.3S){o.3j.uZ();o.3j.Go()}if(v.1N==1){if(v.ty!=1&&v.eN==1){!L(o.1N)?e4("51","6l"):\'\'}}};G.tx=E(){!o.f5?8k(H):\'\'};E 8k(x){o.f5=H;if(o.R){if(o.R.al()){o.R.6E()}}if(o.4x){o.4x.ac()}if(o.7O){o.7O.ac()}!x?o.O.2i():\'\';if(!o.sC){1E(E(){o.O.eT()},4l)}!o.1r?o.R.2i():\'\';v.4b==1?o.4b.2N("1r"):\'\';v.1N==1?o.U.dY(\'aQ\'):\'\';if(o.1i.1W){o.R.dM()}if(L(o.3y)){o.3y.To()?o.3y.Tn():\'\'}}G.2i=E(8S){if(!o.1r&&o.O){o.cB=H;o.ht=I;o.6m=I;v.5f==9?v.5f=1:\'\';2w(o.wi);B 2h=I;if(o.2f=="4t"){if(!o.O.rA()&&v.2T!=1&&v.4p==1){2h=H;if(1t[\'TQ\']){v.2T=1;o.2T=H;o.O.rv()}}}if(v.6d==1&&v.sX==0){o.U.jD();2h=H}if(o.7m||2h){if(o.7m){6q("5Y")?hy(2):\'\'}}F{o.kQ=I;o.bu=I;wz(!o.1A);o.7Y.hn();if(!o.1A){js("1A");o.1A=H;if(v.1m.kO==1){1E(E(){o.R.lV()},1w)}if(v.1m.6o>0&&v.2T==1){o.c8=H;1E(qQ,v.1m.6o*2b)}if(v.Uo==1&&v.Um){Ul()}W(B i=0;i<o.a9.S;i++){if(v[\'C6\'+o.a9[i]]==1){3D.96("C7"+o.a9[i],6L.kH())}}if(v.Uk==1&&v.Ui){Ud("1A")}if(o.3I){o.3I.1A()}js("1C");o.sA?o.R.Dr(o.sA):\'\';o.R.mX();o.R.5m();8h("1r","2i");o.1i.1W?v1():\'\';o.ab?8h("v3","U9",1):\'\'}F{if(o.q6){8h("1r","2i");o.q6=I}F{8h("v4","U7")}}if(v.tO==1&&!o.1O){B dd=1C 6L();B tt=dd.a6();if(tt-o.bB<fL){if(!o.1i.3E&&(v.tM!=1||o.1i.1W)){G.7y()}}}if(o.9A){if(v.sL==1){5l(o.42);5l(o.sN)}}if(o.bv){o.bv.5C()}if(8S!=1&&6q("5Y")||6q("hg")){hy(2)}F{if(v.8b==1&&L(v.sU)&&!L(2q.8b)){8b(v.sU);2h=H}if(!2h){1l("2i");o.O.1h()>0?o.R.3k(o.O.Z(),o.O.1h()):\'\';if(!o.q9){o.q9=H;if(v.1m.6o>0&&v.2T==1){o.c8=H;1E(qQ,v.1m.6o*2b)}}B qu=I;if(o.O.Z()>1&&v.jc==1&&8S!=1&&!6w()&&!L(o.1N)&&!L(o.4w)){qu=6q("aQ")}if(qu){6w()?8k(I):\'\'}F{8k(I)}}}}}F{o.O?o.O.2i():\'\'}};E qQ(){o.c8=I;o.R.5m()}G.2O=E(){if(o.1r){o.cB=I;1l("2O");o.O.2O();o.R.2O();js("2Z");v.sg==1?5B():\'\';v.mQ==1?hO():\'\';v.4b==1?o.4b.2N("2Z"):\'\';if(o.9A){if(v.sL==1){3i(o.42);3i(o.sN)}}if(!L(o.1N)&&!L(o.4w)&&v.jc==0){if(6q("aQ")){}F{if(v.tz!=1&&v.k0==1){e4("aK","2Z")}}}if(6w()){o.ht=H}o.f5=I}};G.4C=E(){o.O.4C();o.R.4C();o.2H=H;js("4j")};G.5j=E(){o.O.5j();o.2H=I;o.R.5j();o.O.3q(v.1y);js("7q")};G.3q=E(x,y){if(o.R){x<0.U1?x=0:\'\';x>1?x=1:\'\';if(x<=0){G.4C();v.1y=0;x=0}F{if(o.2H){G.5j()}v.1y=x}js("1y",x);o.R.3q(x,y);o.O.3q(x)}};G.7r=E(){o.R.7r()};G.7U=E(){o.R?o.R.7U():\'\'};G.U0=E(){G.7U()};G.se=E(){o.U.59();G.7U()};G.3k=E(Z,1h){if(o.2M&&!o.1A){B f=o.2M.8L();if(f.t&&f.d){Z=f.t}}o.R?o.R.3k(Z,1h):\'\'};G.xu=E(Z,1h){if(o.2c>0&&o.2f!="4t"){o.U.3p(o.2c,I);o.2c=1H}};G.ef=E(){B d=1C 6L();o.bB=d.a6();B x=I;if(o.R.al()&&v.1e.9F!=1){o.R.ae();x=H}if(o.4x){if(o.4x.DE()){o.4x.ac();x=H}}if(v.X.9F==0){if(o.R.e0()&&v.X.kI==1){o.R.9v();x=H}}if(v.8b==1&&L(v.sW)&&!L(2q.8b)){8b(v.sW);x=H}if(o.2H&&v.iI==1){o.U.5j();v.iI=0;x=H}if(!x){if(v.1D.on==1&&v.1D.2m==1&&v.1D.nt==1){5E(\'1r\',(o.1r?0:1))}G.dh()}};G.E7=E(){if(o.R.al()){o.R.6E()}};G.dh=E(){if(o.O.6b()=="8Z"){js("Da");v.TZ==1?G.kl():G.2O()}F{js("Dy");G.2i()}8E()};G.3p=E(8s,fM){if(8s<o.O.1h()){if(v.cN.TY==1){if(8s>o.O.Z()){J}}if(v.3R>0){8s<v.3R?8s=v.3R:\'\'}1l("3p",8s);o.sP=8s;o.O.3p(8s);if(fM){o.R.3p(8s,o.O.1h())}o.gI=H;o.dC=o.O.Z();8E(o.dC)}};G.vO=E(18,6F,sH){if(o.O.6b()=="8Z"&&o.d2!=\'wl\'){2O();if(o.1O&&sH){o.U.6z()}}1t.6I(18,6F)};G.kN=E(){if(v.1N==1&&!o.1A){if(6q("5Y")){o.pd=H;J}}B x=o.O.9y();if(L(v.7S)){x=v.7S}if(x!=\'\'){js("7S");B gQ=1t.6I(x,(v.TW==1?\'TU\':\'qS\'));gQ.4A()}};G.59=E(x){B Z=o.O.Z();B 1h=o.O.1h();if(!o.1A&&o.2c>0){Z=o.2c}o.R.fj(Z,1h,x)};G.mA=E(){B Z=o.O.Z();B 1h=o.O.1h();B 8O=1h>0?Z/1h:0;B 9U=2u.lq(8O*1w);if(!o.gI){o.R?o.R.fj((o.2c>0?o.2c:Z),1h):\'\'}F{Z!=o.dC&&o.dC!=-9?o.gI=I:\'\'}if((v.ga==1||v.sO==1)&&1h>0){kf("qT","2i 25%",8O,0.25);kf("qV","2i 50%",8O,0.50);kf("qX","2i 75%",8O,0.75)}W(B i=0;i<3;i++){if(!o.cY[i]){if(8O>=i*0.25+0.25){t7(i)}}}v.qZ==1?1l(1,Z,1h):\'\';if(v.5f==1||v.r3>0){if(o.1r){B z=I;B le=I;if(v.sY==1&&v.5f==1){if(!o.O.53()){z=H}}if(Z>0){if(Z==o.Z&&!z){le=H}F{o.7K=0}o.Z=Z}F{if(v.SK==1){B ld=o.O.8I();v.qZ==1?1l(2,ld,o.lv):\'\';if(!z){if(ld==o.lv){le=H}F{o.7K=0}}o.lv=ld}}if(le){o.7K++;if(v.5f==1){v.qZ==1?1l(3,o.7K):\'\';if(o.7K==v.sb*(2b/o.iB)){o.U.dJ()}}F if(v.r3>0&&o.O.mF()>1){if(o.7K==v.r3*(2b/o.iB)){o.O.5M(\'OR mE\')}}}}}if(v.8F){if(v.8F.92==1&&1h>0){!o.92?o.92=[]:\'\';o.92[2u.5r(Z)]=1}}if(v.1N==1){if(v.ty!=1&&v.eN==1){!L(o.1N)?e4("51",Z,1h):\'\'}if(v.tz!=1&&v.k0==1){!L(o.1N)?e4("aK",Z,1h):\'\'}}if(v.tk==1&&v.r7>0){if(Z>=v.r7){if(!L(o.1N)){if(6q("hg")){o.O.2O();o.R.2O()}v.r7=0}}}gs("1r");if(v.6d==1&&v.sX>-1){SB(Z,1h)}if(v.SA==1&&v.Sz){if(1z tF!=="1H"){tF(Z)}}if(o.9A){8E(Z)}if(o.4M&&v.aE==1){if(o.2M){!o.2c?o.2M.nZ(Z,1h):\'\'}}if(o.7C){o.4Q?o.4Q.1r(Z):\'\'}if(L(v.4e)){B ed=v.4e;if(6e([v.4e],\'-\')){ed=1h}if(ed>0&&Z>ed){o.O.2O();o.O.3p(v.1A>0?v.1A:0);o.U.ju()}}if(L(v.5C)){B r1=v.5C.2g(",");W(B i=0;i<r1.S;i++){B r2=r1[i].2g("-");if(r2.S==2){if(Z>r2[0]&&Z<r2[1]){o.O.3p(r2[1]*1+(o.1i.5R?1:0))}}}}if(o.9U!=9U&&9U>0){if(v.Sr==1){if(1z tG!=="1H"){tG(Z,1h,9U)}}if(v.Sp==1&&o.dt){if(1z tJ!=="1H"){tJ()}}}o.9U=9U};E t7(x){o.cY[x]=H;if(v.aE==1&&v.Sl==1&&v.t8==x){if(o.4M&&o.9R){o.2M?o.2M.Sk(o.9R):\'\'}}js("cY",(x+1)*25+\'%\')}E kf(x,y,t,p){if(!L(o.g8[y])){if(t>p){8h(x,y,1)}}};G.dJ=E(){o.7K=0;L(o.9N)?2w(o.9N):\'\';if(v.Si==1){js("5f")}F{o.2c>0||o.O.53()?\'\':o.2c=o.O.Z()+(v.SL>0?1:0);B ta=o.R.e0();js("5f");o.O.5f();ta&&v.X.kI==1?o.R.e5():\'\'}};G.xU=E(){o.R.fj(0,0);o.R.nP(0,0);o.U.3k(0,0);o.R.7U()};G.mU=E(){if(o.O){B Z=o.O.8I();if(v.Sw==1){js("8I",Z)}B 1h=o.O.1h();o.R?o.R.nP(Z,1h):\'\'}};G.ju=E(){js("SM");js("cY","1w%");o.6m=H;if(v.7V==1){if(o.2f=="4t"){G.9G()}v.1N==1?o.U.dY(\'5Y\'):\'\';if(v.1A>0){o.U.3p(v.1A);o.2c=1H}G.2i()}F{if(o.O.53()||o.2f=="4t"||o.2f=="rt"){G.9G()}F{if(v.tj==1){o.U.3p((v.1A>0?v.1A:0),H);if(o.1i.ie){o.O.2O()}}}o.R.8t();v.tk==1?v.Td=1:\'\';if(6q("hl")||6q("pg")){}F{7Z()}}js("4e")};G.7y=E(){B 2h=I;B 2j=I;o.xI=I;o.8n=H;1E(E(){o.8n=I},hD);W(B x in o.5u){if(o.5u.2e(x)){if(L(o.5u[x])){2C{o.5u[x].tm()}2k(e){}}}}2C{o.b5=H;if(((o.1i.3E&&v.dy==1)||(o.1i.bD&&v.At==1))&&o.3S&&!o.9a){B x=o.O.8x();if(x){if(x.Tb){cr();2h=H}}}if(!2h){B jU;B y=o.1M;if((o.2f=="dm"||o.2f=="dK")&&o.1i.5A&&v.dy==1){o.O.eC();J}if(y.qA){o.5X=H;jU=y.qA({k4:"1k"});if(jU!==1H){jU.a7(E(){}).2k(E(2j){})}}F if(y.qE){y.qE({k4:"1k"});o.5X=H}F if(o.1M.qG){y.qG({k4:"1k"});o.5X=H}F if(y.qH){y.qH({k4:"1k"});o.5X=H}F if(y.qI){y.qI();o.5X=H}}}2k(e){2j=H;1l(e)}if(o.1i.3o&&o.1i.1W){if(1K.SZ===I){o.5X=I}}if(!o.5X&&!2h){if(o.1i.3o&&o.l8){cr()}F{G.mS()}}if(!2j){1E(xH,5c)}};E cr(){B x=o.O.8x();if(x){if(o.O.Z()==0&&o.1i.3E&&v.Ur!=1){!o.1r?o.U.2i():\'\'}F{o.ez=H;o.O.um();x.SX();x.1Y("yj",xr)}}}E k1(){B x=o.O.8x();if(x){x.SU()}};G.cr=E(){cr()};G.k1=E(){k1()};E xH(){if(o.xI!=H){if(o.7x){o.O.bK()}if(v.1D.oI==1){kz(H);o.5i=H}v.4b==1?o.4b.2N("ew"):\'\';js("1O");8h("ew","7y",1)}};B 9h;B 6v={x:0,y:0};E oV(e){if(o.4x){if(o.4x.SQ()){J}}if(e.Uq!=0){e.xK!=0?6v.x++:6v.x--;e.kV!=0?6v.y++:6v.y--;if((v.1D.xN==1||v.1D.xM==1)&&o.1O&&6v.y>6v.x){4z(9h);9h=aj(E(){6v={x:0,y:0};4z(9h)},2b)}F{o.6Q=H;4z(9h);9h=aj(E(){o.6Q=I;o.R.3Z();6v={x:0,y:0};4z(9h)},5q);o.R.3Z();e.9D()}if(6v.x>6v.y){if(e.xK>0){o.U.3q(3l(v.1y)-v.1D.g3/10,"no")}F{o.U.3q(3l(v.1y)+v.1D.g3/10,"no")}}F{B st=(o.1i.gQ?-v.1D.g3/10:v.1D.g3/10);if(v.1D.xM==1&&o.1O){o.O.1F((e.kV>0?st:-st))}F if(v.1D.xN==1&&o.1O){3a("3r",(e.kV>0?"+"+st*10:"-"+st*10))}F{o.U.3q(3l(v.1y)+(e.kV>0?st:-st),"no");o.R.ex()}}}}E xr(){if(o.1i.3E){o.O.uB();js("oh")}o.ez=I}G.mS=E(){if(o.b5){o.1O=H;o.R.7y();if(!o.5X){if(L(o.6t)){2C{Q(o.6t,{\'1g\':\'1w%\',\'1d\':\'1w%\',\'1p\':\'oc\',\'1b\':0,\'1c\':0,\'4k\':"l3"})}2k(bp){}}Q(o.1M,{\'1g\':\'1w%\',\'1d\':\'1w%\',\'1p\':\'oc\',\'1b\':0,\'1c\':0,\'4k\':"l3"});o.2E=o.1M.1U;o.3L=o.1M.2D;2C{1K.8T.C.9L=\'3g\';if(!L(o.X)){1K.mh=E(e){e.9D()}}}2k(bp){}}if(v.oH==1){Q(o.1M,{\'do\':\'#3x\'})}if(v.qK==1&&o.1i.3o==1&&!o.1i.ff){B sw=1t.8m.1g;B fz=1;W(B i=1;i<6;i++){if(sw>2b*i){fz=2r(v[\'qK\'+(2b*i)],i)}}if(fz>1){o.1M.C.xQ=fz;v.zm=fz;8q()}}if(o.4x){o.4x.ac()}8E();o.b5=I}};G.6z=E(){kC=H;if(1K.xg){1K.xg()}F if(1K.xq){1K.xq()}F if(1K.x7){1K.x7()}F if(1K.x8){1K.x8()}F if(1K.x9){1K.x9()}F if(1K.xa){1K.xa()}if(!o.5X){G.mW(I)}};G.xA=E(x,y){pe(x,y)};E pe(x,xf){if(L(o.1N)&&!xf){o.hw=x}F{B 2h=I;B bE=o.7M/x;B bG=0;B kG={\'1d\':bE};if(v.Vw==1){if(bE>o.7N){bE=o.7N;bG=o.7M/x;o.7M=kG[\'1g\']=bG}}if(L(o.6t)&&v.BT!=1){2C{Q(o.6t,kG)}2k(bp){2h=H;1l("bM Vu Vs")}}if(!2h){o.3W=x;o.7N=bE;if(o.3W>0){Q(o.26,kG)}if(bG>0){js("1g",bG)}js("1d",bE)}if(o.1N&&!o.1O){o.3L=bE;if(bG>0){o.2E=bG}o.1N.2z()}}};G.mW=E(x){if(kC||x){o.1O=I;o.ez=I;if(!o.5X){if(L(o.6t)){2C{Q(o.6t,{\'1p\':\'ja\',\'1b\':0,\'1c\':0,\'4k\':\'xo\'});Q(o.6t,o.BS);Q(o.6t,{\'1g\':o.8p,\'1d\':o.aS})}2k(bp){}}Q(o.1M,{\'1g\':o.8p,\'1d\':o.aS,\'1p\':\'2n\',\'1b\':0,\'1c\':0,\'4k\':\'xo\'});2C{1K.8T.C.9L=\'2X\';1K.mh=E(e){J H}}2k(bp){}}o.R.6z();if(v.oH==1){Q(o.1M,{\'do\':v.hS});if(v.bL==1){o.1M.C.do=\'bL\'}F{Q(o.1M,{\'do\':v.hS})}}if(v.zm>1){o.1M.C.xQ=1;v.zm=1;8q()}if(v.1D.oI==1){kz(I);o.5i=I}if(o.4x){o.4x.ac()}8E();o.yl?o.yl=I:\'\';o.R.lZ();kC=I;js("oh");o.5X=I;o.8n=I}};G.5i=E(x){v.1D.Vp!=0?kz(x):\'\'};E kz(x){6v={x:0,y:0};if(x){1t.1Y("xT",oV,{5y:I})}F{4z(9h);1t.4Z("xT",oV)}}G.9G=E(x){v.4p=0;if(x!=1){o.R.2O();o.U.xU()}F{}o.O.3q(v.1y);if(o.R.al()){o.R.6E()}if(o.2H){G.4C()}8E(0);1l("2h");js("2h")};G.kl=E(){v.4p=0;v.2T=0;v.kZ=0;v.5f==1?v.5f=9:\'\';o.O.nh();o.U.9G()};G.6J=E(x){if(L(o.2J)){if(o.2J!=x){o.2J=x;if(v.ra==1){o.4D=o.2S[x];if(o.4M){3D.96("r0",o.4D)}}o.O.6J(x);js("7l",o.2S[x]);o.R.An(x)}}};G.i1=E(){o.R?o.R.i1():\'\'};G.dv=E(x){if(L(o.5t)){if(o.5t!=x){o.5t=x;if(v.CR==1){o.94=v.94=o.6h[x];if(o.4M){3D.96("qP",o.94)}}o.O.dv(x);js("9m",x);o.R.fx("9m")}}};G.aW=E(x,z){x==\'0.0\'?x=0.1:\'\';B y=x;5D(y).K(\'.\')>0?z=1:\'\';y=y*1;if(!z){y=x==o.gO?1:o.4R[x];o.8N=x}y=3l(y);if(o.eF||z){o.eD=y;W(B i=0;i<o.4R.S;i++){if(y<=o.4R[i]*1){o.8N=i;1j}}}if(o.4M&&v.yL==1){3D.96("yM",y)}js("6i",y);o.O.aW(y);o.R.fx("6i")};E 8E(x){o.3I?o.3I.1n(L(x)?x:o.O.Z()):\'\'};G.oW=E(){if(o.3I){8E();o.3I.C()}};G.iC=E(x){if(1z(xW)==\'E\'){!o.3I?o.3I=1C xW():\'\';o.3I.Ak(x)}};B 5z;B 7t;B lz;B 1X;E 6q(x){if(v["4S"+x+"xY"]>0&&o.4M){B tb=3D.5K("sn"+x+"3V"+o.d);if(tb){B ct=1C 6L();o.bB=ct.a6();B xX=(ct.a6()-tb)/VZ;if(xX<v["4S"+x+"xY"]){J I}}}if(v["4S"+x+"y4"]>0){if(o.O.1h()>0){if(o.O.1h()<v["4S"+x+"y4"]*60){if(v["4S"+x+"y6"]>0){v["4S"+x+"3V"+"we"]=v["4S"+x+"y6"]}F{J I}}}}if(o.fY.K("6y")!=-1&&v.1N==1&&!o.8S&&v[x+\'s\']==1){if(1z ou=="1H"){J I}if(x=="hg"||x=="pg"){if(1z ya!=="1H"){1X=[];J ya(x)}}if(L(o.1N)||L(o.4w)){if(!5U(o.oq)||6w(o.3f)){1l(\'ad bg\');J I}F{1l(\'ad kH\');J H}}F{if(L(v[x])){if(v[x].4T().K(".")>-1||v[x].4T().K(":")>-1||v[x].4T().K("[W4]")>-1){js("W7",x);if(!6w(x)&&x!="aK"){1E(E(){o.1r||(o.4w==28&&o.1N==28)?\'\':o.U.7r()},10);dw()}5z=0;7t=0;lz=x;1X=v[x].2g(" d0 ");o.4r=[];o.pu=1X.S;fQ();o.wo=1;o.l6=H;W(B i=0;i<1X.S;i++){1X[i]=1X[i].2g(" or ")}v[x.8d("3V","eR")]=v[x];v[x]=28;o.3f=x;if(x!=\'aK\'){o.1N=1C ou()}o.4w=1C ln();W(B i=0;i<1X.S;i++){W(B j=0;j<1X[i].S;j++){B 5S=4c(1X[i][j]);if(5S.K("[50%]")>0){B 1L=4J(1,2);1X[i][j]=1X[i][j].1P("[50%]","");if(1L==2){1X[i][j]=\'\'}}}}if(v.pD==1){W(B i=0;i<1X.S;i++){B n=i==0?1:0;if(1X[i].S>n){W(B j=n;j<1X[i].S;j++){B 5S=4c(1X[i][j]);if(o.1i.pA){cU(5S)}F{1E(cU,i*1w,5S)}}}}}if(1X[0][0]==\'\'){fi()}F{o.4w.lG(4c(1X[0][0]),x)}J H}F{J I}}F{J I}}}F{J I}};G.rc=E(x){6q(x)};E e4(w,x,d){if(L(o[w+\'o\'])&&v[w+\'s\']==1){B y;W(B i in o[w+\'o\']){if(o[w+\'o\'].2e(i)){if(!L(o[w+\'o\'][i].hU)&&L(o[w+\'o\'][i].Z)&&L(o[w+\'o\'][i].1N)){B z=o[w+\'o\'][i].Z.4T();B ok=I;if(z){if(x=="6l"){if(z==x){ok=H}}F{if(z=="2Z"){if(z==x){ok=H}}if(z.K("%")>0){if(d>0){z=2P(z.1B(0,z.K("%")))*d/1w}F{z=-1}}F{z=2P(z)}if(x>=z){if(v[\'4S\'+w+\'xR\']>0&&z>-1){if(x-z>=v[\'4S\'+w+\'xR\']){z=-1}}if(z>-1){ok=H}}}if(o[w+\'o\'][i].vU&&o.O.1h()>0){if(o.O.1h()<o[w+\'o\'][i].vU*1){o[w+\'o\'][i].hU=H;ok=I}}if(ok){y=o[w+\'o\'][i].1N;v[w]=o[w+\'o\'][i].1N;o[w+\'W8\']=o[w+\'o\'][i].Z;o[w+\'VO\']=o[w+\'o\'][i].W0;if(6q(w)){o[w+\'o\'][i].hU=H;1j}}}}}}}};E la(){if(6w()){if(o.aO==0||v[\'4S\'+o.3f+\'VX\']==1){Q(o.oq,{"1I":0,"5n":"3g","1c":5q});1l(o.3f+" 1k");o.3f==\'51\'?o.O.2i():\'\'}}}E 6w(z){B y=I;B x=[\'51\',\'aQ\'];W(B i=0;i<x.S;i++){if(o.3f==x[i]||z==x[i]){if(v[\'4S\'+x[i]+\'VW\']==1){y=H}}}J y};G.6w=E(x){J 6w(x)};G.VU=E(x){x?\'\':kr();o.3f=="51"?o.vW.2U(o.vY):\'\'};G.Vm=E(){kr()};G.UU=E(){kr()};E kr(){if(6w()){if(o.1r){o.O.2O();o.R.2O()}1l(o.3f+" 1n");Q(o.oq,{"1I":1,"5n":"3H","1c":0});o.kP=1}if(o.ez&&!o.5X){k1()}F{if(v["4S"+o.3f+"hE"]==1&&o.1O){o.U.6z()}}};G.UP=E(x){o.4w=28;o.kP=0;1l("6y 8J",o.3f);js("UN",o.3f);if(x.1G=="aK"){B w6=1C UL(x);o.k0.2U(w6)}F{if(L(o.1N)){if(v.4p==0&&v.UJ==1&&o.O.Z()==0&&!o.6l){v.4p=1;o.O.nE()}if((!o.1N.UI()||x.wa)&&o.ox>0){1l("6y UH");o.1N.4s();o.1N=28;o.1N=1C ou()}if(6w()){la()}F{if(o.1r){o.O.2O();o.R.2O()}}o.ox++;if(o.l6&&v.bd>0){2w(o.bd);o.bd=1E(vE,v.bd*2b*60);if(L(v.vz)){if(v.vz!=\'\'){o.fo?o.fo.5C():\'\';o.fo=1C UE()}}}o.l6=I;if(v.vB>0){1l("6y Uv");js("Uu");1E(oz,v.vB*2b,x)}F{oz(x)}}F{1l("6y V8")}}};E oz(x){o.1N.Go(x)}E vE(){if(L(o.1N)){if(o.1N.qq()&&o.aO==0){o.1N.pC();1l("6y mE "+v.bd);1X=[];9B()}}}G.Vh=E(){js(\'Vg\',o.3f);1l("6y 2j");oC()};G.fi=E(){oC()};E oC(){B n=fQ();1l("6y 56 "+!n);!n?fi():9B()};G.Vf=E(x){if(v[o.3f+"oY"]){W(B i=0;i<3;i++){v[o.3f+"oY"]=v[o.3f+"oY"].1P(x+(i==0?\' d0 \':(i==1?\' or \':\'\')),\'\')}}};G.Ve=E(){J fQ()};E fQ(){B x=I;if(o.3f){B 9b=v[\'4S\'+o.3f+\'3V\'+\'we\'];B fc=v[\'4S\'+o.3f+\'3V\'+\'Vd\'];if(fc||9b){if(fc>0&&o.pc>0){o.pu=fc;if(o.aO>=fc){x=H}}F{if(9b>0){o.pu=9b;if(o.aO>=9b){x=H}}}}}J x}E fi(){if(1X.S>0&&1X[5z]){if(7t<1X[5z].S-1){1l("6y Va");o.1N?o.1N.pC():\'\';la();7t++;B 5S=4c(1X[5z][7t]);B cm=p4(5S);if(cm==\'5N\'){o.4w=1C ln();o.4w.lG(5S,o.3f)}if(cm==\'2j\'){fi()}}F{9B()}}F{9B()}}E p4(5S){B x=\'5N\';if(v.pD==1&&o.4r){B kt=I;B n=0;W(B i=0;i<o.4r.S;i++){if(o.4r[i].lM==0){if(o.4r[i].9f.wJ(5S)){o.4r[i].lM=1;B y=o.4r[i].9f.mL();if(y==\'8J\'){o.4w=o.4r[i].9f;1l("6y wJ");o.4r[i].9f.gg();x=y}F{if(y==\'\'){x=\'ok\';1l("6y V7");o.4w=o.4r[i].9f;o.4r[i].9f.V3()}if(y==\'2j\'){x=\'2j\'}}kt=H}if(kt&&o.4r[i].bz==0){n++;if(n<6){pF(o.4r[i])}F{1j}}}}}J x}G.V2=E(x,y){if(x!=\'\'){B z=5z;B po=I;if(y){W(B j=0;j<1X.S;j++){1X[j]==y?z=j:\'\'}}if(1X.S==1){if(1X[0].S>1&&7t<1X[0].S-1&&1X[7t]){B wT=1X[7t].4v(1,99);1X[0].wN(7t+1,99);po=H}}if(1z(x)=="2W"){W(B i=0;i<x.S;i++){1X.wN(z+i+1,0,[x[i]]);if(o.1i.pA){cU(x[i])}F{1E(cU,i*1w,x[i])}}}F{if(1z(x)=="47"){1X.2U([x]);cU(x)}}if(po){1X[1X.S-1]=1X[1X.S-1].8d(wT)}}};G.Vk=E(x,y){if(x!=\'\'){B z=5z;if(y){W(B j=0;j<1X.S;j++){1X[j]==y?z=j:\'\'}}if(1X[z]){if(1z(x)=="2W"){W(B i=0;i<x.S;i++){1X[z].2U(x[i])}}F{if(1z(x)=="47"){1X[z].2U(x)}}}}};G.9B=E(x){9B(x)};E cU(x){if(v.pD==1&&o.4r){B i=0;W(B i=0;i<1X.S;i++){if(1X[i]==x){if(5z>=i){J}F{}}}if(1X.S==1&&1X[0].S>1){}F{B n=0;W(i=0;i<o.4r.S;i++){o.4r[i].lM==0?n++:\'\'}o.4r.2U({bz:0,lM:0,x:4c(x),t:o.3f,9f:1C ln(H)});n<5?pF(o.4r[o.4r.S-1]):\'\'}}}E pF(x){if(x){x.bz=1;x.9f.lG(x.x,x.t)}}E 9B(hi){B 2h=fQ();1l("6y 5C ("+o.aO+")");if(1X.S>0&&5z==1X.S-1){if(1X[0][0].K("js:")==0){5z=-1;1X=[[1X[0][0]]]}}if(o.V6==2){2h=H}if(1X.S>5z+1&&!2h){o.1N.pC();la();5z++;o.wo++;7t=0;B 5S=4c(1X[5z][0]);B cm=p4(5S);if(cm==\'5N\'){o.4w=1C ln();o.4w.lG(5S,lz)}if(cm==\'2j\'){9B(hi)}}F{cz();o.R.7U();if(L(o.1N)){o.1N.4s();o.1N=28}o.4w=28;1X=[];7t=0;5z=0;o.kP=0;o.wx!=1?js("Uw",o.3f):\'\';o.wx=0;if(v.A4==1){if(o.a8){2C{o.a8.m4()}2k(e){1l(o.a8,e)}o.a8=1H}}lz=\'\';o.aO=0;o.wy=0;2w(o.bd);4z(o.UD);o.fo?o.fo.5C():\'\';o.9S?o.9S.1k():\'\';o.pc++;if(o.3f=="5Y"||(o.3f=="aQ"&&v.jc==1&&o.cB)||o.3f=="51"){if(v.3e!=\'?\'){o.O.aR();B re;if(o.pd){o.U.kN();o.pd=I;re=H}if(o.2f=="4t"&&!o.pf&&o.1i.3E){re=H;o.3f=="5Y"?o.O.vV():\'\'}if(re||hi==\'hi\'||v.VV==1||o.ht){o.ht=I}F{o.U.2i(1)}}}if(o.hw>0){pe(o.hw);o.hw=0}if(o.3f=="hl"){7Z()}o.pf=I;o.3f=28}};G.W6=E(){1X=[[\'\']]};G.dY=E(y){B x=[\'5Y\',\'aQ\',\'hl\',\'hg\',\'pg\'];B z;W(B i=0;i<x.S;i++){z=I;if(y){y!=x[i]?z=H:\'\'}if(!z&&L(v[x[i].8d("3V","eR")])){v[\'4S\'+x[i].8d("3V","wB")]--;if(v[\'4S\'+x[i].8d("3V","wB")]>0){v[x[i]]=v[x[i].8d("3V","eR")];v[x[i].8d("3V","eR")]=28}}}if(y=="5Y"||y=="51"){if(v.pN>1){if(L(o.rb)&&v.eN==1){W(B i in o.rb){o.rb[i].hU=1H}v.pN--}}}};G.jD=E(){dw();if(L(o.6d)){o.6d.4s();o.6d=28}o.6d=1C VB()};G.VK=E(){cz();o.6d.4s();o.6d=28};G.dw=E(){dw()};G.cz=E(){cz()};E dw(){if(o.7F){}F{o.7F=1Z("2p");o.1M.1V(o.7F);ix(o.7F);Q(o.7F,{"2y":"#3x","1I":0.1});o.7F.C.4k=E3}};E cz(){if(o.7F){o.1M.3C(o.7F);o.7F=28}};E 5B(){if(L(o.1T)){B p=o.1O?2r(v.SY,v.1T):v.1T;if(p!=o.nn){8y(p,o.1T,v.cQ)}1n(o.1T);Q(o.1T,{"1I":v.l9});o.R.5m();o.cv?o.cv.1r():\'\'}};G.bR=E(){if(L(o.1T)){if(5U(o.1T)){4z(o.mR);B t=o.O.Z();if(t==0&&v.uS==1){}F{if(v.xJ>0){2w(o.sj);o.sj=1E(hO,v.xJ*2b)}F{hO()}}}}};E hO(){2w(o.sj);if((v.sg==1&&!o.1r)||v.sd==1){v.sd==1?5B():\'\'}F{Q(o.1T,{"1I":0});1E(wA,4l)}}E wA(){if(!o.1r&&v.da==1){}F{1k(o.1T);o.cv?o.cv.2Z():\'\';o.R.5m()}}G.5B=E(){5B()};E wz(x){if(v.sa==1){W(B i=0;i<1t.4U.S;i++){if(1t.4U[i]){if(1t.4U[i].2N("id")!=v.id){1t.4U[i].2N(\'2Z\',(v.Ps==1?1:0))}}}}1t.aN=v.id}E s8(x){B y=dx.9E(x).S;o.fw=0;if(y>0){x=rY(x,y,\'\',-1)}J x}E rY(x,y,p,j){B x2=[];B 2h;if(L(x[\'X\'])){x=x[\'X\'];y=x.S}B ii=0;W(B i=0;i<y;i++){2h=I;if(L(x[i][\'id\'])){x[i][\'dW\']=x[i][\'id\']}x[i][\'id\']="x"+p+\'-\'+i+(L(x[i][\'id\'])?\'-\'+x[i][\'id\']:\'\');j==-1&&i==0&&!L(x[i][\'7c\'])?o.s6=x[i][\'id\']:\'\';if(!L(o.s6)){j==0&&!L(x[i][\'7c\'])?o.s6=x[i][\'id\']:\'\'}x[i][\'Pq\']=p;x[i][\'ww\']=j;x[i][\'wu\']=ii;if(L(x[i][\'1h\'])){o.fw+=x[i][\'1h\']}if(L(x[i][\'wr\'])){x[i][\'29\']=x[i][\'wr\'];B q1=x[i][\'3e\']?x[i][\'3e\'].K(\'[\'):0;B q2=x[i][\'3e\']?x[i][\'3e\'].K(\']\'):0;if(q1>0&&q2>0){B s1=x[i][\'3e\'].1B(q1+1,q2-q1-1);B s2=s1.2g(",");B s3=\'\';W(B k=0;k<s2.S;k++){s3+="["+s2[k]+"]"+x[i][\'3e\'].1P("["+s1+"]",s2[k])+(k<s2.S-1?",":\'\')}x[i][\'3e\']=s3}}if(L(x[i][\'X\'])){x[i][\'7c\']=x[i][\'X\']}if(!L(x[i][\'7c\'])){if(L(x[i][\'3e\'])){if(x[i][\'3e\']==\'\'&&!L(x[i][\'8b\'])){2h=H}}F{2h=H}}if(!2h){o.2V[x[i][\'id\']]=x[i];ii+=1}if(L(x[i][\'7c\'])){B z=dx.9E(x[i][\'7c\']).S;if(z>0){x[i][\'7c\']=rY(x[i][\'7c\'],z,x[i][\'id\'],i)}}if(!2h){x2.2U(x[i])}}J x2}E wh(){B x=[];if(L(v.6c)){if(v.6c.K("x-")!=0){W(B y in o.2V){if(o.2V.2e(y)){if(o.2V[y].dW==v.6c){v.6c=y}}}}if(L(o.2V[v.6c])){v.X.Pi==1?v.X.z6=0:\'\';x=o.2V[v.6c]}F{x=o.X[0];if(v.6c==o.wn){o.2c=1H}}}F{x=o.X[0]}if(x){W(B i=0;i<10;i++){if(L(x[\'7c\'])){x=x[\'7c\'][0]}F{1j}}v.6c=x.id;if(v.6c==o.wn&&x.1A!=\'2M\'){x.1A=1H}}J x}G.bS=E(){J bS()};E bS(){B x=I;if(o.R){if(o.R.eV()){if((v.X.dX==1||v.i7==1)&&o.R.aV()){x=H}}}J x};E 7Z(){8h("4e","7Z",1);o.U.dY();if(o.4M&&v.aE==1){o.2M.nZ(0,o.O.1h())}if(o.R.eV()){if(bS()){if(L(v.X.wt)){o.wi=1E(E(){o.R.9e()},v.X.wt*2b)}F{o.R.9e()}}F{rC()}}F{if(v.Pf==1&&o.1O){o.U.6z()}rz()}}G.OY=E(){rC()};E rC(){if(v.X.dX==1&&v.X.lF==1&&!o.R.aV()){o.R.nQ();J}if(v.X.z8==1){!o.R.e0()?o.R.9v():\'\'}rz()}E rz(){v.4b==1?o.4b.2N("4e"):\'\';js("Pa");if(v.8b==1&&v.P9==1&&22(v.wR)){8b(v.wR)}if(v.7O){if(1z wO!=="1H"){!o.7O?o.7O=1C wO():o.7O.vO()}}!o.7O?5B():\'\'}E hq(x){if(x.K(\'js:\')==0){2C{x=4G(x.1B(3))}2k(e){7p.1l(e.8u)}}J x?x:\'\'}};B qw=E(18){B 18;B 3c;B iY;B 62;B dQ="";B bA=0;B fP=I;B ha=I;B rI;B O;B 2G;o.3b={x:1,y:1,x0:1,y0:1};B eX;B f7=[];B jl=0;B ds=0;B eI;if(1z(18)==\'47\'){18=4c(18);if(18.K("[{")==0){2C{18=18.1P(/7k\'qt/ig,\'"\');18=46.5k(18);eX?18=o.U.5e(18):\'\'}2k(e){7p.1l(e);18="vN 46"}}if(18.K("#"+v.bb)==0){18=o[o.fd[0]](18)}if(18){if(18.K("#"+v.dg)==0&&18.K(v.eZ)>0){eX=H;o[o.fd[1]](18,gD)}}if(18){if(18.K("#0")==0){if(18.K(o.b4)>0){18=cg(18.1P(o.b4,\'\'))+o.b4}F{18=cg(18)}}}if(v.ap==1){18=ap(18)}if(1z(18)==\'47\'){if(18.K(".8Y")==18.S-4||18.K(".7g")>0){f7=18.2g(" or ");rf()}}}o.3d=1Z("2p");ix(o.3d);Q(o.3d,{"5b":"2t 0.2s 3A","1u-gS":"as"});o.1M.1V(o.3d);if(v.1D.vJ==1){if(!o.rN){wC(o.3d,\'o.vJ\',v.1D.f8!=1,v.1D.f8==1,vI);o.rN=H}}if(!eX){gD()}E vI(){B p=o.3d.lw;B p2=o.2E;if(v.1D.f8==1){p=o.3d.xG;p2=o.3L}B x;if(p>p2*2r(v.1D.vD,0.5)){if(o.R.hH()){x=H;o.R.df()}}F{if(p<-p2*2r(v.1D.vD,0.5)){if(o.R.aV()){x=H;o.R.9e()}}}if(x){if(v.1D.f8==1){Q(o.3d,{"1c":0})}F{Q(o.3d,{"1b":0})}}F{1C 9q({mc:o.3d,1G:(v.1D.f8==1?"1c":"1b"),to:0,Z:0.1,ce:"E2",me:"rN"})}}E rf(){18=f7[jl];if(18.K(o.b4)>0){18=18.1P(o.b4,\'\');v.3e=18}B 4q=fT(18);4q.c6=E(){if(G.f3==4&&G.6b==5c){9v(G);o.R.Ei()}F{jf(1)}};4q.OZ=E(e){jf(3)};4q.dR();eX=H}E jf(x){if(f7.S>1){if(jl+1<f7.S){jl++;rf();x=0}}if(x==1){5M("X gY q5 or Pe Pu")}if(x==2){5M("PM 46")}}E 9v(x){if(x.c5){B y=x.c5;if(y.K("#"+v.bb)==0){y=o[o.fd[0]](y)}if(y.K("#"+v.dg)==0&&y.K(v.eZ)>0){y=o[o.fd[1]](y)}if(18.K(".8Y")==18.S-4){B 8Y=y.2g(/(\\r\\n\\t|\\n|\\r\\t)/gm);18=[];B s9=1;B fn=\'\';W(B i=0;i<8Y.S;i++){if(8Y[i].K("#PZ")>-1){if(8Y[i].K(" - ")>-1){B 1L=8Y[i].2g(" - ");fn=1L[1L.S-1]}}if(8Y[i].K("4O")>-1){18.2U({29:""+(fn!=\'\'?fn:s9),3e:8Y[i]});s9++;fn=\'\'}}}F{y=y.1P(/(\\r\\n\\t|\\n|\\r\\t)/gm,"");2C{18=46.5k(y)}2k(e){7p.1l(e.8u);jf(2)}}if(o.R){if(v.X.iK==1){o.R.e5(2)}}gD();8q();1E(E(){js("X")},1)}}E gD(x){18=o.U.5e(x?x:18);18&&18!=\'?\'?5e(18):\'\';o.1r&&x&&!o.1N?o.O.2i():\'\'}E 5M(x,yz){B y=H;B yy=H;js("PW",x);if(o.fS){J}if(yz!=1&&v.5f==1&&v.rV==1){s7();J}if(3c){if(o.1r||o.cB||(v.2T==1&&!o.1A)){if(3c.S>0){62++;y=62>3c.S-1;if(y&&3c.S>1&&v.aw>0){if(o.aw<v.aw){62=0;y=I}o.aw++}if(y&&v.PV==1){if(o.3w.S>1){if(o.2S[o.2J].K(41("jb"))==-1){o.2S[o.2J]=o.2S[o.2J]+\' (\'+41("jb")+\')\'}if(o.2J>0){yy=I;o.U.6J(o.2J-1);eY()}F{if(o.2S[o.2J+1].K(41("jb"))==-1){yy=I;o.U.6J(o.2J+1);eY()}}}}if(!y){o.2c>0||!o.1A||O.53()?\'\':o.2c=3t();if(o.2f!=jH(3c[62])||!o.3S){if(o.1r){o.U.9G(1)}}o.cd=I;if(v.rJ>0){2w(o.cK);o.cK=1E(fN,v.rJ*2b)}F{fN()}}F{if(v.5f==1&&yy&&v.rV!=1){y=I;s7()}}}}F{y=I;if(!o.1A){fN()}}}if(y&&yy&&x){rn(x,H)}};E fN(){if(o.fS){J}if(o.1r||o.cB||(v.2T==1&&!o.1A)){1l("PT 9u",o.2c);5e(\'or\');o.1A&&!o.1N?O.2i():\'\';eY()}F{if(!o.1A){if(3c.S>0){if(62+1<3c.S){62++;o.aw++;5e(\'or\')}}}F{2w(o.cK);o.cK=1E(fN,22(v.rJ,5)*2b)}}}E rn(x,mr){8h("2j","l2",H);o.bu=I;if(v.xs==1&&!o.7m){if(v.x6==1){o.7Y.7g(v.xe)}F{o.7Y.7g(x)}if(v.xE==1&&L(v.xB)){o.bv=1C xy();o.U.bR()}}mr?o.7m=H:\'\';if(o.1r){o.U.7U();o.R.2O()}L(o.1T)&&!L(o.bv)?o.U.5B():\'\';js("2j",x)}E s7(){ds++;1l("l2 dJ x4 "+ds);o.1r?o.ke=1:\'\';L(o.9N)?2w(o.9N):\'\';o.9N=1E(sZ,v.sb*2b)}E sZ(){B x=2r(v.PG,10);if(o.1r||o.ke==1){o.ke=0;if(ds<x){o.U.dJ()}F{if(v.rV==1){5M(O.j9(),1)}F{rn(\'dJ l2 \'+O.j9())}}}}G.5M=E(x){5M(x?x:O.j9())};G.8t=E(y){1l("ju");fP=H;2w(eI);B x=I;if(3k()>0&&!o.4i&&!y){B Z=o.wq;if(Z+10<3k()){1l(\'PA (tA)\');js("tA");O.2i();O.3p(Z);x=H}}if(!x){o.U.ju()}};G.8k=E(){if(v.mQ==1){L(o.1T)?o.U.5B():\'\'}v.da==1?o.U.bR():\'\';o.R.2i();o.U.tx();if(v.Py==1&&L(v.my)){if(v.my.S>5){mM();4z(rI);rI=aj(mM,v.sS*2b)}}js("1r")};G.eT=E(){if(v.hk==1&&o.3S){if(o.U.eT()){o.9a=O.vb();o.R.5m();mu()}}o.sC=H};G.gq=E(){3t()>0&&3t()==3k()&&o.U.bS()?\'\':o.U.2O()};G.gn=E(){1l("Pv")};G.gp=E(){1l("se");o.U.se();L(o.dC)?js("3r",o.dC):\'\'};G.gr=E(){1l("sr");ds=0;o.U.sr();o.2f=="1v"?m0(1):\'\'};G.gv=E(){if(O){1l("3k",3k());o.U.3k(3t(),3k());js("1h",3k());ds=0;2w(o.9N);if(L(o.ij)){o.U.dv(o.ij);o.ij=28}}};E 3t(){B x=O.Z();J x}E 3k(){B x=O.1h();J x}G.gt=E(){};G.dn=E(){1l("7r");o.U.7r();js("6f")};G.go=E(){if(bA!=3t()){if(!o.7F){o.U.7U();if(bA==0){if(v.da==1&&v.uS==1){o.U.bR()}}}}bA=3t();B a3=3k();js("Z",bA);if(v.1Q.on==1){if(1z(uR)==\'E\'){!v.bx&&v.1Q.bx?v.bx=v.1Q.bx:\'\';if(!2G&&v.1Q.3z!=1&&v.bx&&v.bx!=\'\'&&bA>0){o.aB=1C uR();2G=o.aB.bW()}}}if(o.2f=="1v"&&o.1i.5R&&a3>0){if(o.1r&&bA>a3-1){2w(eI);eI=1E(uP,5q)}}};E uP(){if(!fP){o.U.2O();o.O.8t()}}G.rv=E(){if(o.2f=="4t"){O?O.rA():\'\'}};G.tN=E(x){o.U.9G();O.O9(x)};G.Ed=E(x){if(L(x)){if(2G){2G.3q(x)}v.1Q.1y=x}};G.uU=E(x){if(L(x)){if(2G){2G.2Y(x);2G.2i()}}};G.rA=E(){if(o.2f=="4t"&&O){J O.8J()}F{J H}};G.iy=E(){J o.2f=="1v"?O.iy():1H};G.iz=E(){J O.iz()};G.6J=E(x){1l("O5",x);if((o.2f=="eh"||o.2f==o.ws||(o.2f=="1v"&&(v.7e==0||7L()<2))||(o.2f=="3m"&&(v.iT==0||9w()<2)))&&L(o.3w[x])){B Z=G.Z();o.2c>0?\'\':o.2c=Z;o.U.3p(Z,I);5e(o.3w[x],H);B y=H;if(v.1e){if((v.1e.O3==1&&!o.1r)||!o.1A){y=I}}if(o.8a>0){O.cT(o.8a)}if(y){o.U.2i()}}if(o.2f=="1v"&&v.7e==1&&7L()>1){O.Eo(x)}F if(o.2f=="3m"&&v.iT==1&&9w()>1){O.Eg(x)}F if(o.2f=="4t"||o.2f=="rt"){O.Ec(x)}};G.tc=E(x,y){J vs(x,y)};G.nq=E(x,y){J yc(x,y)};E vs(x,y){B r=x.1d+\'p\';if(x.1d<5c){r=\'rQ\'}F if(x.1d>=5c&&x.1d<=fL){r=\'iG\'}F if(x.1d>fL&&x.1d<=rP){r=\'iN\'}F if(x.1d>rP&&x.1d<=4l){r=\'iM\'}F if(x.1d>4l&&x.1d<=ek){r=\'rF\'}F if(x.1d>ek&&x.1d<=v7){r=\'sm\'}F if(x.1d>v7&&x.1d<=ud){r=\'rX\'}F if(x.1d>ud&&x.1d<=uc){r=\'rW\'}F if(x.1d>uc&&x.1d<=tW){r=\'O1\'}F if(x.1d>tW){r=\'oi\'}if(x.1g==NZ&&x.1d<=NY){r=\'iG\'}F if(x.1g==tS&&x.1d<=tZ){r=\'iN\'}F if(x.1g==NX&&x.1d<=NW){r=\'iM\'}F if(x.1g==NV&&x.1d<=uz){r=\'sm\'}F if(x.1g==NU&&x.1d<=NR){r=\'rX\'}F if(x.1g==NO&&x.1d<=O4){r=\'rW\'}F if(x.1g==OU&&x.1d<=OT){r=\'oi\'}if(v.1e.OQ==1&&L(v.1e[\'5Z\'+r])){r=v.1e[\'5Z\'+r]}F{if(y==1){r=41(r)}if(y==2&&L(x.7J)){r=2P(x.7J/2b)+\' \'+41(\'cG\')}}J r};E yc(x,y){B r=x.jT();if(r=="OP"||r=="en"){x="ON"}F if(r=="OM"||r=="ru"){x="Русский"}if(1z(v.jP)=="2W"){if(L(v.jP[x])){x=v.jP[x]}F{x=2r(v.jP[y.4T()],x)}}J x};E mu(){if(o.3S&&o.iH&&!o.o6){O.nL();W(B i=0;i<o.iH.S;i++){if(o.iH[i]!=\'o1\'){O.DB(o.iH[i],o.8B[i],(i==o.iJ))}}o.o6=H}}G.aW=E(x){1l("OI",x);x=3l(x);O?O.gj(x):\'\';if(v.1Q.on==1){if(2G){2G.gj(x)}}};G.um=E(){mu()};G.uB=E(){O.nL()};G.dv=E(x){1l("OH",x);if(o.8j.S>0){if(o.8j[x]){B Z=G.Z();o.2c>0?\'\':o.2c=Z;o.U.3p(Z,I);5e(o.8j[x],H);o.U.2i()}}F{if(o.2f=="1v"&&v.9Y==1){O.Dp(x)}F if(o.2f=="3m"&&v.tR==1){O.E9(x)}F if(o.3S){O.cT(x)}}};G.mb=E(){B x=o.2S[o.2J];x==1H?x=\'\':\'\';B y=iS()&&v.7R==1&&v.7e==1&&x!=41("2X");J(y?\'\'+41("2X")+\' \':\'\')+x};G.ub=E(){B x=o.6h[o.5t];x==1H?x=\'\':\'\';J x};G.iS=E(){J iS()};E iS(){B x=I;if(O){if(o.2f=="4t"){x=O.2X()}if(o.2f=="1v"&&v.7e==1&&7L()>1&&v.7R==1){x=O.2X()}if(o.2f=="3m"&&v.iT==1&&9w()>1){x=O.2X()}}J x}E 7L(){if(o.2f=="1v"){J O.7L()}F{J 0}}E 9w(){if(o.2f=="3m"){J O.9w()}F{J 0}};G.7s=E(){J o.3S?O.7s():o.3W};G.3Z=E(x){if(O&&(o.nF||L(v.7s))){O.3Z()}if(v.lN>0){Q(o.3d,{"1d":(o.1O?"1w%":o.aS-v.lN)})}if(o.2G&&v.1Q.vT==1){o.aB.3Z()}if(v.mz==1){OC()}if(o.mx){o.mx.3Z()}};G.3Y=E(){J O?O.3Y():{}};G.eC=E(){O.eC()};G.5f=E(){1l(\'5f\');o.7K=0;o.1A?v.2T=1:\'\';o.U.7r();if(18&&v.OA!=1){if(18.K(\'(4J)\')==-1){18=18+(18.K(\'?\')==-1?\'?\':\'&\')+\'vn=(4J)\'}}if(18){if(o.3S){O.2Y(18);G.2i()}F{5e(18)}}};if(!L(o.1T)){ob()}if(L(v.1T)){if(v.1T!=\'\'){8y(v.1T,o.1T,v.cQ);if(v.mQ==1&&!o.1A){1k(o.1T)}}F{v.1T=28}}E mL(){dQ=O?O.6b():\'\'}E sM(18){3c=18.2g(" or ");W(B i=0;i<3c.S;i++){if(3c[i].K(" d0 ")>-1){iY=3c[i].2g(" d0 ");3c[i]=iY[4J(0,iY.S-1)]}if(L(v.iR)&&3c[i].K("//")==-1){3c[i]=v.iR+3c[i]}}62=0}E sK(){mL();if(dQ=="8Z"||o.4i){o.U.mA()}if(dQ!=""){o.U.mU()}}E ob(){if(o.1T){o.1M.3C(o.1T)}o.1T=1Z("2p");Q(o.1T,{"4V-2L":"1R","1I":v.l9,5b:"1I 0.5s"});if(v.mz==1){Ov()}F{ix(o.1T)}o.1M.1V(o.1T)}E 5e(x,y,sR){if(x){if(x.K("3r:")==0&&o.X){o.2c=x.1B(5);o.R.DW(0);J}}2w(eI);v.er==\'\'?v.er=\';\':\'\';if(x.K(\'{\')>-1&&x.K(\'}\')>-1&&x.K(v.er)>-1){B z=x.2g(v.er);o.8j=[];W(B i=0;i<z.S;i++){o.6h[i]=z[i].1B(z[i].K("{")+1,z[i].K("}")-1);o.8j[i]=z[i].1B(z[i].K("}")+1);if(L(v.94)){if(v.94==o.6h[i]){o.5t=i}}}x=o.8j[o.5t]}!L(3c)?3c=[]:\'\';o.ji?2w(o.ji):\'\';x&&x!=\'or\'&&x!=\'x\'?sM(x):\'\';B ft=o.2f;if(3c.S>0){B fu=3c[62];if(fu){if(fu.K(\'js:\')==0){2C{fu=4G(fu.1B(3))}2k(e){7p.1l(e.8u)}}}if(fu){o.2f=jH(fu);B bW=I;if(sR){bW=H}18=fu;if(18){18=18.1P(/\\(4J\\)/g,2u.4J())}F{18=3c[0]}if(!bW&&x!=\'x\'&&O&&o.2f==ft&&(ft=="eh"||(ft=="dK"&&!o.1i.1W)||(ft=="4t"&&o.1A&&!ha)||ft=="dm"||ft=="1v"||ft=="3m")){O.2Y(18)}F{1l("Op");jL();xL(18)}m0()}}if(!y){4z(o.lW);o.lW=aj(sK,o.iB);if(!L(v.42)&&v.OX==1&&v.Q2==1){v.42=\'\'}if(L(v.42)){o.U.iC(v.42)}if(v.gZ==1){if(v.hk==1&&o.1i.1W){}F{if(o.2f=="4t"){Q(o.3d,{"1c":-hD,"1b":-hD})}F{3i(o.3d)}v.1m.1k=0}}}}E m0(x){if(o.gO||x){if(o.eF){O.gj(o.eD)}F{if(o.8N!=o.gO){O.gj(o.4R[o.8N])}}}}E jH(x){B 1G="eh";if(x){if(x.K(".vR")>0){1G="1v"}F if(x.K(".wV")>0){1G="3m"}F if(x.K("w")==0&&x.K("s")==1){1G=o.ws}F if(x.K(\'4t.9Q/\')>-1||x.K(\'iF.be/\')>-1){if(1z(R9)==\'E\'){1G="4t";if(v.od==1){B y=\'ec://4d.4t.9Q/vi/\'+tC(x)+\'/\';ti(y+\'tE.eO\',E(z){z>1w?v.1T=y+\'tE.eO\':v.1T=y+\'Ry.eO\';if(o.2V){o.2V[o.9R][\'1T\']=v.1T}v.2T==1||o.1A?\'\':8y(v.1T,o.1T,v.cQ)})}}F{1l("No Rv")}}F if(v.dK==1&&x.K(\'dK.9Q/\')>-1){1G="dK"}F if(v.Ru==1&&x.K(\'Rt.r\')>-1){1G="rt"}F if(v.tD==1){if(1z(t6)==\'E\'){t6(x)?1G="7k":\'\'}}}o.nF=1G=="4t"||1G=="dK"||1G=="rt";o.3S=1G=="eh"||1G=="1v"||1G=="3m"||1G==o.ws;J 1G}E ti(18,uM){B 4d=1C Rm();4d.c6=E(){uM(G.1d)};4d.2Y=18}E xL(x){o.2f=jH(x);if(o.3S){O=1C wm(x,o.3d,I)}if(o.nF){O=4G("1C qw"+o.2f[0].xi()+o.2f.4v(1)+"(x,o.3d);")}if(o.2f=="7k"){O=1C Ri(x)}o.R?o.R.AT():\'\';nU()}G.xl=E(){nU()};E nU(){if(L(v.1h)){B t=0;if(o.2M&&v.aE==1&&!o.1A){t=o.2M.8L().t}1E(E(){o.U.3k(t,v.1h)},1w)}}E jL(){if(O){O.4s();O=28;dQ="6m"}if(2G){2G.4s();2G=28;2G=1H;o.aB.5C();o.2G=28;o.aB=28}};G.4s=E(){jL()};G.Rf=E(){3c=[];jL()};G.5e=E(x,y,z){5e(x,y,z)};G.8y=E(x){8y(x,o.1T,v.cQ)};G.2i=E(){if(O){fP=I;ha=I;if(o.4i){o.3j.2i()}F{O.2i();v.da==1?o.U.bR():\'\'}if(L(2G)){2G.2i()}if(o.8w){if(o.3S){if(o.bB>0&&!o.8w.Re()){o.8w.yh()}}F{o.yf=[];o.R.fx("nz")}}if(o.3S&&v.uN>-1&&!o.n3&&!o.1i.3E){if(o.bB>0){O.uX()}}eY()}F{1E(G.2i,4l)}};E eY(){if(v.xS>0&&3c.S>1){if(3k()==0||v.yd==1){2w(o.ji);o.ji=1E(y9,v.xS*2b)}}}E y9(){if(o.1r&&(3k()==0||v.yd==1)&&3t()==0&&!o.cK){if(O){if(O.8I()==0&&62!=3c.S-1){5M(\'5e x4\')}}}}G.x3=E(1q){if(o.2G){if(v.1Q.vT==1){if(o.so[o.2G]>2){J}}if(1q){1q.aa();1t.1q?1t.1q.6V=H:\'\'}B 1L=O;O.o9(H,o.2G);2G.o9(I,o.3d);O=2G;2G=1L;O.2i();2G.2i();js("1Q")}};G.vV=E(){O.2Y(18)};G.mO=E(){v.4b==1?o.4b.2N("1k"):\'\';o.n4=H};G.fI=E(){if(v.1m.nb){v.1m.nb=I;if(o.R){o.R.rG(1);o.R.lV()}}o.n4=I};G.w5=E(){if(o.2G&&o.aB){o.aB.dP()}};G.i6=E(){if(o.3S&&o.6n){o.fK=H;O.6n()}};G.bK=E(){if(o.3S&&o.7o){O.7o()}};G.mo=E(){if(v.dl==1&&L(v.S5)){if(L(o.dl)){o.dl.1n()}F{if(1z(wb)==\'E\'){o.dl=1C wb()}}}fh();if(O){hy(0);O.mo()}};G.aR=E(){o.dl?o.dl.1k():\'\';O?O.aR():\'\'};G.fh=E(x){fh(x)};E fh(x){if(v.S9==1&&22(v.9S)){if(L(o.9S)){o.9S.1n(x)}F{if(1z(wH)==\'E\'){o.9S=1C wH()}}}}G.2O=E(){if(o.4i){o.3j.2O()}F{O?O.2O():1l("Sb")}if(L(o.2G)){2G.2O()}};G.nh=E(){ha=H;o.U.3p(0,I);L(o.1T)?o.U.5B():\'\';5e(\'x\')};G.dh=E(){O?O.dh():\'\'};G.3p=E(x){if(O){if(o.4i){o.3j.3p(x)}F{O.3p(x);if(v.1Q.on==1){if(2G){2G.3p(x)}}}}};G.4C=E(){if(O){O.4C();o.4i?o.3j.4C():\'\';1l("4j")}if(v.1Q.on==1&&v.1Q.d9==1){if(2G){2G.4C()}}};G.5j=E(){if(O){O.5j();o.4i?o.3j.5j():\'\';1l("7q")}if(v.1Q.on==1&&v.1Q.d9==1){if(2G){2G.5j()}}};G.3q=E(x){O?O.3q(x):\'\';if(v.1Q.on==1){if(v.1Q.d9==1&&2G&&!o.AX){2G.3q(x)}}if(o.4i){o.3j.3q(x)}};G.n1=E(){J O?O.n1():I};G.53=E(){J O?O.53():I};G.6b=E(){J dQ};G.6m=E(){J fP};G.Z=E(){B x=0;if(O){x=3t();if(o.4i){B y=o.3j.3t();y?x=y:\'\'}F{if(3k()>0&&x!=3k()){o.wq=x+0.RI}}J x}F{J 0}};G.1h=E(){B x=0;if(O){x=3k();x==0&&L(v.1h)?x=v.1h*1:\'\';if(o.4i){B y=o.3j.3k();y?x=y:\'\'}}J x};G.8I=E(){J O?O.8I():0};G.dV=E(){o.3b.dV=o.3b.dV?I:H;Q(o.3d,{"2t":(o.3b.dV?"2F(-1)":"2F(1)")})};G.RV=E(){ob()};G.nE=E(){if(o.3S){O.4p()}};G.RT=E(x,y){if(x==\'1F\'){if(y==1){av(v.1e.1F/1w)}if(y==2){av(-v.1e.1F/1w)}if(y==3){o.O.ee()}}F{if(o.3S){if(!o.8l[x]){if(x==\'hN\'){o.8l[x]=0}F{o.8l[x]=1}}if(y==1){o.8l[x]+=v.1e[x]/1w}if(y==2){o.8l[x]-=v.1e[x]/1w}if(y==3){if(x==\'hN\'){o.8l[x]=0}F{o.8l[x]=1}}!o.ej?o.ej=[]:\'\';o.ej[x]=x+\'(\'+2P(o.8l[x]*1w)+\'%) \';B cf=\'\';W(B i in o.ej){cf+=o.ej[i]}Q(O.8x(),{\'6W\':cf});o.R.hz(x)}}};G.1F=E(x){av(x)};E av(x){if(5D(x).K(":")>0){B y=x.2g(":");B z0=o.2E/o.3L;B z1=o.O.3Y();if(z1.1g>0){z0=z1.1g/z1.1d}B z=y[0]/y[1];if(z0!=z){if(o.3S){O.dG()}B w2=o.3L*z;B x2=w2/o.2E;B h2=o.2E/z;B y2=h2/o.3L;if(x2<1){o.3b.x0=o.3b.x=3l(x2);o.3b.y=1}F{o.3b.x=1;o.3b.y0=o.3b.y=3l(y2)}Q(o.3d,{"2t":"2F("+o.3b.x+") 2K("+o.3b.y+")"});o.fU=x}}F{o.3b.x+=3l(x);o.3b.y+=3l(x);Q(o.3d,{"2t":"2F("+o.3b.x+") 2K("+o.3b.y+")"})}if(v.1D.RM==1){if(!o.mG){if(o.3b.x>0||o.3b.y>1){wC(o.3d,\'o.RL\');o.mG=H}}mC()}o.R?o.R.hz(\'1F\'):\'\'};G.ee=E(){if(o.3S){O.dG()}o.3b.x=o.3b.x0;o.3b.y=o.3b.y0;Q(o.3d,{"2t":"2F("+o.3b.x+") 2K("+o.3b.y+")"});o.R.hz(\'1F\');o.fU=28;mC()};E mC(){if(o.mG&&v.1D.Qy!=1){if(o.3b.x==1&&o.3b.y==1){Q(o.3d,{"1c":0,"1b":0})}}};G.nT=E(x,y){O.nT(x,y)};G.9y=E(){J 9y()};E 9y(){J 3c?(3c.S>0?(3c[62]?3c[62]:\'\'):\'\'):\'\'};G.mF=E(){J 3c.S};G.8x=E(){J O?O.8x():I};G.4W=E(){if(o.3S){O.4W()}};G.n6=E(){O.n6()};E mM(){B 4q=fT(v.my+\'?18=\'+3c[62]);4q.c6=E(){if(G.f3==4&&G.6b==5c){if(G.c5){v.29=G.c5;o.U.ak(\'29\')}}};4q.dR()}};B wm=E(18,26,1Q){B V=1Z(v.gZ==1?"wl":"g5");B 7I;B nM=0;B 1v;B 3G=I;B lP=I;B nK=I;B 7G=I;B cW=-1;B iW=-1;B 3m;B 4Y=I;B ws;B nR=I;B 4P=I;o.4a=I;B 6x=0;B 7v=I;B gV=0;B 2j;B Qp;B lC=I;B gi=-1;B 9j=-1;B mj;B nS;B 8z;B h6;B Qo;B iV;B vt=\'g5/En; Qn="Qm.Ql, Qj.40.2"\';B kp=I;Q(V,{\'1p\':\'ja\',\'1g\':\'1w%\',\'1d\':\'1w%\',\'2W-gR\':\'nV\',\'5b\':"6W 0.2s 3A",\'b0-1d\':\'2X\',\'6j-1d\':\'1R\',\'b0-1g\':\'2X\',\'6j-1g\':\'1R\'});dG();if(o.1i.5A&&v.2T==1&&v.m1==1){if(!o.1A&&v.5Y){3P(V,{\'kE\':1})}F{o.2H=H;o.R?o.R.4C():\'\';3P(V,{\'2H\':1,\'kE\':1,\'2T\':1})}}F{if(v.wk==1&&o.1i.1W){if(v.Qi!=1&&o.1i.5A&&v.1N!=1){}F{3P(V,{\'kE\':1})}}if(!o.1i.tv){3P(V,{\'4p\':(v.4p==1?\'6l\':\'1R\')})}}if(v.Qh==1){3P(V,{"Qg":"wj","Qf":"wj"})}18=gd(18);3P(V,{\'2Y\':18,\'x-3o-6n\':\'BF\',\'wD\':\'H\'});if(v.1T&&v.Qd==1){3P(V,{"1T":v.1T})}if(v.Qc!=1){3P(V,{\'wD\':\'H\'})}if(v.Qb==1){3P(V,{\'1Q\':\'I\'})}if(1Q){V.2T=H;if(v.1Q.d9!=1||v.2T==1){V.2H=H}F{V.1y=22(v.1Q.1y)?v.1Q.1y:v.1y}}if(v.Q8==1){3P(V,{\'Q7\':\'Qz\'})}ma();if(v.Qk==1){B b8=1Z("bM");3P(b8,{"BB":"no","BD":"H","BE":"H","2Y":""});Q(b8,{"1p":"2n","1g":"1w%","1d":"1w%","3n":0});26.1V(b8);B wY=1t.aj(E(){if(b8.fm.1K.f3==="QA"){1t.4z(wY);Q(b8.oa.8T,{"3U":0,"33":0});b8.oa.8T.1V(V)}},1w)}F{26.1V(V)}if(!L(18)){18=\'\'}B f6=I;if(o.1i.tv){if(18.K("QS")>0){f6=H}}if(o.1i.5R){if(18.K("R6")>0||(v.yn==1&&v.bP==1)){f6=H}}if(o.1i.3E){if(18.K("mV")>0){f6=H}}o.1i.5R?ut():\'\';if(18.K(".wV")>0){4P=H;if(!o.3m){if(1z wG!=="1H"){o.3m=1C wG()}F{4P=I}}if(L(o.3m)){if(!L(1t.vy)){o.3m.lA()}F{nA()}}}F if(((2q.1v==1&&v.nl!=1)||18.K(".vR")>0)&&!f6&&(o.bY.K("6p")!=-1||L(1t.4u))){3G=H;lP=H;2C{if(L(1t.4u)){if(!4u.vF()||(o.1i.5R&&v.R2==1&&!o.1i.3E)||(o.1i.3E&&v.mV==1)||(o.1i.kn&&v.R1==1)){1l(\'6p R0 \',4u.vF());3G=I}F{if(v.4p==1||v.2T==1||v.vw==1||1Q){bm(I)}}}F{3G=I}}2k(2j){3G=I}}F if(18.K("w")==0&&18.K("s")==1&&v.QY==1){7v=H;mT()}if(o.1i.tv&&v.2T==1&&!3G&&!4P&&!7v){1E(E(){o.U.kM()},1w)}if(v.8w==1){L(o.8w)?o.8w.ac():\'\';o.8w=1C QW()};G.n6=E(){nA()};E nA(){4P=H;if(o8()){if(v.4p==1||v.2T==1||v.vA==1){j5(I)}}F{4P=I;1l("QT gY yx")}}E j5(x){if(o.3m&&!4Y){o.3m.bW(x,V,18,1Q);L(1t.vy)?4Y=H:\'\'}}E bm(x){1l("6p");if(o.3w.S>1){v.7e=0;v.vQ=H}F{v.vQ?v.7e=1:\'\'}if(o.8j.S>1){v.9Y=0;v.w9=H}F{v.w9?v.9Y=1:\'\'}o.8z=I;cW=-1;8z=[];o.3I?o.3I.QP():\'\';B nD=I;if(v.5Y&&v.w8==1){nD=H;v.w8=0}7I={yB:(v.w7==1&&!1Q),QM:(v.4p==1||v.2T==1||1Q||x)&&!nD,cF:60,m5:60,QJ:I};if(v.w1>0){7I.QI={6a:{vS:v.w1*2b}}}if(v.w0>0){7I.QG={6a:{vS:v.w0*2b}}}if(v.QE==1){7I.QD=H}if(v.bP==1){B ks=[\'wv\',\'pr\',\'ck\'];B k8=[\'9Q.Pn.cD\',\'9Q.QK.QV\',\'5o.w3.R3\'];B dj={};W(B i=0;i<ks.S;i++){if(v[\'bP\'+ks[i]]==1){dj[k8[i]]={};if(22(v[\'bP\'+ks[i]+\'l\'])){dj[k8[i]].R4=mH(v[\'bP\'+ks[i]+\'l\'])}if(22(v[\'bP\'+ks[i]+\'s\'])){dj[k8[i]].Q5=mH(v[\'bP\'+ks[i]+\'s\'])}}}7I.Q9=H;7I.Qa=dj}if(v.vX==1){7I[\'Qt\']=E(4q,18){4q.Qx=H}}if(L(v.5a)){if(L(v.5a.cF)){if(v.5a.cF>ek){v.5a.cF=ek}v.5a.m5=v.5a.cF}if(L(v.5a.wg)){v.5a.m5=v.5a.cF=v.5a.wg}if(1z v.5a=="2W"){W(B Y in v.5a){if(v.5a[Y].4T().K(\'4G:\')==0){v.5a[Y]=4G(v.5a[Y].1B(5))}7I[Y]=v.5a[Y]}}}js("RN",1v);1v=1C 4u(7I);js("1v",1v,1);1v.yp(18);1v.RP(V);1v.on(4u.5G.RQ,E(){1l("6p RR")});1v.on(4u.5G.S7,E(1q,21){!1Q?o.U.kM():\'\'});1v.on(4u.5G.S8,E(1q,21){if(!1Q&&v.7e==1&&7L()>1){tf();kv();o.R?o.R.f1(o.2J):\'\'}});1v.on(4u.5G.S6,E(1q,21){kv()});1v.on(4u.5G.S4,E(1q,21){kv()});1v.on(4u.5G.S3,E(1q,21){if(!1Q){if(21.eM.4a!=o.4a){o.4a=21.eM.4a;o.R.5m()}o.4a=21.eM.4a;if(o.4a){1l("S2");o.yb=18.K("?ow")>-1;if(V.1h>0&&V.9l>0){if(V.1h-V.9l<10){if(o.e3>0){if(o.e3==V.9l&&o.y8==V.1h){o.l1++;if(o.l1>2){o.l1=0;o.e3=-1;1v.8v();bm(H);8t()}}F{o.e3=-1}}F{o.e3=V.9l;o.y8=V.1h}}}}}if(v.7e==1){o.2J=1v.io;o.R?o.R.f1(o.2J):\'\'}iw()});1v.on(4u.5G.S0,E(1q,21){if(L(21.eb)){!1Q?js("RY",21.eb.RG):\'\';if(v.Rq==1){1z y7!=="1H"?y7(21.eb):\'\'}}if(cW>-1){1v.ts=cW;cW=-1}2w(o.cK);nK=H;yw()});1v.on(4u.5G.Rd,E(1q,21){js("Rg",21,1)});1v.on(4u.5G.Rh,E(1q,21){if(!1Q&&v.9Y==1){1E(nr,4l)}});1v.on(4u.5G.Rj,E(1q,21){if(!1Q&&v.9Y==1){ng()}});1v.Rk=I;if(v.Rl==1){1v.on(4u.5G.Ro,E(1q,21){if(1z(21)=="2W"){if(21.eb.1G==\'42\'){B fu=21.eb.18;if(fu){B st=1v.DO;if(o.9A){o.3I.Dd(st+\'Ra\'+fu)}F{!8z[st]?8z[st]=[]:\'\';8z[st].2U(fu)}}}}});1v.on(4u.5G.Rr,E(1q,21){B x=1v.Rs;B y=\'\';W(B i=0;i<x.S;i++){y+=(y!=\'\'?\',\':\'\')+\'[\'+x[i].5Z+\']1v\'+i;x[i].6a?o.Rw=x[i].5Z:\'\'}3a("42",y)})}1v.on(4u.5G.RC,E(1q,21){v.1l==1?7p.1l(21):\'\';js(21.1G+\'4u\',21,0,H);o.m9=21;if(21.cd){if(21.1G=="Or"){1l("6p cd xb 2j");if(v.kZ==1&&3t()==0){lT()}F{2j=21.eM+\' (\'+21.1G+\')\';o.2c>0||1Q||v.4a==1||7v?\'\':o.2c=3t();1v.8v();if(!1Q){o.cd=H;o.O.5M()}}}F{B nx=I;if(21.1G=="Ot"){if(v.Ox==1&&o.O.mF()>0){nx=H}F{1l("6p cd O 2j, eR");1v.OF()}}F{nx=H}if(nx){2j="6p cd 2j, 8v";1v.8v();!1Q?o.O.5M():\'\'}}}F{1l("6p ",21.1G,21.eM,(21.kL?21.kL.mB:\'\'));js("OJ",(21.kL?21.kL.mB:\'\'));if(6x>0){6x=2;mi()}}});7G=H}E mH(x){if(x){W(B j=1;j<11;j++){if(v["ye"+j]){x=x.1P("{"+j+"}",v["ye"+j])}}}J x}E kv(){if(!1Q&&v.7e==1&&7L()>1){if(o.2J!=1v.io){o.2J=1v.io;o.R?o.R.f1(o.2J):\'\';1l("6p OD "+o.2J)}if(22(v.l5)&&o.2J>0){B fq=v.l5.2g(",");W(B k=0;k<fq.S;k++){if(o.2S[o.2J].K(fq[k])>-1){1l(\'Oj 7l\');1v.h0=o.2J-1;o.2J--;1j}}}if(v.7R!=1&&jE()&&iW>-1){mJ(iW)}}}E mT(){if(L(1t.ys)){if(o8()){if(!L(o.ws)){o.ws=1C NP()}ws=1C ys(V,18,2r(v.NS,{yB:H}));nR=H}F{7v=I;1l("gY yx")}}}E yw(){mg()};G.4W=E(){mg()};E mg(){if(v.AI&&o.R){if(V.9s.S>0){if(v.4W==1){V.9s[V.9s.S-1].d2="DD"}F{V.9s[V.9s.S-1].d2="3g"}if(!o.4W){o.4W=H;o.R.5m()}}F{if(o.4W){o.4W=I;o.R.5m()}}}}E lT(){1l("Ol");!1Q&&o.1r?o.U.2O():\'\';o.U.5B();6x=1;mi(o.1r)}E mi(x){if(6x>0){2w(mj);mj=1E(yq,v.yr*2b)}}E yq(){if(6x>0){1l("PE");if(3G){if(6x==1){1v.yp(18)}if(6x==2){1v.8v();bm(H);V.1r()}}F{3P(V,{\'2Y\':18})}}}V.1Y(\'PH\',xd);V.1Y(\'2j\',n0);V.1Y(\'6m\',8t);V.1Y(\'1r\',8k);V.1Y(\'2Z\',gq);V.1Y(\'DH\',go);V.1Y(\'gI\',gn);V.1Y(\'h7\',gp);V.1Y(\'Db\',gr);V.1Y(\'Dc\',gt);V.1Y(\'6f\',dn);V.1Y(\'CI\',gv);V.1Y(\'PI\',xv);V.1Y(\'Dh\',nk);V.1Y(\'Di\',ns);if(v.yn==1&&o.1i.5R){if(22(v.PS)){if(22(v.PU)){V.1Y(\'E1\',o7)}F{if(1z ym!=="1H"){o.iO=ym(18,V)}}}}if(o.1i.5A){V.1Y("PX",eC,I);V.1Y(\'yj\',yg)}E yg(){V.bt("R")}E eC(){1l("5A ew",V.xP);if(V.xP){o.U.cr()}}E xd(){if(!3G&&!4P){!1Q?o.U.kM():\'\'}}E n0(){if(!3G&&!4P){if(V.2j){B x=V.2j.mB;2j=V.2j.8u;if(2j==\'\'){if(x==1){2j="sJ"}if(x==2){2j="xb"}if(x==3){2j="ba"}if(x==4){2j="gY q5"}}1l("l2: ",2j)}if(lP&&v.kZ==1&&3t()==0){2j=1H;lT()}if(2j!=1H||o.1i.3E){5M()}}}E 5M(){!1Q?o.O.5M():\'\'}E 8t(){if(!1Q){o.O.8t()}F{if(v.1Q.7V==1){V.9l=0;V.1r()}}}E 8k(){if(!o.1A&&v.5Y){1l(\'Pd 1r\');2Z();o.U.2i();J}if(3G&&6x>0){}F{if(!1Q){B 8X=o.U.6w()&&o.kP!=1;if(8X||9j==-1){B x=I;if(3G){if(L(o.1N)||L(o.4w)){if(8X){}F{1l(\'2Z f5\');2Z();x=H}}}if(!x){o.O.8k()}}}}}E gq(){if(!kp){1l("Pm");if(o.1r&&o.cB&&!V.6m&&v.vu==1&&!o.9a){1l("vu");d1()}F{!1Q&&!o.Po&&V.a2?o.O.gq():\'\'}}}E go(){!1Q?o.O.go():\'\';if(9j>-1){if(3t()>9j){2Z();9j=-1}}}E gn(){!1Q?o.O.gn():\'\'}E gp(){!1Q?o.O.gp():\'\'}E gr(){if(1Q){jp()}F{o.O.gr();nG();if(3G&&6x>0){6x=0;1l("Pp up");1v.tr();d1();o.R.2i()}if(L(v.7s)){2z()}iV?us():\'\';1E(xD,4l)}}E sV(){if(V.C.1c=="-VN"||V.xG<-2b){aR()}}E xD(){if(V){if(V.9x&&o.6h.S==0&&v.VS!=0){B at=V.9x;W(i=0;i<at.S;i++){B x=o.O.nq((at[i].6U?at[i].6U+\' (\':\'\')+at[i].xC+(at[i].6U?\')\':\'\'),i);if(x==v.94){o.5t=o.8a=i}o.6h[i]=x}o.R.hh(o.8a)}}if(o.8a>0){cT(o.8a,1)}};G.7s=E(){J(V.jC/V.dL)};E jp(){if(V.dL>0){Q(26,{"1d":26.1U/(V.jC/V.dL)-2P(v.1Q.3n)})}F{if(nM<20){1E(jp,1w);nM++}}}E nG(){if(v.hI==1){4z(o.nI);o.nI=aj(nJ,1w);nJ()}}E nJ(){if(V){if(V.dL>0){o.U.xA(V.jC/V.dL);4z(o.nI)}}}E gv(){!1Q&&!7v?o.O.gv():\'\'}E gt(){!1Q?o.O.gt():\'\'}E dn(){if(3G&&6x>0){}F{!1Q?o.O.dn():\'\'}}E xv(){o.U.xu()}E o8(){B jS=1t.x5=1t.x5||1t.US;B gB=1t.vv=1t.vv||1t.UV;B ki=jS&&1z jS.ki===\'E\'&&jS.ki(vt);B tg=!gB||gB.o3&&1z gB.o3.UX===\'E\'&&1z gB.o3.5C===\'E\';J ki&&tg}B nu="<a4 C=\'1I:0.5\'>";E tf(){if(!1Q&&v.7e==1){B x=1v.7D;B q=-1;o.2S=[];if(x.S>1){if(v.4D==\'6j\'){q=x.S-1}W(B i=0;i<x.S;i++){if(L(x[i].1d)){B y=o.O.tc(x[i],v.t9);if(o.2S.K(y)>-1||v.V9==1){if(L(x[i].7J)){B yi=o.2S.K(y);yi>-1?o.2S[yi]+=" "+nu+" &kD;"+2P(x[yi].7J/2b)+\' \'+41(\'cG\')+\'</a4>\':\'\';o.2S[i]=y+" "+nu+" &kD;"+2P(x[i].7J/2b)+\' \'+41(\'cG\')+\'</a4>\'}}F{o.2S[i]=y}if(L(x[i].tn)){o.8c[i]=x[i].tn[0]}}F if(L(x[i].5Z)){o.2S[i]=x[i].5Z}F{o.2S[i]=i}if(L(v.4D)&&q==-1){if(v.4D==o.2S[i]){q=i}}if(L(o.4D)){if(o.4D==o.2S[i]){q=i}}}if(v.7R==1){o.2S[x.S]=41("2X")}F{q==-1?q=x.S-1:\'\'}if(v.te==1||q>-1){if(v.h5=="56"||(!o.1A&&v.4p==0)){1v.m8=q}F{if(v.h5=="Ea"){1v.h0=q}}o.2J=q}F{if(v.7R==1){o.2J=1v.7D.S-1}F{o.2J=1v.UK}}if(v.tq>0){1v.ic=x.S-v.tq*1-1}iw()}if(1v.7D[o.2J]){o.7J=2r(1v.7D[o.2J].7J,0)}o.R?o.R.5m():\'\'}}E iw(){if(v.9Y==1){nr();ng()}}E nr(){if(!1Q&&v.9Y==1){B x=1v.9x;o.6h=[];B 2h;B 1J=-1;if(x.S>1){W(B i=0;i<x.S;i++){2h=I;if(L(x[i].cO)&&o.8c.S>0){if(x[i].cO!=o.8c[o.2J]){W(B j=0;j<o.8c.S;j++){if(o.8c[j]==x[i].cO){2h=H}}}}if(!2h){o.6h[i]=(L(x[i].5Z)?o.O.nq(x[i].5Z,i):i)+(v.Vl==1&&L(x[i].8f)?\' (\'+x[i].8f+\')\':\'\');if(L(v.94)){if(v.94==o.6h[i]){1J=i}}}}}}if(1J>-1){o.5t=1J;1v.jx=1J}}E ng(){if(!1Q){B x=1v.9x;B y=1v.jx;if(y>-1){if(L(x[y].cO)){if(o.8c.S>0){if(o.8c[o.2J]!=x[y].cO){W(B i=0;i<x.S;i++){if(x[i].5Z==x[y].5Z&&x[i].cO==o.8c[o.2J]){1v.jx=i;y=i;1j}}}}}o.5t=y;1l("6p Vo",o.5t);o.R.hh(o.5t)}}};G.cT=E(x,y){cT(x,y)};E cT(x,y){if(V.9x.S>1){V.9x[x].mn=H;V.9x[y==1?0:o.8a].mn=I;o.8a=x;y!=1?V.9l=o.O.Z():\'\'}}E 3t(){if(4P){J 4Y?o.3m.Z():0}F{J V.9l}};E 3k(){B x=V.1h;if(x==VF){v.4a=1;x=3t()+10;if(o.a3){x<o.a3?x=o.a3:\'\'}o.a3=x}if(4P&&4Y){x=o.3m.1h()}if(L(v.4e)){if(6e([v.4e],\'-\')){x=x+v.4e*1}F{x=v.4e}}J!lm(x)?x:0}G.2i=E(){B p=H;if(3G&&!nK){if(!7G){bm(H)}1v.tr()}if(4P&&!4Y){j5(H);p=I}if(7v){if(!nR){mT()}ws.1r();p=I}sV();p?d1():\'\'};B VH;E d1(){if(18!="1R"&&V){B pp=V.1r();if(pp!==1H){pp.a7(E(){1l("SP");if(!o.2H){if(V.2H){1l("SS");V.2H=I}}gV=0}).2k(E(2j){B em=2j.8u;1l("ST",em);if(em.K(\'9u\')==-1&&em.K(\'SV by\')==-1){if(v.m1==1&&L(V)&&o.1r){1l(\'SW\',o.1r);o.U.4C();2C{V.1y=0}2k(e){};B lO=V.1r();if(lO){lO.a7(E(){}).2k(E(e){1l("T0",e.8u);if(o.1i.tv&&(3G||4P)){}F{o.R.2O();o.U.5B();js("T1")}})}}F{if(!o.dI){o.R.2O();o.U.5B()}}}F{if(em.K(\'bz T2\')>0||em.K(\'sJ\')>0){if(o.1r){if(gV<5){1l("T6",gV);1E(d1,T7);gV++}F{}}}}})}}}G.mo=E(){if(o.4w||o.1N){if(o.7x){bK()}if(!o.fK&&o.1i.1W&&o.1i.3o){if(!V.2H){V.2H=H;lC=H}Q(V,{"1p":"2n","1b":-5q,"1c":-5q});9j=3t();if(!7v){V.1r()}if(9j==0&&o.2c>0){h6=o.2c}}}};G.aR=E(){aR()};E aR(){if(!o.fK&&(o.1i.1W||o.1i.3o)){Q(V,{"1p":"ja","1b":0,"1c":0});if(L(v.7s)){2z()}if(lC){!o.2H?V.2H=I:\'\';lC=I}if(h6>0){o.2c=h6;h6=0}9j=-1}};G.2O=E(){1l(\'a2\');2Z()};E 2Z(){if(7v){ws.2Z()}F{V.2Z()}};G.dh=E(){!V.a2?2O():d1()};G.3p=E(x){if(4P&&4Y){o.3m.3r(x)}F{if(3G){if(v.T4==1&&x>0&&jE()&&v.7R==1){cW=1v.h0;1v.ts=0}}V.9l=x}};G.4C=E(){V.2H=H};G.5j=E(){V.2H=I;if(o.2f=="1v"&&o.1i.3E&&v.1N==1){if(!L(o.uY)){kp=H;1l("3E 7q");V.2Z();1E(E(){V.1r();kp=I},10);o.uY=H}}};G.3q=E(x){V.1y=x};G.uX=E(){if(o.vm!=V){B 9u;B 7j;if(o.hJ[V]){9u=o.hJ[V];7j=o.mZ[V]}F{1t.hM=1t.hM||1t.Sh;if(L(1t.hM)){2C{7j=1C hM();9u=7j.Sx(V);o.hJ[V]=9u;o.mZ[V]=7j}2k(e){1l(e)}}}if(7j){B gA=7j.Sy();gA.gA.7a=v.uN;9u.v6(gA);gA.v6(7j.SG);o.n3=H;o.vm=V}}};G.n1=E(){J!V.a2};G.53=E(){J v.4a==1||7v?H:o.4a};G.8x=E(){J V};G.vb=E(){3P(V,{\'R\':\'1\'});J H};G.4p=E(){3P(V,{\'4p\':\'6l\'});if(3G&&!7G){bm(I)}if(4P&&!4Y){j5(I)}};G.6b=E(){B aF="8Z";if(V.a2){aF="a2"}if(V.6m){aF="6m"}J aF};G.o9=E(x,y){1Q=x;y.1V(V);26=y;if(x){if(v.1Q.d9!=1){V.2H=H}F{if(!o.2H){V.2H=I}}jp();if(o.2S.S>0&&v.7R==1){if(3G){gi=o.2J;1v.ic=0;1v.h0=0}}}F{if(!o.2H&&v.1Q.d9!=1){V.2H=I}V.1y=22(v.1Q.1y)?v.1Q.1y:v.1y;nG();if(o.2S.S>0&&v.7R==1){if(3G){1v.ic=-1;if(gi>-1){gi<1v.7D.S?1v.m8=gi:\'\'}}}}};G.Z=E(){J 3t()};G.1h=E(){J 3k()};G.8I=E(){B x=0;if(V.6u){if(V.6u.S>0){B y=3t();W(B i=0;i<V.6u.S;i++){if((y>=V.6u.1A(i)||y>=V.6u.1A(i)-1w)&&y<=V.6u.4e(i)){x=V.6u.4e(i)}}x==0?x=V.6u.4e(V.6u.S-1):\'\'}}if(L(v.4e)){B ed=v.4e;if(6e([ed],\'-\')){ed=3k()}x>ed?x=ed:\'\'}J x};G.2X=E(){J jE()};E jE(){B x=I;if(3G){if(7G){x=1v.Uc}}F if(4P){if(4Y){x=o.3m.2X()}}J x}G.3Y=E(){J{"1g":V.jC,"1d":V.dL}};G.2Y=E(x){if(x){1l("2Y");x=x.1P(/\\(4J\\)/g,2u.4J());x=gd(x);18=x;o.7m!=2?o.7m=I:\'\';if(4P){if(4Y){o.3m.9u(x)}}F if(3G){3G&&1v?1v.8v():\'\';bm(o.1A||o.2T);mm()}F{3P(V,{\'2Y\':x,\'2T\':0});ma();2Z()}}};E gd(x){if(x){B y=x.K(\':Uh:\');if(y>0){o.gd=x.1B(y+6);x=x.1B(0,y)}}J x}E ma(){if(o.1i.5R&&V){B y=V.9s;if(y){W(B i=0;i<y.S;i++){y[i].d2="Ua"}}y=V.9x;if(y){W(i=0;i<y.S;i++){y[i].mn=(i==0?1:0)}}o.iO?o.iO.TR(18):\'\'}mm();if(v.mx==1){1z uu!=="1H"?uu(18,V,26):\'\'}}E ut(){if(o.2f=="1v"&&3G){}F{if(1t.TE){iV=H;ur()}}}E us(){iV=I}E ur(e){o.6n=H;1l("6n",o.6n);!1Q?o.U.i1():\'\'}G.6n=E(){V.TH()};G.7o=E(){bK()};E mm(){if(o.1i.3o){if(L(V.TI)&&!o.1i.5A){o.7o=H}if(1K.TK&&!V.TN){o.7o=H}}}E bK(){if(o.1i.5R){if(V.TO==="jY-in-jY"){V.yD("zg");o.7x=I}F{V.yD("jY-in-jY");o.7x=H}}F{if(!1K.NL){4G(\'V.TS().a7(p => {o.7x = H;}).2k(2j => {o.7x = I;});\')}F{4G(\'1K.TP().a7(ok =>{o.7x = I;}).2k(2j => {});\')}}};E nk(){o.7x=H};E ns(){o.7x=I};E o7(e){if(1z E4!=="1H"){o.iO=E4(e)}}G.Eg=E(x){if(4Y){o.3m.Ec(x)}};G.E9=E(x){if(4Y){if(V.6u.S>0){o.3m.TG(x)}}};G.Tx=E(x){if(o.ws){o.ws.Es(ws,x,-1)}};G.TB=E(x){if(o.ws){o.ws.Es(ws,-1,x)}};G.Eo=E(x){iW=x*1;mJ(x)};E mJ(x){if(7G){B y=2P(x);if(y>=1v.7D.S){if(v.7R==1){y=-1;1v.ic=-1}F{y=1v.7D.S-1}}if(v.h5=="Ea"){1E(dn,4l);1v.h0=y}if(v.h5=="56"){1l("6p 56 Up "+y);1v.m8=y}if(y==-1){o.2J=1v.io}iw()}};G.iy=E(){J 1v};G.iz=E(){J 4Y?o.3m.Uj():I};G.7L=E(){J 7L()};E 7L(){B x=0;if(7G){if(1v.7D){x=1v.7D.S}}J x}G.9w=E(){J 9w()};G.dG=E(){dG()};E dG(){if(V){if(v.j2==1||v.5F==1){if(v.Ug==1||v.5F==1){Q(V,{\'2W-gR\':\'5F\'})}F{Q(V,{\'2W-gR\':\'m3\'})}}F{Q(V,{\'2W-gR\':\'nV\'})}}}G.3Z=E(){2z()};E 2z(){if(v.7s){3a(\'1F\',5D(v.7s).1P(\'/\',\':\'))}}E 9w(){B x=0;if(4Y){x=o.3m.7D()}J x}G.Dp=E(x){if(7G){1v.jx=2P(x)}};G.nT=E(x,y){if(y=="1v"&&7G&&nS){nS.Uf(x)}if(y=="Ue"&&7G){if(8z[x]&&o.3I){W(B i=0;i<8z[x].S;i++){o.3I.Dd(8z[x][i])}}1E(E(){1v.DO=x*1},4l)}if(y=="3m"&&4Y){o.3m.U5(x)}};G.gj=E(x){if(x){V.U3=x}};G.nL=E(){B x=V.Tk;B y=[];W(B i=0;i<x.S;i++){if(x[i].jX.jT()==\'7P\'){x[i].4Z("bz",nX);y.2U(x[i])}}W(B i=0;i<y.S;i++){V.3C(y[i])}W(B i=0;i<V.9s.S;i++){V.9s[i].d2=\'3g\'}o.o6=I};G.DB=E(x,y,z){if(x!=\'\'){if(x.K(\' or \')>0){B xx=x.2g(\' or \');x=xx[0]}B 7P=1K.1Z(\'7P\');7P.5V(\'2Y\',x);7P.5V(\'6U\',y);7P.5V(\'SJ\',\'DJ\');7P.5V(\'d2\',\'DD\');if(z){7P.5V(\'6a\',\'\')}V.1V(7P);7P.1Y("bz",nX)}};E nX(e){if(e.6F.6U&&o.3I){W(B i=0;i<o.8B.S;i++){if(o.8B[i]==e.6F.6U){o.3I.hb(i)}}}};G.j9=E(){J 2j?2j:\'\'};G.4s=E(){4z(o.SI);3G&&1v?1v.8v():\'\';4P&&4Y?o.3m.SH():\'\';7v&&ws?ws.2h():\'\';V.4Z(\'2j\',n0);V.4Z(\'6m\',8t);V.4Z(\'1r\',8k);V.4Z(\'2Z\',gq);V.4Z(\'DH\',go);V.4Z(\'gI\',gn);V.4Z(\'h7\',gp);V.4Z(\'Db\',gr);V.4Z(\'Dc\',gt);V.4Z(\'6f\',dn);V.4Z(\'CI\',gv);V.4Z(\'Dh\',nk);V.4Z(\'Di\',ns);V.4Z(\'E1\',o7);V.2Y=\'\';if(26.jX=="yF"){26.oa.8T.3C(V)}F{26.3C(V)}V=28}};B pJ=E(){B b=[];B dp=[];B 4g=[];B 6f=I;B lr;B 6k=I;B 1e;B X;if(o.3K){o.3K.1k();o.3K=28}B kd;o.4R=[0.25,0.5,0.75,1,1.25,1.5,2];if(v.1e.Sv==1&&L(v.1e.gU)){v.1e.gU=v.1e.gU.1P(/\\n/ig,\'\');o.4R=v.1e.gU.2g(",")}o.gO=6e(o.4R,1,H);o.8N==3?o.8N=o.gO:\'\';W(B i in o.ey){if(o.ey.2e(i)){!L(v.1e[i])?v.1e[i]=5:\'\';o[\'Su\'+i]=[\'+ \'+v.1e[i]+\'%\',\'&St; \'+v.1e[i]+\'%\',(o.ey[i]*1w+\'%\')]}}if(v.1m.b7==1&&o.1i.3E&&v.dy==1){v.1m.1k=0}B ku=I;B 7i=0;B kJ=0;B ch=I;B mP=H;B eK;B bg=1C qL();B 1e;B 43=[];B mt=I;B og=I;B fV=0;B 9i=[];if(v.cN.1p=="R-2Q"){v.cN.1p="R"}W(B y in v){if(v.2e(y)){if(y.K("AA")==0&&v[y]){!L(v[y].mK)?v[y].mK=v[y].43:v[y].43=v[y].mK;if(43[v[y].43]){v[y].43+=v[y].43}43[v[y].43]=y;if(v.cN.1p!="R"){if(v[y].1p=="R-2Q"){9i.2U([y,v[y].43]);mt=H}F{if(v[y].1p=="R"||v[y].1p==1H){mt?og=H:\'\'}}}fV<v[y].43?fV=v[y].43:\'\'}}}if(og){9i.Ss(E(a,b){J a[1]-b[1]});W(B i=0;i<9i.S;i++){43[v[9i[i][0]].43]=28;v[9i[i][0]].43=fV+1;fV++;43[v[9i[i][0]].43]=9i[i][0]}}o.9g=v.1m.1k==1&&v.1m.Cw==1;if(o.9g){o.1m=1Z("2p");o.1M.1V(o.1m);Q(o.1m,{\'1p\':\'2n\',\'1b\':0,\'1c\':0,\'1g\':\'1w%\',\'1d\':\'1w%\',\'5b\':\'1c 0.3s ce-7E\',\'4V-2L\':\'1R\'})}B 5J=1Z("2p");if(o.9g){o.1m.1V(5J)}F{o.1M.1V(5J)}B 91;if(v.1m.So==1){91=1C qL(H)}Q(5J,{\'1p\':\'2n\',\'1b\':0,\'3v\':0,\'1g\':\'1w%\',\'1d\':v.1m.h});5J.cX=E(){!o.1i.1W?o.U.E7():\'\'};if(v.qz==1){3i(bg.c());3i(5J)}W(B i=1;i<43.S;i++){if(43[i]){B y=43[i];if(y){B 17=v[y].17;B Ti=v[y].1k;if(o.1i.1W){if(17=="1y"&&v[y].5Q=="6i"){}F{if(17=="1y"&&v.Th==1&&o.1i.1W){v[y].eH=0}F{if(17=="1y"||(17=="1O"&&v.Tg)){v[y].on=0}}}if(17=="8P"){v[y].Te==1?v[y].on=0:\'\'}}F{if(17=="8P"){v[y].Tc==1?v[y].on=0:\'\'}}if(v[y].1k==1){if(v[y].Dj==1&&L(v[y].kU)){2q[v[y].kU]?v[y].on=0:\'\'}if(v[y].Dk==1&&L(v[y].kS)){!2q[v[y].kS]?v[y].on=0:\'\'}}if(v.qz==1){v[y].on=0}if(v[y].on==1){if(17=="2A"||17=="1y"){b[y]=1C C2(y,17);b[y].2z(b[y].s("w"))}F{b[y]=1C AM(y)}dp.2U(y);if(b[y].g("17")=="29"){if(b[y].s("1u")==\'\'){if(b[y].s("B")!=\'\'){if(!L(v[b[y].s("B")])){b[y].1J("2o",I)}}F{b[y].1J("2o",I)}}}if(b[y].g("17")=="3z"){B lu=b[y].s("2x");if(lu){if(lu.K("2N:")==0&&lu.K(",0/1")>0){B z=lu.2g(",");3a(z[0].1B(4))==0?b[y].9Z(0):\'\'}if(6e([lu],"3y")){o.gf=H}}}b[y].1J("1F",b[y].s("1F"))}}}}if(L(v.1e)){if(1z(6E)==\'E\'){1e=1C 6E("1e");v.1e.9F==1?1e.1n():1e.1k()}F{o.Ta=H}}if(L(v.X)){if(1z(6E)==\'E\'){X=1C 6E("X");if(L(o.X)){X.zT(o.X);if(v.X.iK==0||!L(v.X.iK)){v.X.9F==0?X.1k():\'\'}F{X.1n()}if(v.X.T9==1){X.1n()}}F{X.1k(1)}hF()}}lc();lQ();2z(H);3F();nw();mP=I;E E0(P){B x=0;B T8=I;if(P){if(P.g("17")==\'2A\'){x=4g.1b+P.s("4f")+P.g("1g")/2;if(4g.cn!=28){}F{4g.cn=[]}}F{if(4g.cn!=28){B 9k=P.g("1g")+P.s("4n")+P.s("4f");if(bT(P)){9k=0}if(P.s("3g")==1&&!P.g("1n")){9k=0}if(P.s("9t")>0){9k=0}x=bg.g("w")-v.1m.g1*1-9k+P.g("1g")/2+P.s("4f");B i=0;4g.2Q-=9k;W(i=0;i<4g.cn.S;i++){B 9z=b[4g.cn[i]];if(9z.s("9t")>0){Q(9z.c(),{"1b":(9z.g("x0")-9k)})}F{Q(9z.c(),{"1b":(9z.g("x")-9k)})}9z.1J("x0",9z.g("x"))}4g.cn.2U(P.g("Y"));P.1J(\'d6\',1)}F{if(P.s("3g")==1&&!P.g("1n")&&!P.g("cp")){if(P.g("17")=="1y"){if(P.s("1k")==1&&P.s("eH")==1&&ch){7i+=P.g("1g")+P.s("4f")+P.s("4n");ch=I}}}F{if(P.s("9t")>0){x=4g.1b+P.s("4f")+P.s("4n")}F{B 2h=I;if(P.g("17")=="1y"){if(P.s("1k")==1&&P.s("eH")==1&&!P.g("cp")){if(!o.bq&&!o.6Q){2h=H;ch=I}F{if(!ch){7i-=P.g("1g")+P.s("4f")+P.s("4n");ch=H}}}}if(bT(P)){2h=H}if(!2h){4g.1b+=P.g("1g")/2+P.s("4f");x=4g.1b;4g.1b+=P.g("1g")/2+P.s("4n")}F{x=4g.1b}}}}}}J x};G.Ei=E(){lc();if(X&&v.X.9F&&!o.1A){X.1n()}};G.DW=E(x){if(X){X.6I(x)}};G.AZ=E(){lc()};E lc(){if(o.gf){1z El==\'E\'?o.3y=1C El():\'\'}}E md(P){B 1g=o.1O&&v.1m.gc==0?o.8p:o.2E;B 1d=o.3L;B 8o=0;if(P!=bg){8o=1g/2+P.s("4f")-P.s("4n")}B aZ=1d/2;B m7=P.g("1g");B lL=P.g("1d");B p=P.s("1p");if(p.K("as")>-1){8o=o.2E/2+P.s("4f")-P.s("4n")}if(p.K("1c")==0){aZ=lL/2+(P.s("Ep")*o.3L/1w)}if(p.K("3v")==0){aZ=o.3L-(P==bg?lL:lL/2)-(P.s("Eq")*o.3L/1w)}if(p.K("2Q")>-1){8o=o.2E-m7/2+P.s("4f")-P.s("4n")-(P.s("DC")*o.2E/1w)}if(p.K("1b")>-1){8o=m7/2+P.s("4f")-(P.s("1G")=="1u"?0:P.s("4n"))+(P.s("eB")*o.2E/1w)}if(p.K("7b")>-1){aZ=-o.hj/2-(P.s("Eq")*o.hj/1w)+(P.s("Ep")*o.hj/1w);8o=(p=="7b"?-1:1)*o.pB/2+(P.s("eB")*o.pB/1w)+P.s("4f")-P.s("4n")}if(p.K("R")>-1){B cx=E0(P);8o=(bg?(bg.c()?4F(bg.c().lw):0):0)+cx;if(p=="R-2Q"){8o+=7i}if(v.1m.1p=="1c"){aZ=v.1m.h/2-(v.bJ<0?v.bJ:0)}F{aZ=1d-v.1m.h/2}}J{x:8o,y:aZ+P.s("9M")-P.s("g9")}}E 2z(o1){B w=o.1O&&v.1m.gc==0?o.8p:o.2E;B h=o.3L;if(v.1m.VG==1){v.1m.DZ=22(v.1m.Dz)&&o.bo?v.1m.Dz:v.1m.o5;v.1m.g1=o.2E*v.1m.DZ/1w}F{v.1m.g1=v.1m.o5}Q(bg.c(),{\'1c\':(v.1m.1p=="1c"?0:o.3L-v.1m.h)-v.bJ});bg.1J("y0",(o.3L-v.1m.h-v.bJ));if(v.1m.gc==0&&bg){Q(bg.c(),{\'1g\':w,\'1b\':0,\'33-1b\':0});bg.1J("w",w);if(o.1O){Q(bg.c(),{\'1b\':\'50%\',\'33-1b\':-w/2})}}4g={"1b":v.1m.g1*1,"2Q":(bg.g("w")-v.1m.g1*1)};B mY=I;if(!bg.g("1n")){bg.1J("2o",H);mY=H}B Y;W(B i=0;i<dp.S;i++){Y=dp[i];if(b[Y]){B cc=md(b[Y]);if(cc){if(b[Y].s("4E")=="1p"){if(L(o.5u[Y])){if(b[Y].g("x0")==cc.x&&b[Y].g("y0")==cc.y){2M}F{o.5u[Y].DK(b[Y].g("x0"),cc.x,b[Y].g("y0"),cc.y)}}}b[Y].1J("x0",cc.x);b[Y].1J("y0",cc.y);if(b[Y].s("3g")==1&&!b[Y].g("1n")&&!o1){n2(b[Y])}F{Q(b[Y].c(),{"1p":"2n","1b":b[Y].g("x0"),"1c":b[Y].g("y0")})}}}}if(mY){bg.1J("2o",I)}7i=0;W(Y in b){if(b.2e(Y)){if(b[Y].s("1p")=="R-2Q"&&b[Y].g("17")!="2A"&&7i>-1){7i=4g.2Q-4g.1b}if(b[Y].g("17")=="2A"&&bg){B a1;B ml=b[Y].s("4f")+b[Y].s("eB")*o.2E/1w;B mr=b[Y].s("4n")+b[Y].s("DC")*o.2E/1w;if(b[Y].s("VE")==1){if(b[Y].s("Vq")==1){a1=(o.2E*b[Y].s("w")/1w)-ml-mr}F{a1=b[Y].s("w")}}F{if(b[Y].s("1p").K("R")>-1){a1=4g.2Q-4g.1b-ml-mr;Q(b[Y].c(),{"1b":(4F(bg.c().lw)+4g.1b+ml+a1/2)});7i=-1}F{a1=bg.g("w")-ml-mr;if(bg.c()){Q(b[Y].c(),{"1b":(4F(bg.c().lw)+ml+a1/2)})}}}b[Y].1J("x0",b[Y].g("x"));b[Y].2z(a1)}}}if(1e){gX(1e)}if(X){gX(X)}if(ku||o.1O||kJ!=7i){3F()}}E n2(b){B 1b=0;B 1c=0;if(b.s("1p").K("2Q")>-1&&b.s("1p").K("R")==-1){1b=o.2E+b.g("1g")+10}if(b.s("1p").K("1b")>-1){1b=-b.g("1g")-10}if(b.s("1p").K("1c")>-1){1c=-b.g("1d")*2}if(b.s("1p").K("3v")>-1||b.s("1p").K("R")>-1){1c=o.3L+b.g("1d")+b.g("1g")+10}if(1b>0){Q(b.c(),{"1b":1b})}if(1c>0){Q(b.c(),{"1c":1c})}}E gX(x){B 1c=-5q;x.D9();B y=o.3L-v.1m.h*(x.s("1p").K("1c")>-1?1:2);if(x==X&&v.zW==1){y=o.3L}B lK=(o.1i.1W&&o.3L<W1&&L(x.s("DL"))?x.s("DL"):x.s("nf"))*1;B gl=y-(o.1O&&!o.1i.1W?1w+lK:lK)-(x==X&&lK==0?x.s("9M"):0);gl<1w?gl=1w:\'\';Q(x.c(),{\'6j-1d\':gl});x.co()?Q(x.co(),{\'6j-1d\':gl}):\'\';if(x.g("1n")){1c=o.3L/2-x.g("1d")/2+x.s("9M")-x.s("g9");if(x.s("1p").K("1c")>-1){1c=x.s("9M")-x.s("g9")}if(x.s("1p").K("3v")>-1){1c=o.3L-(v.1m.1p!=\'1c\'?v.1m.h:0)-x.g("1d")+x.s("9M")-x.s("g9")}1c<0?1c=0:\'\'}if(x.g("Y")=="1e"&&o.9C){B DP=o.2E-x.g("1g")-x.s("4n");if(o.9C>DP){Q(x.c(),{"1p":"2n","2Q":x.s("4n"),"1b":"2X","1c":1c})}F{Q(x.c(),{"1p":"2n","1b":o.9C,"2Q":"2X","1c":(o.gT<1c?o.gT:1c)})}}F{if(x.s("1p").K("2Q")>-1){Q(x.c(),{"1p":"2n","2Q":x.s("4n")-x.s("UR"),"1b":"2X","1c":1c})}F if(x.s("1p").K("1b")>-1){Q(x.c(),{"1p":"2n","1b":x.s("4f"),"2Q":"2X","1c":1c})}F{if(x.g("Y")=="X"&&x.s("DU")==1){Q(x.c(),{"1p":"2n","1b":o.2E/2-x.g("1g")/2+x.s("4f")/2-x.s("4n")/2,"1c":1c})}F{B l=o.2E/2-x.g("1g")/2+x.s("4f")-x.s("4n");Q(x.c(),{"1p":"2n","1b":(l>0?l:0),"1c":1c})}}}x.UQ()};G.cC=E(Y){B P=b[Y];B a=P.g("17");if(a){B d=1C 6L();o.bB=d.a6();if(a&&a!=""){kc(P);a=="2Z"?o.DY=1:\'\';a=="1r"?o.DY=0:\'\'}}rl()};G.Vi=E(z,x,y){W(B Y in b){if(b.2e(Y)){if(b[Y].s(z)==x){b[Y].1J(y?"5l":"3i")}}}};G.qe=E(x,s){B y=5p(s,x);J y};E kc(P,1G){o.dI=H;kd=P;B a=P.g("17");if(a=="1r"){o.U.2i();if(o.2H&&v.Dl==1){o.U.5j();v.Dl=0}if(v.1D.on==1&&v.1D.2m==1&&v.1D.nt==1){5E(\'1r\',1)}js("Dy")}F{if(a=="2Z"){o.ke=0;o.U.2O();if(v.1D.on==1&&v.1D.2m==1&&v.1D.nt==1){5E(\'1r\',0)}js("Da")}if(a=="2h"){o.U.kl()}}if(a=="E2"){o.U.3p(0,I)}if(a=="1O"){!o.4i?o.U.7y():\'\'}F{if(a=="nY"){o.U.6z()}}if(a=="2A"){B ld=o.O.1h();B lt=P.g("2a")*ld;if(v.3R>0){ld-=v.3R*1;lt=P.g("2a")*ld+v.3R*1}if(v.Er>0){if(v.Er/ld<=1-P.g("2a")){J}}js(a,lt);o.U.3p(lt,H);if(o.2M){o.2M.nZ(lt,ld);o.2c>0?o.2c=1H:\'\'}js("j8",lt)}if(a=="1y"){B x=P.g("2a");x<0.V0?x=0:\'\';x>1?x=1:\'\';if(P.s("5Q")=="6i"){x=3l(x*o.4R.4v(-1)[0]).pM(1);o.U.aW(x,1)}F if(P.s("5Q")=="qN"){o.O.Ed(x)}F{if(o.4M&&v.p6==1){3D.96("p7",x);if(P.g("2a")>0||o.1i.5A||v.lb==0){3D.o2("eP")}F{3D.96("eP",1)}}o.U.3q(x)}}if(a=="4j"){if(o.4M&&!o.1i.5A&&v.lb==1){3D.96("eP",1)}o.U.4C();if(v.1D.2m==1&&v.1D.Ee==1){5E(\'4j\',0)}}F{if(a=="7q"){if(o.4M){3D.o2("eP")}o.U.5j();if(v.1D.2m==1&&v.1D.Ee==1){5E(\'4j\',1)}}}if(a.K("Z")==0){P.UZ()?P.fk():P.On()}if(a=="lo"){o.O.rp()}if(a=="1F+"){o.O.av(0.1)}if(a=="1F-"){o.O.av(-0.1)}if(a=="1F"){o.O.av(0)}if(a=="4a"){3a("oX");P.1J("jI",1);P.1J("aY",1)}if(a=="3y"){js("3y");lR()}if(a=="1e"){o.9C=1H;if(1e){if(!1e.g("1n")){1e.1n()}F{1e.1k()}}}if(a=="X"){if(o.cs==a){J}o.R.e5()}if(a=="56"){o.R.9e()}if(a=="9V"){o.R.df()}if(a=="3z"){if(P.s("d5")==1&&P.s("2x")!=""){B x=4c(P.s("2x"));if(o.cs==a+x){J}if(x.K(\'{Z}\')>-1){x=x.1P(\'{Z}\',(L(o.2M)?o.2M.8L().t:o.O.Z()))}if(x.K(\'{3e}\')>-1){x=x.1P(\'{3e}\',o.O.9y())}if(x.K(\'{29}\')>-1){x=x.1P(\'{29}\',v.29.1P(/,/ig," "))}if(x=="6n"){o.O.i6()}if(x.K(\'5N\')==0){if(P.s("5N")>0){o.U.3p(o.9J?o.9J.Us():P.s("5N"))}}if(x.K(\'V1\')==0){if(o.9J){o.9J.UG()}}if(x=="UF"){o.U.3p(P.s("eB")*o.O.1h()/1w);!o.1r?o.U.2i():\'\'}P.s("Et")==1?o.U.2O():\'\';B y=x.2g(",");if(x.K("2N:")==0){B z=x.1B(4).2g(";");W(B i=0;i<z.S;i++){y=z[i].2g(",");if(y.S>1){if(y[0]==\'3r\'){if(v.1D.2m==1&&v.1D.UM==1){5E(\'3r\',y[1]>0?1:0)}}3a(y[0],y[1],P);js("j8",y[1]);y[1]==\'0/1\'||y[1]==\'1/0\'?qf():\'\'}F{if(y[0]=="Eh"){B ss=3a(y[0]);if(ss){if(ss.K("21")>-1){if(v.UO==1){B 4d=1K.1Z(\'4d\');4d.5V(\'2Y\',ss);Q(4d,{1p:"oc",2Q:(L(v.jW)?v.jW:20),3v:(L(v.jW)?v.jW:20),1g:0,5b:"1g 0.5s Ej-VP(.75,-0.5,0,1.75)"});4d.C.4k=E3;1K.8T.1V(4d);1E(E(){Q(4d,{1g:(L(v.Eu)?v.Eu:5c)})},1);4d.cX=E(){G.3T.3C(G)}}if(v.VT==1){B a=1Z("a");a.6O=ss;a.7S=y[0]+".eO";a.2a()}}}F{1l(y[0]+" 2j")}}F{3a(y[0])}}}}F{if(x.K("js:")==0){if(x.K("(")>0&&x.K(")")>0){4G(x.1B(3))}F{4G(y[0].1B(3)+\'(\'+(L(y[1])?\'"\'+y[1]+\'"\':\'\')+(L(y[2])?\',"\'+y[2]+\'"\':\'\')+\')\')}}if(x.K("1q:")==0){nN(x.1B(6),o.O.Z())}if(x.K("3y:")==0&&o.3y){o.3y.2N(x.1B(6))}if(x.K("nB:")==0&&o.4b){3a("nB",x.1B(7))}if(x.K("4O")==0||x.K("/")==0||x.K("?")==0||x.K("18:")==0){x.K("18:")==0?x=x.1B(4):\'\';1t.6I(x,P.s("E8"))}if(x.K("7S")==0){o.U.kN()}if(x=="2N:7o"){o.O.bK()}}if(x.K("1e#")>-1){if(1e){B si=x.1B(9).2g(",");if(1e.g("1n")&&1e.g("6I")==si[0]){o.9C=1H;o.gT=1H;1e.1k()}F{o.9C=P.g("x")-P.g("1g")/2;o.gT=P.g("y")+P.g("h");W(B i=0;i<si.S;i++){i==0?1e.1n():\'\';1e.6I(si[i])}X?X.Sf():\'\'}}}if(x.K("1e:")>-1&&v.1e.Pl==1){if(!o.3K){o.3K=1C Ph()}if(v.1e.fG==1){if(1G=="54"){o.3K.1n(x)}F{o.3K.dP(x)}}F{if(!1G){o.3K.dP(x)}}}if(x=="As"){o.U.cz();o.mq=0;P.1J("3i");B bl=5p("2x","6g");if(bl){bl.1J("3i")}}if(x=="6g"){P.4N("OK");P.s("e1")?1t.6G.6O=4c(P.s("e1")):\'\'}}}};G.29=E(t){B y=I;W(B x in b){if(b.2e(x)){if(b[x].g("17")=="29"){if(b[x].s("B")==t||t=="29"){if(b[x].s("1k")==1&&b[x].s("sl")==1&&o.1r){y=H}if(v[t]==\'\'||y){b[x].1J("2o",I)}F{b[x].1J("2o",H)}b[x].4N(v[t])}}}}lU()};G.Dx=E(){lU()};G.lV=E(){W(B x in b){if(b.2e(x)){if(b[x].g("17")=="3z"){if(b[x].s("1G")=="1u"){b[x].7d()}}}}};E lU(){W(B x in b){if(b.2e(x)){if(b[x].g("17")=="3z"){if(b[x].s("1G")=="1u"){b[x].zD(H)}}}}}E lR(){if(L(o.3y)){o.3y.P5()}}G.Dv=E(){lR()};G.A3=E(){if(v.29!=\'\'){W(B x in b){if(b.2e(x)){if(b[x].g("17")=="29"){B y=I;if(!b[x].g("1n")){y=H;b[x].1J("2o",H)}b[x].4N(v.29);if(y){b[x].1J("2o",I)}}}}}};G.Dt=E(){lQ()};E lQ(){if(v.8K){if(1z(v.8K)=="2W"){W(B x in v.8K){if(v.8K.2e(x)){fO(x,v.8K[x])}}}}};G.Ds=E(y,z){fO(y,z)};G.Dr=E(x){if(b[x]){b[x].sE()}};G.Dq=E(){W(B x in b){if(b.2e(x)){if(b[x].g("su")){b[x].sE()}}}};E fO(y,z){if(y){W(B x in b){if(b.2e(x)){if(b[x].g("su")){if(b[x].s("3N")==y){if((!b[x].g("1n")||b[x].s("3g")==1)&&!bT(b[x])){b[x].1J("zK");b[x].1J("2o",H)}b[x].fO(z)}}}}}};G.3Z=E(){2z()};G.Dn=E(){2z(H)};G.Dm=E(){gX(1e)};G.D9=E(){gX(X)};G.2i=E(){W(B x in b){if(b.2e(x)){if(b[x].g("17")=="1r"){b[x].On()}if(b[x].s("pp")==1){b[x].rs(1)}}}o.9S?o.9S.1k():\'\';mw();o.1r=H;3F()};G.2O=E(){W(B x in b){if(b.2e(x)){if(b[x].g("17")=="2Z"||b[x].g("17")=="2h"){b[x].fk()}if(b[x].s("pp")==1){b[x].rs(0)}}}if(X){if(!o.bu&&v.X.z7==1&&!X.9P()){X.1n()}}o.1r=I;G.7U();3F();if(v.1m.1k==1&&v.1m.bV==1){dq(H)}if(o.O.Z()>0){B y=5p("17","4a");if(y){y.1J("jI",0.5);y.1J("aY",0)}}};G.4C=E(){W(B x in b){if(b.2e(x)){if(b[x].g("17")=="4j"){b[x].On()}G.3q(0)}}3F()};G.5j=E(){W(B x in b){if(b.2e(x)){if(b[x].g("17")=="7q"){b[x].fk()}}}if(v.1y<0.1){v.1y=0.5;o.U.3q(v.1y)}F{G.3q(v.1y)}3F()};G.3q=E(1y,y){W(B x in b){if(b.2e(x)){if(b[x].g("17")=="1y"){if(!b[x].s("5Q")||b[x].s("5Q")=="1y"){b[x].59(1y,1,(y=="no"?y:H))}}if(b[x].g("17")=="4j"){b[x].rD(1y)}}}3F()};G.7y=E(){B bl=5p("17","1O");if(bl){bl.On();bl.1J("1F",bl.s("1F"))}3F();ku?1E(3F,4l):\'\';if(o.1O&&o.AC){if(o.1i.gQ||o.1i.tv){1E(2z,10)}}dM();mN()};G.6z=E(){B bl=5p("17","1O");if(bl){bl.fk()}2z();4z(o.fB);3F();mN()};E mN(){if(o.9C){o.9C=1H;o.gT=1H;1e.1k()}}G.8t=E(){W(B x in b){if(b.2e(x)){if(b[x].g("17")=="1r"){b[x].rg()}}}};G.qv=E(){3F()};G.zp=E(){mw()};E mw(){if(X){if(X.g("1n")&&v.X.kI==1){o.R.9v()}}}E 3F(){W(B x in b){if(b.2e(x)){if(b[x].g("17")!="8P"){9p(b[x])}}}9p(bg);if(kJ!=7i){kJ=7i;2z()}if(o.9g){bU(!o.c8&&!o.3J&&!o.1O&&o.1r&&v.1m.b7!=1&&!o.4i)}};E et(){B 1n=6k&&v.1m.eQ==1;if(v.1m.1k==1){if(!o.1r&&v.1m.bV==1){1n=I}}if(1n){W(B x in b){if(b.2e(x)){if(b[x].g("17")!="8P"){9p(b[x],I)}}}Q(o.1M,{"9c":"6a"});o.eG=H;9p(bg,I);if(bg.g("1n")){fI()}bU(I)}}E dq(){B 1k=o.1r&&v.1m.eQ==1&&!o.3h;if(o.ay&&v.1m.P4==1){1k=I}if(!o.1r&&v.1m.1k==1&&v.1m.bV==1){if(o.3J&&v.1m.DT==1&&!o.1i.1W){}F{1k=H}}B kK;if(X){if(X.g("6I?")){kK=H}}if(1e){if(1e.g("1n")){kK=H}if(1e.g("1n")&&o.P3){1k=I}}if(kK&&v.1m.P2==1){B m=v.1m.P1;if(m==1&&o.1i.1W){J}F{if(m==0||!L(m)){J}}}if(o.4i){1k=I}if(1k){W(B x in b){if(b.2e(x)){if(b[x].g("17")!="8P"){9p(b[x],H)}}}9p(bg,H);if(!bg.g("1n")){6k=H;o.O.mO();if(o.1r){Q(o.1M,{"9c":"1R"});o.eG=I}}bU(H)}}E dM(){if(v.1m.eQ==1){if(v.1m.b7==1&&!o.1O&&!o.8n){}F{4z(o.fB);o.fB=aj(dq,((v.1m.6o>0?v.1m.6o:v.1m.DX)*2b))}}}E 9p(P,9H){B 1k=I;B 1n=I;B 9K=I;if(v.1m.1k==1){if((!o.c8&&!o.3J&&!o.1O&&o.1r&&v.1m.b7!=1&&!o.4i)||(o.1O&&6k&&!o.eG)||(o.U.bS()&&o.6m&&!o.3J)){1k=H;1n=I;9K=H}F{1k=I;1n=H}if(L(9H)&&!o.4i){1k=9H;1n=!1k}if(o.9g&&(P.s("1p").K("R")==0||P.s("17")=="2A")){1k=I;1n=H}if(v.1m.bV==1&&!o.1r){if(o.3J&&v.1m.DT==1&&!o.1i.1W){}F{1k=H;1n=I;9K=I}}if(v.1m.PP==1&&!o.6l&&o.1r){1k=I;1n=H}}F{if(P.s("1k")!=1){1n=H}}if(1n&&!o.eG){Q(o.1M,{"9c":"6a"});o.eG=H}B a=P.g("17");if(a=="3z"&&P.s("1p").K("R")==-1){1k=I;1n=H}if(o.4i){if(a=="2A"){if(o.O.1h()==-1){1k=H;1n=I}}}B mf=I;B hp=bT(P);if(P.s("1k")==1){if(P.s("zf")==1){if(9K||9H||(o.1r&&!o.3J)){!9K&&!9H?\'\':hp=H}}if(P.s("PF")==1){if(!9K&&!9H){hp=H}}if(P.s("PD")==1){if(o.1r&&!o.3J){hp=H}}if(P.s("E5")==1||P.s("E6")==1||P.s("Eb")==1){ku=H}}if(hp){1k=H;1n=I}F{!1k?1n=H:\'\'}if(P.s("17")=="1y"){if(P.s("1k")==1&&P.s("eH")==1&&!P.g("cp")){1k=H;1n=I;if(!9K&&(o.6Q||o.bq)&&!9H&&P.s("bH")!=1){1k=I;1n=H}F{mf=H}}}if(o.9a||(!o.1A&&v.1m.1k==1&&v.1m.kO==1)||(!o.6l&&v.1m.1k==1&&v.1m.AW==1)||(!o.1O&&v.1m.1k==1&&v.1m.Pz==1)){if(P.s("1p").K("R")>-1||P.s("1p").K("3v")>-1){1k=H;1n=I}if(v.1m.b7==1&&!o.1O){1k=I;1n=H}}if(1e){if(1e.g("1n")&&v.1e.9F!=1){9K=I;9H=I}}if(X&&o.4x){if(v.X.OW==1){if(o.4x.DE()){J}}}if(a=="3y"){if(L(o.3y)){if(o.3y.9P()){1k=H;1n=I;P.1J("4E","1R")}}}if(a=="X"||a=="56"||a=="9V"||P.s("DG")==1){if(X){if(X.9P()&&P.s("DG")!=0){1k=H;1n=I;P.1J("4E","1R")}}F{1k=H;1n=I}}if(o.O7==1){1k=H;1n=I}if(mf){B cc=md(P);if(cc){cc.y>0?P.1J("y0",cc.y):\'\';Q(P.c(),{"1p":"2n","1c":P.g("y0")})}}if(1k){lS(P,(mP?H:I))}if(1n){Aj(P)}if(P==bg){if(!1k&&1n){fI();5l(5J);91?91.1J("1I",91.s("a")):\'\';6k=I;eK==0?js("ui",1):\'\';eK=1;o.4Q&&o.7C?o.4Q.1n():\'\'}if(1k&&!1n&&!o.4i){o.O.mO();ae();3i(5J);91?91.1J("1I",0):\'\';6k=H;eK==1?js("ui",0):\'\';eK=0;o.4Q&&o.7C?o.4Q.1k():\'\'}if(1e){if(1e.tb()){if(!1e.g("1n")){1n&&!1k?1e.1n():\'\'}F{!1n&&1k?1e.1k(2):\'\'}}}if(X){if(v.X.9F==1&&!X.9P()){if(1n||o.9a){if(v.X.DA==1&&o.1O){}F{if(!X.g("1n")){if(v.X.Em==1){!o.1r&&!o.bu?X.1n():\'\'}F{X.1n()}}}}F{if(1k&&X.g("1n")){X.1k()}}}}}};E bT(P){B x=I;B a=P.g("17");if(P.s("1k")==1){if(P.s("sl")==1){o.1r||o.bu?x=H:\'\'}if(P.s("bV")==1){!o.1r&&!o.bu?x=H:\'\'}if(P.s("OO")==1){o.6m?x=H:\'\'}if(P.s("d8")==1){x=H}F{if(P.s("OL")==1){if(o.1i.cq){P.1J("d8",1);x=H}}if(P.s("OG")==1){if(o.1i.1W){P.1J("d8",1);x=H}}}if(P.s("E6")==1){if(o.2E>P.s("Ef")){P.1J("bH",1);x=H}F{P.1J("bH",0)}}if(P.s("Oy")==1&&!6f){x=H;o.lB=1}if(P.s("Oq")==1&&!o.7m){x=H}if(P.s("RD")==1&&o.7m){x=H}if(P.s("RB")==1&&6f){x=H;o.lB=1}if(P.s("E5")==1){if(o.2E<=P.s("Df")){P.1J("bH",1);x=H}F{P.1J("bH",0)}}if(P.s("RF")==1){o.1A?x=H:\'\'}B t=o.O.Z();B d=o.O.1h();if(P.s("D7")==1&&P.s("D8")>0){if(t>=P.s("D8")){x=H}}if(P.s("Ar")==1&&P.s("DF")>0){if(t<P.s("DF")){x=H}}if(P.s("Aq")==1&&P.s("DI")>0){if(t<d-P.s("DI")||d==0){x=H}}if(P.s("S1")==1){if(X){if(!X.aV()){x=H}}}if(P.s("RO")==1){if(o.1A||!o.2M||o.O.53()){if(P.s("kO")!=1){x=H}}if(o.2M){if(o.2M.8L().t==0){x=H}}}if(P.s("kO")==1){!o.1A?x=H:\'\'}if(P.s("iP")>0){x=H}if(P.s("Dj")==1){if(L(P.s("kU"))){2q[P.s("kU")]?x=H:\'\'}}if(P.s("RH")==1){if(!L(P.s("8K"))){x=H}}if(P.s("Dk")==1){if(L(P.s("kS"))){!2q[P.s("kS")]?x=H:\'\'}}if(P.s("R8")==1&&o.1i.3E){!o.1A||o.kQ?x=H:\'\'}if(P.s("QB")==1){!o.O.6m()?x=H:\'\'}if(P.s("Qu")==1){!o.O.53()?x=H:\'\'}if(P.s("Qs")==1){!o.3J?x=H:\'\'}if(P.s("Q6")==1){!o.1O?x=H:\'\'}if(P.s("Eb")==1){o.1O?x=H:\'\'}if(P.s("NM")==1){!o.2H?x=H:\'\'}if(P.s("QF")==1){o.O.53()&&o.O.9y().K("?ow")==-1?x=H:\'\'}if(P.s("zj")==1){5U(o.1T)?x=H:\'\'}if(P.s("AW")==1){!o.6l?x=H:\'\'}if(P.s("QH")==1){o.6l?x=H:\'\'}if(P.s("QL")==1){o.k6?x=H:\'\'}if(P.s("QN")==1){!o.k6?x=H:\'\'}if(P.s("zd")==1){if(P.g("eW")){x=H}}if(P.s("QO")==1){!o.ab?x=H:\'\'}if(P.s("QQ")==1){o.ab?x=H:\'\'}if(P.s("QC")==1){if(v.4p==1&&v.jy==1){if(o.2f=="4t"&&!L(v.1T)&&v.od==0){if(!o.1A||o.O.6b()=="6m"){if(v.1T==\'\'){}F{x=H}}}}}}if(a=="3z"){B lu=P.s("2x");if(lu){if(lu=="2N:6n"||lu=="6n"){if(!o.6n&&!o.fK&&!o.QR){x=H}}if(lu=="2N:7o"){if(!o.7o||(!o.1A&&v.4p==0)){x=H}}if(lu=="2N:D6"){if(!o.k6){x=H}}if(lu.K("4W")>-1){if(!o.4W){x=H}}if(6e([lu],"5N")&&!6e([lu],"js:")&&P.s("d8")!=1){B sk=I;if(L(v.5N)){if(!o.9J){1z Al==\'E\'?o.9J=1C Al():\'\'}if(o.9J){sk=o.9J.Ak(P)}}!sk?x=H:\'\'}}}if(a=="X"||a=="56"||a=="9V"){if(X){if(X.9P()){x=H}}F{x=H}}if(a=="1e"){if(1e){if(1e.9P()){x=H;o.2f!=\'1v\'?P.1J("4E","1R"):\'\'}}F{x=H}}if(P.g("1G")=="1u"){if(P.g("S")==0){x=H}}if(P.g("1e#")){if(!P.g("1J#3H")){x=H}}if(P.s("3j")==1){B cb=1K.7h("QU"+v.id);if((o.O.1h()==0&&o.O.Z()==0)||!o.3S||!5U(cb)||!o.QX){x=H}}if(P.s("rr")==1){!x?P.1J("rr",1):\'\'}if(a=="1h"){if(o.O.53()&&P.s("QZ")!=1){x=H}}if(P.g("Y")=="sq"&&o.1i.1W){if(o.9a&&o.1i.bD){x=H}}J x}E lS(P,ne){if(P.g("1n")){if(o.8n||P.s("4E")=="1R"||ne){P.1J("2o",I)}F{Ai(P)}P.1J("1n",I)}};E Aj(P){if(!P.g("1n")){if(P.s("4E")=="1R"||o.8n){P.1J("2o",H);if(o.8n){P.1J("1I",1)}if(P.g("17")=="1y"){if(o.eL){n2(P)}}}F{Ah(P)}if(P.s("17")=="1y"){o.R.3q(o.2H?0:v.1y)}if(P.s("17")=="2A"){o.U.mU()}P.1J("1n",H)}};E Ai(P){np(P.g("Y"));B 4y="cD|";B 4m="0|";B 1k=1;B a=P.s("4E");if(P.s("Ag")==1){4y=\'\';4m=\'\'}B p=P.s("1p");B f4=P.g("2F");22(P.s("kg"))?p=P.s("kg"):\'\';dF(p,[\'3v\'])&&o.9g?p="":\'\';if(a=="1F"){4y+="1F|";4m+="0|"}if(a=="1p"){if(p.K("2Q")>-1&&p.K("R")==-1){4y+="x|";4m+=4F(o.2E+P.g("1g")/2*f4)+"|"}if(p.K("1b")>-1){4y+="x|";4m+=4F(-P.g("1g")/2)*f4+"|"}if(p.K("1c")>-1){4y+="y|";4m+=(-P.g("1d")/2)*f4+"|"}if(dF(p,["3v","R","7b"])){4y+="y|";if(P.g("17")=="2A"||P.g("17")=="1y"){4m+=4F(o.3L+P.s("h")+(P.s("h")<20?20-P.s("h"):0))+"|"}F{4m+=4F(o.3L+P.g("1d")/2)+"|"}}if(p=="as"){4y+="1F|";4m+="0|"}}B m=1C 9q({"mc":P,"me":P.g("Y"),"1G":4y.1B(0,4y.S-1),"to":4m.1B(0,4m.S-1),"1k":1k})};E Ah(P){np(P.g("Y"));B 4y="";B 4m="";B a=P.s("4E");B p=P.s("1p");22(P.s("kg"))?p=P.s("kg"):\'\';if(P.g("1I")!=1&&P.s("Ag")!=1){4y="cD|";4m=(P.g("Y")==\'bg\'?v.1m.a:"1")+"|"}if(a=="1F"){if(P.g("2F")!=P.s("1F")){4y+="1F|";4m+=P.s("1F")+"|"}}if(a=="1p"){if(p=="as"){if(P.g("2F")!=P.s("1F")){4y+="1F|";4m+=P.s("1F")+"|"}}F{if(p.K("R")>-1||p=="3v"){if(P.g("y")!=P.g("y0")){4y+="y|";4m+=P.g("y0")+"|"}}F{4y+="x|y|";4m+=P.g("x0")+"|"+P.g("y0")+"|"}}}if(4y!=""&&4m!=""){B m=1C 9q({mc:P,me:P.g("Y"),1G:4y.1B(0,4y.S-1),to:4m.1B(0,4m.S-1),1n:1})}F{P.1J("2o",H)}};G.fe=E(Y,1G,ne){B 3Z=I;B 2h=I;B P=b[Y];B 17=P.g("17");B 2x=P.s("2x");if(1G=="54"){if(o.eL){if(17=="1y"||17=="4j"||17=="7q"){if(!P.g("cp")){o.6Q=H;o.bq=H;3Z=H;3F();if(v.cN.Af==1){B bl=5p("17","2A");if(bl){3i(bl.c())}}}}}if(1e&&v.1e.fG==1&&((17=="1e"||2x.K("Ae")==0)||2x.K("1e:")==0)){2w(o.nj);if(!1e.g("1n")||kd!=P){kc(P,1G);o.cs=17+2x;1E(E(){o.cs=28},4l)}}if(X&&v.X.fG==1&&17=="X"){2w(o.ny);if(!X.g("1n")||kd!=P){kc(P,1G);o.cs=17;1E(E(){o.cs=28},4l)}}}if(1G=="7E"){if(o.eL){if(17=="1y"||17=="4j"||17=="7q"){o.6Q=I;o.bq=H;1E(E(){if(!o.6Q){o.bq=I;W(B x in b){if(b.2e(x)){if(!6k){if(b[x].g("17")=="1y"&&!b[x].g("cp")){lS(b[x]);2z()}}if(b[x].g("17")=="2A"){if(v.cN.Af==1){5l(b[x].c())}}}}}},4l)}}if(17=="2A"){o.U.59(1)}if(v.1e.fG==1&&((17=="1e"||2x.K("Ae")==0)||2x.K("1e:")==0)){2w(o.nj);o.nj=1E(E(){if(!o.3h){ae(1)}},(v.1e.ls>0?v.1e.ls*2b:2b))}if(X&&v.X.fG==1&&17=="X"){2w(o.ny);o.ny=1E(E(){if(!o.3h){X.g("1n")?X.1k(1):\'\'}},(v.X.ls>0?v.X.ls*2b:2b))}}if(3Z){1E(2z,10)}};G.l4=E(){if(o.5i&&!o.1O&&!o.8n){o.U.5i(I);o.5i=I}if(o.1T){if(v.lp>-1&&5U(o.1T)){Q(o.1T,{1I:v.l9})}}if(o.1r&&v.Ab==1&&v.R5!=0){o.U.2O()}if(v.1m.6o>0){2w(o.Ac);o.Ac=1E(3F,v.1m.6o*2b)}F{3F()}};G.Co=E(){if(o.1T){if(v.lp>-1&&5U(o.1T)){Q(o.1T,{1I:v.lp})}}if(!o.1r&&v.Ab==1){o.U.2i()}3F();bU(I)};G.cI=E(8W,8U){B y;W(B x in b){if(b.2e(x)){y=b[x].g("17");if(y=="2A"||y=="1y"){b[x].cI(8W,8U)}}}};G.iQ=E(){if(v.1m.1k==1){if(v.1m.b7==1&&!o.1O){J}if((!o.3J||o.1i.1W)&&o.O.6b()=="8Z"){o.3J=H;3F();o.1i.1W?1E(E(){o.3J=I},4l):\'\'}if(v.1m.eQ==1){et();dM()}bU(I)}};G.cS=E(8W,8U){W(B x in b){if(b.2e(x)){if(b[x].g("17")=="2A"||b[x].g("17")=="1y"){b[x].cS(8W,8U)}}}};G.fj=E(Z,1h,Aa){W(B x in b){if(b.2e(x)){if(b[x].g("17")=="2A"){b[x].59(Z,1h,Aa)}if(b[x].g("17")=="Z"){h8(b[x],Z,1h)}if(b[x].s("Az")==1){b[x].rp()}if(b[x].s("AB")==1){b[x].zn(Z,1h)}if(b[x].s("zO")==1){if(b[x].s("2x")=="Ao"||b[x].s("2x")=="7J"){1z A9==\'E\'?A9(b[x]):\'\'}if(b[x].s("zN")==1&&!b[x].g("1n")&&6k){}F{if(b[x].g("1n")==bT(b[x])){3F();2z()}}}}}};E bU(x){if(v.1m.1k==1){x?ae():\'\';if(o.9g){if(!o.1r&&v.1m.bV==1){x=H}if(x&&!o.nO){Q(o.1m,{"1c":bg.h()})}if(!x&&o.nO){Q(o.1m,{"1c":0})}o.nO=x}}}E fI(){6k=I;o.O.fI();if(o.nc){o.nc=I;2z();1E(2z,fL)}}E h8(x,Z,1h){if(v.3R>0){Z-=v.3R*1;1h-=v.3R*1}B y=3t(Z);if(x.s("AE")=="1"){y=3t(1h-Z)}if(x.s("Qe")=="1"){if(x.s("Q4")=="1"){y=y+(1h>0?\' \'+41(x.s("Qq"))+\' \'+3t(1h):\'\')}F{Z==0?y=3t(1h):\'\'}}x.4N(y)}G.nP=E(Z,1h){B x=5p("17","2A");if(x){x.CC(Z,1h)}};G.es=E(y){if(o.O.1h()>0){B x=5p("17","2A");if(x){x.es(y)}}};G.7r=E(){if(!6f){if(v.gZ==1){2w(lr);lr=1E(7r,4l)}F{7r()}}};E 7r(){if(!6f){js("Qr");6f=H;B x=5p("17","8P");if(x){x.zk();if(v.zY==1&&o.1r){2w(o.A2);o.A2=1E(A0,(v.A1>0?v.A1:1)*2b)}}o.lB?3F():\'\'}}E A0(){if(o.1r&&6f){o.U.5B()}}G.zZ=E(y){W(B x in b){if(x==y){b[x].1J("3i")}}};G.7U=E(){2w(lr);if(6f){js("6u");B x=5p("17","8P");if(x){x.fC();if(v.zY==1&&o.1r){o.U.bR()}}6f=I;o.lB?3F():\'\'}};G.ex=E(){B x=5p("2x","1y g7");if(x){x.1J("5l");x.4N(41(\'1y\')+\' \'+(o.2H?0:2u.lq(v.1y*1w))+\'%\');2w(o.ex);o.ex=1E(zX,2b)}};E zX(){B x=5p("2x","1y g7");if(x){x.4N(\'\');x.1J("3i");2w(o.ex)}}G.3p=E(Z,1h){if(v.3R>0){Z-=v.3R*1;1h-=v.3R*1}W(B x in b){if(b.2e(x)){if(b[x].s("on")==1){if(b[x].g("17")=="2A"){1h>0?b[x].1J("2a",Z/1h):\'\';b[x].CD()}if(b[x].g("17")=="Z"){h8(b[x],Z,1h)}if(b[x].g("17")=="4a"){b[x].1J("jI",0.5);b[x].1J("aY",0)}}}}};G.3k=E(Z,1h){W(B x in b){if(b.2e(x)){if(b[x].g("17")=="1h"){if(v.3R>0){1h-=v.3R*1}b[x].4N(3t(1h))}if(b[x].g("17")=="2A"){b[x].59(Z,1h);b[x].CS(1h)}if(b[x].g("17")=="Z"){h8(b[x],Z,1h)}}}};G.6E=E(){if(!o.3K){1e.g("1n")?1e.1k():1e.1n()}};G.al=E(){if(1e){if(o.3K){J o.3K.5U()||1e.g("1n")}F{J 1e.g("1n")?H:I}}F{J I}};G.hz=E(x){if(1e){1e.ey(x)}};G.ae=E(){ae()};G.Qv=E(x){if(1e){1e.Qw(x)}};G.yP=E(){if(1e){1e.R7()}};G.yO=E(x){if(1e){J 1e.RJ(x)}};E ae(x){if(1e){1e.g("1n")?1e.1k(x):\'\'}o.3K?o.3K.1k():\'\'};G.9v=E(){if(X){if(X.g("1n")){X.1k(1)}F{X.1n()}}};G.e5=E(x){if(X){if(X.g("1n")&&x!=1){x!=2?X.1k():\'\'}F{1E(E(){X.1n()},1w)}}};G.e0=E(){if(X){J X.g("1n")?H:I}F{J I}};G.RK=E(x){if(X){X.g("1n")?X.1k(x):\'\'}};G.an=E(x){J X?X.g(x):\'\'};G.aT=E(x){if(X){X.zT(x)}};G.zS=E(x){if(X){X.RS(x)}};G.9e=E(){if(X){X.9e()}};G.lZ=E(){if(X){X.lZ()}};G.hF=E(){hF()};E hF(){W(B x in b){if(b.2e(x)){if(b[x].g("17")=="56"){Q(b[x].c(),{"1I":(!X.aV()?0.5:1)})}if(b[x].g("17")=="9V"){Q(b[x].c(),{"1I":(!X.hH()?0.5:1)})}}}}G.aV=E(){if(X){J X.aV()}F{J I}};G.hH=E(){if(X){J X.hH()}F{J I}};G.eV=E(){if(X){J X.eV()}F{J I}};G.nQ=E(){if(X){X.nQ()}};G.df=E(){if(X){X.df()}};G.zR=E(x){if(x&&X){X.RU(x)}};G.Am=E(x){if(x&&X){X.RW(x)}};G.A6=E(x){if(x&&X){Q(X.co(),{"RX":"1R","3U-2Q":X.s("7Q")});1K.7h(x).1V(X.co());3i(X.c())}};G.Sd=E(){};G.An=E(x){if(1e){1e.6J();1e.g("1n")?1E(E(){1e.1k()},5c):\'\'}};G.f1=E(){if(1e){1e.6J()}if(o.3K){o.3K.aJ()}};G.i1=E(x){if(1e){1e.i6()}2z();3F()};G.fx=E(x){if(1e){1e.i9(x);1e.g("1n")?1e.1k():\'\'}if(o.3K){o.3K.aJ()}x=="6i"?nw():\'\'};E nw(){if(o.eF){B x=3l(o.eD/o.4R.4v(-1)[0],1).pM(2);W(B i in b){if(b.2e(i)){if(b[i].s("5Q")=="6i"&&o.eD){b[i].59(x,1)}if(b[i].s("2x")=="2N:6i,1.0"){b[i].rD(x)}}}}}G.hh=E(x){if(1e){1e.i9("9m")}if(o.3K){o.3K.aJ()}};G.Sc=E(){if(1e){1e.hb();1e.g("1n")?1E(E(){1e.1k()},5c):\'\'}if(o.3K){o.3K.aJ()}if(o.4i&&o.3S){o.3j.8E()}};G.AF=E(){o.3K?o.3K.1k():\'\';if(1e){1e.AF()}};G.Sa=E(hx,2o,9b){W(B x in b){if(b.2e(x)){if(b[x].g("17")=="1e"){if(b[x].s("dr")==1){b[x].zi()}}if(b[x].g("zL")=="1e#"+hx){b[x].1J("1J#3H",2o);if(b[x].g("1G")=="1u"){if(9b){b[x].4N(nm(9b))}}F{if(v.1e[\'1e\'+hx+\'17\']=="42"){if(9b==41("bs")){b[x].9Z(0)}F{b[x].9Z(1)}}2z()}9p(b[x])}}}};G.AT=E(){if(1e){1e.6J();1e.i9("9m");1e.i9("7S")}};G.k7=E(){B x=5p("17","2A");if(x){x.k7()}};G.3Z=E(){2z();if(6k){o.nc=H}};G.rG=E(x){if(!6k||x==1){2z();3F()}F{v.1m.nb=H}};G.mX=E(){B b=5p("1G","Q");if(b){b.zh()}};G.5m=E(){3F();2z();3F();if(o.9a){3i(5J)}F{!6k?5l(5J):\'\'}};G.zG=E(1q){if(1t.aN==v.id&&v.1D.on==1){B x=1q.AP;B y=I;if(x==1H){x=1q.AO}if(L(o.1N)||L(o.6d)||o.mq==1){J I}if(o.1r&&v.1D.f5==1){y=H}if(((v.1D.bw==1&&x==32)||(v.1D.RZ==1&&x==13)||(v.1D.k==1&&x==75))&&(o.4A||o.3J||y)){if(v.1D.2m==1){5E(\'1r\',o.1r?0:1)}o.U.dh();1q.9D();J I}!v.1D.j6?v.1D.j6=0.2:\'\';!v.1D.1F?v.1D.1F=5:\'\';if(v.1D.AR==1&&(o.4A||y)){if(o.O.1h()>0){W(B i=48;i<58;i++){if(x==i){o.U.3p((o.O.1h()*(x-48)*10)/1w,H)}}}}if((x==39||(v.1D.l==1&&x==76))&&(o.4A||y)){jh(v.1D.n5)}if((x==37||(v.1D.j==1&&x==74))&&(o.4A||y)){jN(v.1D.n5)}if(x==38&&(o.4A||y)){jh(v.1D.n8)}if(x==40&&(o.4A||y)){jN(v.1D.n8)}if(x==Rb&&(o.4A||y)){jh(v.1D.AQ)}if(x==Rc&&(o.4A||y)){jN(v.1D.AQ)}}};E 5p(y,z){W(B x in b){if(b.2e(x)){if(b[x].s(y)==z){J b[x]}}}}E jh(x){if(x=="56"){if(o.X){o.R.9e()}F{x="3r"}}if(x=="3r"){if(o.O.1h()>0){B sk=o.O.Z()+3l(v.1D.3r);if(sk<o.O.1h()){o.U.3p(sk,H);js("j8",sk)}}}if(x=="1y"){o.U.3q(3l(v.1y)+3l(v.1D.j6));1q.9D()}if(x=="1F"){o.O.1F(v.1D.1F/1w);1q.9D()}if(v.1D.2m==1){5E(x,1)}}E jN(x){if(x=="56"){if(o.X){o.R.df()}F{x="3r"}}if(x=="3r"){if(o.O.1h()>0&&o.1A){B sk=o.O.Z()-v.1D.3r>=0?o.O.Z()-v.1D.3r:0;o.U.3p(sk,H);js("j8",sk)}}if(x=="1y"){o.U.3q(3l(v.1y)-3l(v.1D.j6));1q.9D()}if(x=="1F"){o.O.1F(-v.1D.1F/1w);1q.9D()}if(v.1D.2m==1){5E(x,0)}};G.zu=E(1q){if(1t.aN==v.id){B x=1q.AP;if(x==1H){x=1q.AO}if(x==57){if(v.1l==1){}}if(o.1O&&x==27){o.U.6z()}if(L(o.1N)||L(o.6d)){J I}if(v.1D.on==1){if(v.1D.f==1&&x==70&&v.gZ!=1&&(o.4A||o.3J)){if(v.1D.2m==1){5E(\'1O\',o.1O?0:1)}o.1O?o.U.6z():o.U.7y()}if(v.1D.s==1&&x==83&&(o.4A||o.3J)){if(o.3I){if(v.1D.2m==1){5E(\'42\',o.9A?0:1)}3a("AN")}}if(v.1D.m==1&&x==77&&(o.4A||o.3J)){if(v.1D.2m==1){5E(\'4j\',o.2H?1:0)}o.2H?o.U.5j():o.U.4C()}}}};G.4s=E(){4z(o.fB);W(B x in o){if(x.K("1a")==0&&x.K("Ek")>-1){4z(o[x])}}W(B i=0;i<dp.S;i++){B Y=dp[i];if(b[Y]){b[Y].4s()}}if(1e){1e.4s()}if(X){X.4s()}bg.4s();91?91.4s():\'\';if(5J.3T==o.1M){o.1M.3C(5J)}F{o.1m?o.1m.3C(5J):\'\'}};G.et=E(){et()};G.dq=E(){dq();3F()};G.dM=E(){dM()};G.rE=E(){J 6k}};B AM=E(Y){B i;B C=[];B w;B h;B ri=0;B bg;B iX;B 6Z;B ly=0;B 3H=H;B yI=I;B 2F=1;B 2K=1;B 23;B eU;B 2l;B 6H;B 17;B 7W=\'\';B x0;B y0;B on;B 54=I;B af=I;B eS=0;B Rn;B Rp=0;B d6=0;B zb=0;B dD=0;B jo=I;B zE=I;B eW=I;B 3g=I;B fD;B dr;B jt;B rL=I;C=7T(C,dU.P);C=7T(C,v[Y]);B U=[C.17];17=U[0];L(C.AL)?U[1]=C.AL:\'\';L(C.AK)?U[1]=C.AK:\'\';L(C.29)?C.1u=C.29:\'\';if(22(C.AJ)){o.bo?C.1F=C.AJ:\'\'}if(17=="3y"){o.gf=H}if(L(C.2x)){if(C.1G=="1u"&&C.2x!=\'\'){if(L(v[C.2x+\'1u\'])){C.1u=v[C.2x+\'1u\']}}if(C.2x.K("1e#")==0){7W=C.2x;if(C.2l==\'\'&&7W.K(",")==-1){C.2l=41(v.1e[\'1e\'+7W.1B(9)+\'17\'])}}if(C.2x.K("4W")>-1){v.AI=H}if(C.2x.K("3y:")>-1){o.gf=H}if(C.2x=="Rx"){C.Rz=1C RA(C)}}B 5v=C.2l?C.2l.2g("///"):[];if(C.Ap==1){C.1G="1u";C.1u=fp(0)+(U.S>1?\'///\'+fp(1):\'\');if(22(C.8H)){C.1S=C.8H}}C.it=[];C.il=[];B rS=0;B 2m=1C bj();B 1f=1C bj();B bf=1C bj();B RE=1C bj();B fF=0;B 8M;if(C.1G=="1u"){if(C.3N){if(L(v[C.3N+\'1u\'])){C.1u=v[C.3N+\'1u\']}}if(L(C.1u)){2m[0]=4c(C.1u);C.jg=C.1u.S;B m6=[\'/\',\'|\',\'-\'];m6.K(C.1u.1B(-1))>-1?C.sG=C.1u.1B(-1):\'\';m6.K(C.1u.1B(0,1))>-1?C.rT=C.1u.1B(0,1):\'\';if(17=="Z"||17=="1h"){if(C.1u.K(\'0:\')==0){C.jd=H}if(C.1u.2g(":").S==3){C.zB=H}F{if(C.1u.K(\'f9:f9\')>-1){C.zA=H}}if(C.jq==1){v.jq=1}}if(C.AE==1&&C.1u.K("-")==0){C.zx=H}if(C.1u.K("///")>0&&(17=="3z"||C.Ap==1)){C.dH=C.1u.2g("///");C.1u=2m[0]=C.dH[0]}}if(v.lY==1){1E(7d,1w);1E(7d,4l);1E(7d,2b)}}F{if(L(C.1f)){2m[0]=C.1f;if(2m[0].K("///")>0&&2m[0].K("cA")==-1){2m=C.1f.2g("///")}if(L(C.im)){2m[1]=C.im}if(C.zs==1){if(22(C.AD)){2m.2U(C.AD);fF=2m.S-1}}}}if(17=="3z"){if(C.Q1==1&&L(C.e1)){C.rU=C.2x}}B 1a=1Z("2p");B sp=C.1p;if(sp.K(\'7b\')>-1){o.7b?o.7b.1V(1a):1E(E(){o.7b.1V(1a)},1w);o.AC=H}F{if(o.9g&&((dF(sp,["3v"])&&C.Oo!=1)||(dF(sp,["1a"])))){o.1m.1V(1a)}F{o.1M.1V(1a)}if(17=="8P"&&C.Os==1){1a.C.4k=k2}}if(C.AB==1){C.fg=1C Ou(C,1a)}B iX=1Z("2p");1a.1V(iX);B bc=1Z("2p");Q(bc,{"1p":"2n","1b":0,"1c":0});1a.1V(bc);Q(1a,{"1p":"2n","1b":0,"1c":0,"1I":1,"b9":"hc","kT":"gC"});if(22(C.3N)){3P(1a,{"id":(v.id+"3V"+"AA"+C.3N)})}if(C.Az==1||C.yH==1){Q(bc,{"5b":"2t 0.2s 3A"})}if(2m.S>0){W(i=0;i<2m.S;i++){1f[i]=1Z("2p");Q(1f[i],{"1p":"2n","1c":0,"1b":0,"bX":"1R","1I":C.a,"5b":"1I 0.1s 3A"});if(C.dE>C.1F){Q(1f[i],{"5b":"1I 0.1s 3A,2t 0.1s 3A"})}if(C.1G=="dA"&&C.2Y!=\'\'){if(22(C.3N)){3P(1f[i],{"id":(v.id+"3V"+"1a"+"3V"+C.3N+"3V"+"1f")});if(v[C.3N+\'2Y\']){C.2Y=v[C.3N+\'2Y\']}}if(dF(C.2Y,[".qJ",".eO",".Ow","cA",".dB"])){C.2Y.K("//")==-1&&C.2Y.K("cA")==-1?C.2Y=\'//\'+C.2Y:\'\';B z=1Z("4d");C.jM=1;z.1Y("bz",rM);z.2Y=C.2Y;1f[i].1V(z);C.w=1f[i].1U;C.h=1f[i].2D;if(C.Ay>0){Q(z,{1d:C.Ay})}}}if(C.1G=="1u"){Q(1f[i],{"1S":(C.1S),"b9":C.ir*2r(v.bO,1),"q3":g2(C.4I),"jG-fX":C.iE+\'px\',"3U":"0 aP 0 aP","h4-bw":"ik"});if(o.bo){if(22(C.Ax)){Q(1f[i],{"b9":C.Ax*2r(v.bO,1),})}}if(C.2a==1){if(C.1u.K("<a ")>-1||Y=="aq"){Q(1f[i],{"bX":"2X"})}}if(C.Aw==1){Q(1f[i],{"4I-j0":"Aw"})}if(C.iZ>0){Q(1f[i],{"4I-j0":C.iZ})}if(C.Av){Q(1f[i],{"kT":C.Av+"em"})}2m[i]==\'4a\'?2m[i]=41("4a"):\'\';1f[i].2B=sz(2m[i]);1E(rZ,1w);C.w=1f[i].1U;C.h=1f[i].2D;if(22(C.3N)){3P(1f[i],{"id":(v.id+"hK"+C.3N+"Oz")})}}if(C.1G=="Q"){o.1A?1E(sy,5c):\'\'}B 7n=2m[i].4T();if(7n.K(\'B:\')==0){7n=2r(1t[7n.1B(4)],\'\')}B iU=7n.K(\'<2I\')>-1||7n.K(\'<OB\')>-1;if(C.1G=="2I"&&(7n.K(\'<g>\')>-1||iU)){if(17=="4j"||17=="3z"){7n=7n.1P(/he/g,\'he\'+v.id+Y)}if(7n.K(\'4V\')>-1){9W(1f[i])}1f[i].2B=(!iU?"<2I 1g=\'20\' 1d=\'20\' 5H:5w=\'4O://5x.w3.5o/bC/5w\' 5H=\'4O://5x.w3.5o/5q/2I\'>":\'\')+7n+(!iU?"</2I>":\'\');1f[i].1U>20?C.w=1f[i].1U:\'\';1f[i].2D>20?C.h=1f[i].2D:\'\';Q(1f[i],{"1g":C.w,"1d":C.h});if(C.8H!=-1){hV(1f,C.8H)}if(22(C.3N)){3P(1f[i],{"id":(v.id+"hK"+C.3N+"Om"+i)})}}bc.1V(1f[i]);i>0?1k(1f[i]):\'\'}8G();jt?rM():\'\';if(C.2x=="3j"){C.3j=1;C.1k=1;o.3j?1f[0].2B=o.3j.jj(C.8H!=-1?C.8H:\'#3u\'):\'\';if(o.1i.1W){1f[0].Au=rk;1f[0].OE=7X;1f[0].mh=rq}F{1f[0].gK=9d;1f[0].h1=7X;1f[0].gW=aA}}F{if((bg.1U*C.1F<35||bg.2D*C.1F<35)&&C.1G!=\'1u\'){rO();9W(6Z)}F{9W(bg)}}if(17=="3z"){B lu=\'\';if(C.d5==1&&L(C.2x)){lu=C.2x;if(lu.K("2N:")==0){if(lu==\'2N:1r\'&&C.e1==\'2N:2Z\'){C.pp=1}B 1L=lu.1B(4).2g(",");if(1L.S==2){B mk=1L[1].2g("/");if(mk.S==2){1L[0]==\'hd\'?1L[0]="4D":\'\';if(v[1L[0]]==mk[1]){C.a=1;Q(1f[0],{"1I":C.a})}}}}if(lu=="As"||lu=="6g"){o.U.dw();1a.C.4k=k2;o.mq=1}}if((C.1k==1&&(C.D7==1||C.Ar==1||C.Aq==1))||lu.K("5N")==0||lu=="Ao"||lu=="7J"){C.zO=1;if(6e([C.1p],"1a")||C.zf==1){C.zN=1}}if(lu.K("5N")==0){1a.C.4k=k2}}W(B sf in C){sF(sf)}if(17=="1e"&&C.dr==1){dr=1C zc(1a,bg,C)}if(C.2a==0){ro(1a)}if(C.jM==1){1k(bg)}if(C.23==1){ky()}if(C.1p.K("2Q")>-1){d6=1}if(C.1p.K("1c")>-1){zb=1}if(C.1p.K("3v")>-1){dD=1;17=="3z"&&22(C.2x)?1a.C.4k=k2:\'\'}if(C.1p.K("1a")>-1){dD=1}2z();B t=\'\';if(C.8V!=0){t+="lo("+C.8V+"p8)"}if(C.Ok==1){t+=" 2F(-1)"}if(C.NQ==1){t+=" 2K(-1)"}if(t!=\'\'){Q(bc,{"2t":t})}if(17=="8P"){fC()}B 1L=[];B i;if(17=="X"){1L=[\'dX\',\'z8\',\'iK\',\'z7\',\'z6\',\'lF\'];W(i=0;i<1L.S;i++){if(L(C[1L[i]])&&!L(v.X[1L[i]])){v.X[1L[i]]=C[1L[i]]}}}if(17=="29"){1L=[\'sD\',\'z3\',\'z2\'];W(i=0;i<1L.S;i++){if(L(C[1L[i]])&&!L(2q[1L[i]])){v[1L[i]]=C[1L[i]]}}}C.jw==1?6Y():\'\';if(17=="3z"&&C.on==0){3i(1a)}if(C.1k==1&&C.iP>0){1E(yZ,C.iP*2b)}}E yZ(){C.iP=-1;o.R.5m()}E rO(){if(6Z){6Z.3T.3C(6Z)}6Z=1Z("2p");Q(6Z,{"1p":"2n","1c":0,"1b":0,"1g":C.1G=="dA"?bg.1U:(bg.1U>35?bg.1U:35)*C.yY,"1d":C.1G=="dA"?bg.2D:(bg.2D>35?bg.2D:35)*C.pj});C=4h(C,\'ep\',\'ep\');1a.1V(6Z)}E 9W(x){if(17.K("Z")==0&&U.S==1){C.2a=0}if(17=="3z"&&C.d5==0){C.2a=0}if(C.2a==1){if(C.fM==1){Q(x,{"9c":"4V"})}Q(x,{"bX":"2X"});if(o.1i.1W){x.1Y("af",E(e){rq(e)},{5y:I});x.1Y("kW",E(e){rk(e)},{5y:I});x.1Y("kR",E(e){yG(e)},{5y:I})}x.cX=cE;if(v.1m.eq==1||C.eq==1){Q(x,{"2y-1S":"#p3","1I":0.5})}}F{Q(x,{"9c":"6a"})}if(!o.1i.1W){x.gK=9d;x.h1=7X}if(C.3g==1||C.23==1){x.gW=aA}}E rq(e){js("O0"+Y);e.aa();af=H}E rk(e){C.yU==1?9d():\'\';e.aa()}E yG(e){e.aa();e.9D();C.yU==1?7X():\'\';if(!af){cE(e)}af=I}E 8G(){if(bg){bg.3T.3C(bg)}bg=1Z("2p");Q(bg,{"1p":"2n","1c":0,"1b":0});if(22(C.3N)){3P(bg,{"id":(v.id+"hK"+C.3N+"O2")})}w=C.w;h=C.h;C.dz=-1;C.8X=-1;C=4h(C,\'33\',\'33\');C=4h(C,\'aX\',\'aX\');if(C.dT&&o.bo){if(C.dT!=\'0 0 0 0\'){C=4h(C,\'aX\',\'dT\')}}if(C.1G=="1u"){w=1f[rS].1U;h=1f[rS].2D;if(C.rH>0){w<C.rH?w=C.rH:\'\'}}C=4h(C,\'ei\',\'ei\');C=4h(C,\'yT\',\'yT\');if(22(C.3N)&&L(v.3z)&&C.17=="3z"){if(1z(v.3z)==\'2W\'){W(B i=0;i<dx.9E(v.3z).S;i++){if(v.3z[i][C.3N]){if(v.3z[i][C.3N]=="bs"){C.on=0}F{B 1L=v.3z[i][C.3N].2g(":");if(1L[0]=="33-1b"){if(1L[1].K("%")>0){C.eB=2P(1L[1])}F{C.4f=2P(1L[1])}}}}}}}C.h=h;C.w=w;if(C.bg==1){h=h+C.b3+C.c9;w=w+C.7B+C.7Q;C.h=h;C.w=w;if(C.1G=="1u"){C.fr=1f[0].2D}}F{C.7A=0}Q(bg,{"1g":(C.yS==1?yR:w),"1d":h,"pb":(C.lD*h)/2,"5b":"2y .1s 3A, 1I .2s, 2t .1s 3A"+(22(C.ia)?\', 6W .1s 3A\':\'\')});ip(C.5d,C.7A);if(C.1G=="dA"){Q(bg,{"1g":w,"1d":h,"pb":(C.lD*h/C.1F)/2,})}if(C.Cy==1){pE(bg,C.5d,C.Cj,C.Cz)}if(C.pk==1){Q(bg,{"3n":2r(C.C8,1)+"px 9I "+C.pK})}if(C.9O==1){Q(bg,{\'jV-6W\':\'9O(ci)\'})}iX.1V(bg);if(C.5J==1){Q(1f[0],{\'2y\':5O(2r(C.NN,\'3x\'),2r(C.O6,0.5),1f[0]),\'3n-8g\':2r(C.O8,0),\'3U\':yN(2r(C.Oa,0))})}}E ip(x,y){!22(x)?x=C.5d:\'\';!22(y)?y=C.7A:\'\';Q(bg,{"2y":(C.Ob==1?"3A-5h("+(C.Oc==1?"to 2Q,":\'\')+5O(x,y)+","+5O(C.Od,y)+")":5O(x,y,bg))})}E 2z(){B dz=(-bg.2D/2);B 8X=(-bg.1U/2);if(dz!=C.dz||8X!=C.8X){Q(bg,{"1c":(-bg.2D/2),"1b":(-bg.1U/2)});C.dz=dz;C.8X=8X}if(6Z){B x=C.1G=="dA"?bg.1U:(bg.1U>35?bg.1U:35);B y=C.1G=="dA"?bg.2D:(bg.2D>35?bg.2D:35);Q(6Z,{"1c":(-y/2)+C.C5-C.C4,"1b":(-x/2)+C.Oe-C.Of})}W(B i=0;i<2m.S;i++){B it=C.1G=="2I"?2u.5r(2P(1f[i].C.1d))/2:2u.5r(1f[i].2D)/2;B il=C.1G=="2I"?2P(1f[i].C.1g)/2:1f[i].1U/2;if(it!=C.it[i]||il!=C.il[i]){Q(1f[i],{"1c":-it,"1b":-il});if(bg){Q(1f[i],{"1c":(4F(1f[i].C.1c)+C.b3/2-C.c9/2+C.Og/2+C.Oh/2),"1b":(4F(1f[i].C.1b)+C.7B/2-C.7Q/2+C.Oi/2+C.OV/2)})}C.it[i]=it;C.il[i]=il}}}E 9d(){B i;54=H;if(C.bf==1){if(on&&L(C.im)){i=1}F{i=0}if(8M&&bf.S>2){i=2}if(bf[i]){hm();1n(1f[bf[i]])}}if(C.bg==1){if(22(C.8R)||22(C.8Q)){ip(C.8R,C.8Q)}if(22(C.ia)){Q(bg,{"6W":"iq("+C.ia+")"})}}if(C.8e>-1&&!yI){W(i=0;i<2m.S;i++){if(1f[i].C.5n!="3g"){Q(1f[i],{"1I":C.8e})}}}if(C.iu!=-1){hV(1f,C.iu)}if(C.yH==1){eS+=45;fR(1f[0],eS)}if(C.dE>C.1F&&C.dE>-1){1F(C.dE)}if(17=="1e"&&o.R.al()){}F{if(C.23==1&&C.jw!=1){B x=5v.S>1&&!on?5v[1]:5v[0];if(x){if(x.K(\'B:\')==0){2l.2B=1t[x.1B(4)];6Y()}}1n(23);Q(23,{"1I":1})}}if(17=="4j"){o.U.5i(H);o.5i=H}o.ay=H;o.R.fe(Y,"54")}E 7X(){54=I;B i;if(C.bf==1){if(on&&L(C.im)){i=1}F{i=0}if(8M&&bf.S>2){i=2}hm();1n(1f[i])}if(C.bg==1){if(22(C.8R)||22(C.8Q)){ip(C.5d,C.7A)}if(22(C.ia)){Q(bg,{"6W":"iq(1)"})}}if(C.8e>-1){W(i=0;i<2m.S;i++){if(1f[i].C.5n!="3g"){Q(1f[i],{"1I":C.a})}}}if(C.dE>-1){1F(C.1F)}if(C.iu!=-1){hV(1f,(C.8H==-1?\'#3u\':C.8H))}if(17=="4j"&&!o.1O){o.U.5i(I);o.5i=I}s5();o.ay=I;o.R?o.R.fe(Y,"7E"):\'\'}E s5(){if(C.23==1&&C.jw!=1){1k(23);Q(23,{"1I":0})}}E cE(e){e?e.6V=H:\'\';if(!jo){o.R.cC(Y);if(17=="3z"){fa()}s5();if(C.Px==1){eS-=30;fR(1f[0],eS)}eW=H;if(C.zd==1||(Y=="sq"&&C.1k==1&&C.sl==1)){o.R.5m()}}};G.yW=E(){cE()};E fa(){if(2m){if(2m.S>1){if(on==H){1n(1f[0]);1k(1f[1])}F{1n(1f[1]);1k(1f[0])}}if(C.23==1&&5v.S>1){2l.2B=o.ni+(on==H?5v[0]:5v[1])+o.fb;6Y()}}if(L(C.rU)){if(on==H){C.2x=C.rU}F{C.2x=C.e1}}dZ();on=!on;if(C.2x){if(C.2x.K(",0/1")>-1){js(C.2x,on?1:0)}}if(C.bg==1&&L(C.rw)){if(C.rw!=-1){if(on){C.ze=C.5d;C.5d=C.rw}F{C.5d=C.ze}8G();9W(bg);2z();if(C.1G=="1u"){7d()}F{1F(C.1F)}}}}E dZ(){if(L(C.dH)){if(C.dH.S>1){if(on==H){4N(C.dH[0])}F{4N(C.dH[1])}}}}E rg(1q){1q.6V=H;o.R.cC(Y)}E hm(){W(B i=0;i<2m.S;i++){if(1f[i].C.5n!="3g"){Q(1f[i],{"1I":C.a});1k(1f[i])}}}E rZ(1u){if(1f[0]){if(1f[0].1U>o.2E-C.4f-C.4n-C.7B-C.7Q){if(C.rK==1){if(!1u){1u=1f[0].2B}1f[0].2B=\'<rK>\'+1u+\'</rK>\'}F{Q(1f[0],{"h4-bw":"hE"})}Q(1f[0],{"1g":o.2E-C.4f-C.4n-C.7B-C.7Q})}}}E rM(){if(bg){jt=I;C.jM=0;1k(bg);if(1f[0]){C.w=1f[0].1U*C.1F;C.h=1f[0].2D*C.1F;1F(C.1F)}C.8I=0;8G();rO();9W(6Z);1n(bg);2z();o.R.3Z();if(!5U(1a)){3i(1a)}}F{jt=H}}E CY(1q){1q.6V=H}E aA(){if(!o.1i.1W&&!o.ay){9d()}6Y()}E 1F(x){if(x>0){Q(bg,{"2t":"1F("+x+")"});W(i=0;i<2m.S;i++){Q(1f[i],{"2t":"1F("+x+")"})}if(C.fg){C.fg.1F(x)}2F=x;2K=x}}E ky(){23=1Z("2p");Q(23,{\'1p\':\'2n\',\'1b\':0,\'1c\':0,\'1d\':\'2X\',"1I":0,"5b":"1I 0.1s 3A"});eU=1Z("2p");C=4h(C,\'eu\',\'eu\');C=4h(C,\'zy\',\'zy\');Q(eU,{\'1p\':\'2n\',\'1b\':0,\'1c\':0,\'1g\':\'1w%\',\'1d\':30,\'2y-1S\':C.gM,\'1I\':C.h3,\'3n-8g\':C.oK});2l=1Z("2p");Q(2l,{\'1p\':\'2n\',\'1b\':C.oR,\'1c\':C.kA,\'1S\':C.oG,\'4I-kB\':g2(C.oN),\'4I-3Y\':C.oM*2r(v.bO,1),"jG-fX":C.oL+\'px\',"2A-1d":"1"});if(C.2l){if(C.2l.K("B:")==0){C.zM=H}}if(!C.zM){Q(2l,{\'h4-bw\':\'ik\'})}if(C.c7==1){6H=1Z("2p");6H.2B=\'<2I 1g="ci" 1d="oJ" Bi="0 0 8 6" 6S="1.1" 5H="4O://5x.w3.5o/5q/2I" 5H:5w="4O://5x.w3.5o/bC/5w"><cl id="Bh" Bg="1R" 5F="#\'+C.gM.1P("#","")+\'" 5F-Bf="Be" bF="0 0 8 0 4 6"></cl></2I>\'}if(C.jw==1){Q(23,{"1I":1});9W(23)}F{ro(23)}1a.1V(23);2l.2B=o.ni+(C.2l==\'\'?41(17):5v[0])+o.fb;23.1V(eU);23.1V(2l);if(C.c7==1){23.1V(6H);B sh=o.rj?\'-ci\':\'-oJ\';B ps=C.PB;if(!L(ps)){ps=\'\'}B tp=ps.K("1c")>-1;if(tp){fR(6H,\'-PC\')}Q(6H,{\'1p\':\'2n\',\'2Q\':(ps.K("2Q")>-1?10*C.1F:\'2X\'),\'1b\':(ps.K("1b")>-1?10*C.1F:(ps==\'\'||ps==\'1c\'?\'50%\':\'2X\')),\'33-1b\':(ps==\'\'||ps==\'1c\'?\'-Ba\':0),\'3v\':(tp?\'2X\':sh),\'1c\':(tp?sh:\'2X\'),\'1I\':C.h3})}6Y()}E 6Y(){if(C.23==1){Q(23,{"1c":(dD==1?-h-23.2D+3:-23.2D/2)+C.PJ-C.PK,"1b":(d6==1?-2l.1U:(dD==1?-w/2:+2l.1U))-(dD==1?0:2l.1U/2+5)+C.Pw-C.PL,"1d":C.kA+2l.2D+C.oO,"1g":C.oR+2l.1U+C.Bk});Q(eU,{\'1d\':23.2D});23.C.4k="2b"}}G.c=E(){J 1a};G.s=E(x){if(17=="3z"){sF(x)}J C[x]};G.ss=E(x,x2){J L(C[x])?C[x][x2]:I};G.g=E(x){aI(x){1o"1g":J w;1j;1o"1d":J h;1j;1o"h":J 2r(C.fr,h);1j;1o"x":J 4F(1a.C.1b);1j;1o"y":J 4F(1a.C.1c);1j;1o"1I":J 1a.C.1I?1a.C.1I:1;1j;1o"1n":J 3H;1j;1o"2F":J 2F;1j;1o"2K":J 2K;1j;1o"17":J 17;1j;1o"zL":J 7W;1j;1o"eW":J eW;1j;1o"1G":J C.1G;1j;1o"S":J C.jg?C.jg:0;1j;1o"Y":J Y;1j;1o"x0":J x0;1j;1o"y0":J y0;1j;1o"54":J 54;1j;1o"1e#":J 7W.K("1e#")==0;1j;1o"1e:":J 7W.K("1e:")==0;1j;1o"su":J 17=="3z"&&C.1G=="1u";1j;1o"1J#3H":J rL;1j;6a:J I}};G.1J=E(k,x){aI(k){1o"1n":54?7X():\'\';3H=x;1j;1o"2o":zI(x);1j;1o"5l":5l(1a);1j;1o"3i":3i(1a);1j;1o"zK":C.3g=0;1j;1o"rr":if(C.zJ>0&&C.3g!=1&&!fD){2w(fD);fD=1E(E(){3i(1a);(C.PN!=1?C.3g=1:\'\');fD=1H},C.zJ*2b)}1j;1o"1F":1F(x);1j;1o"PO":Q(1a,{"2t":"1F(0)"});1j;1o"2F":Q(1a,{"2t":"2F("+x+")"});2F=x;1j;1o"2K":Q(1a,{"2t":"2K("+x+")"});2K=x;1j;1o"1I":Q(1a,{"1I":x});1j;1o"jI":Q(1f[0],{"1I":x});1j;1o"aY":Q(1f[0],{"6W":"aY("+x+")"});1j;1o"1b":Q(1a,{"1b":x});1j;1o"1c":Q(1a,{"1c":x});1j;1o"1g":Q(1a,{"1g":x});1j;1o"1d":Q(1a,{"1d":x});1j;1o"op":C.op=x;1j;1o"d6":d6=x;1j;1o"1J#3H":rL=x;1j;1o"x":Q(1a,{"1b":x});1j;1o"y":Q(1a,{"1c":x});1j;1o"4E":C.4E=x;1j;1o"5N":C.5N=x;1j;1o"x0":x0=x;1j;1o"y0":y0=x;1j;1o"d8":C.d8=x;1j;6a:J I}};E zI(x){if(x&&o.1i.1W){jo=H;1E(zH,fL)}if(!x){if(hr()&&8M){1k(1f[fF]);1n(1f[0]);8M=I}}if(C.jM==1){x?1n(1a):1k(1a)}F{if(Y=="PQ"||Y=="PR"){x?1n(1a):1k(1a)}F{Q(1a,{"2o":(x?"6g":"1R")})}3H=x;x?1n(1a):\'\'}if(x&&C.j7){C.j7=I;1E(7d,1w)}}E zH(){jo=I}G.4N=E(x,y){if(7W!=\'\'&&(C.1u==\'x\'||C.1u==\'1x\')){x=x+\'x\'}if(y){x=C.1u+x}4N(x);!5U(1a)?C.j7=H:\'\'};B oQ;G.fO=E(x){if(oQ!=x){C.8K=x;4N(x);!5U(1a)?C.j7=H:\'\';o.R?o.R.3Z():\'\'}oQ=x};G.rp=E(){fR(bc,ly);ly+=20};E fR(x,y){Q(x,{"2t":"lo("+y+"p8)"+(x==1f[0]&&!zE&&2F!=1?\' 1F(\'+2F+\')\':\'\')})};G.zD=E(x){if(C.1u.K("{29")>-1){4N(C.1u)}};G.fa=E(){fa()};G.rs=E(x){on=x==0;dZ()};E 4N(1u){if(C.1G=="1u"){if(L(1u)){if(C.zB){if(1u.S==4){1u=(C.jd?\'0:0\':\'f9:0\')+1u}if(1u.S==5){1u=(C.jd?\'0:\':\'f9:\')+1u}if(1u.S==7){1u=(C.jd?\'\':\'0\')+1u}}if(C.zA){if(1u.S==4){1u=\'0\'+1u}}C.jg=1u.S}1u=(C.rT?C.rT+(C.zx?\'\':\' \'):\'\')+1u+(C.sG?\' \'+C.sG:\'\');B zw=1f[0].1U+(C.bg==1?C.b3+C.c9:0);B zt=1f[0].2D+(C.bg==1?C.b3+C.c9:0);1f[0].2B=o.ni+(17=="3z"?sz(1u):1u)+o.fb;if(C.PY==1){1f[0].2B+=\'<a4 C="2o:zg-6g;1g:Q0"></a4><a4 C="3n-1c: aP 9I \'+3O(C.1S)+\';3n-1b: aP 9I bL;3n-2Q: aP 9I bL;1p: 2n;2Q:aP;1c: 50%;33-1c: -bh;"></a4>\'}if(17=="29"){Q(1f[0],{"1g":"2X","h4-bw":"ik"});rZ(1u)}C.w=1f[0].1U+(C.bg==1?C.7Q+C.7B:0);C.h=1f[0].2D+(C.bg==1?C.b3+C.c9:0);if(zw!=C.w||zt!=C.h||(C.w>0&&ri==0)){7d()}if(1f[0].1U>0){ri=C.w}F{7W!=\'\'?1k(1f[0]):\'\';if(1u!=\'\'){1E(7d,10)}}}}G.7d=E(){7d()};E hr(){J!o.O.53()&&C.zs==1}E 7d(){if(C.1G=="1u"){if(1f[0]){if(1f[0].1U>0){7W!=\'\'?1n(1f[0]):\'\';w=C.w=1f[0].1U;h=C.h=1f[0].2D;8G();9W(bg);2z();if(o.R){if(6e([C.1p],"1a")){o.R.rG()}F{o.R.3Z()}}}}}}G.rD=E(x){if(C.zr==1){B n=4;if(Y=="Pt"){if(o.1i.1W){J}}F{n=8}B y=\'he\';B z=[];W(B i=1;i<n;i++){z[i]=1K.7h(y.8d(v.id,Y,\'P0\',i))}if(z[1]){W(B i=1;i<n;i++){z[i]?1k(z[i]):\'\'}if(n==4){W(B i=1;i<n;i++){x>(i/n)&&z[i]?1n(z[i]):\'\'}}F{W(B i=n;i>0;i--){if(x*1+(1/n)>=(i/n)&&z[i]){1n(z[i]);1j}}}}}};G.On=E(){if(!on){if(2m){if(2m.S>1&&U.S>1){1k(1f[0]);1n(1f[1])}}if(U.S>1){17=U[1];if(C.23==1){2l.2B=fp(1);6Y()}}if(hr()&&8M){1k(1f[fF]);8M=I}if(C.pp==1){fa(1)}dZ();on=H}};E fp(x){J o.ni+(C.2l==\'\'?41(U[x]):(5v.S>1?5v[x]:5v[0]))+o.fb}G.9Z=E(x){9Z(x)};G.zn=E(x,y){if(C.fg){C.fg.aJ(x,y)}};E 9Z(x){B y=\'he\';B z=1K.7h(y.8d(v.id,Y,\'P6\'));if(z){Q(z,{"5b":"2t 0.1s ce-7E"});if(x==1){z.C.2t=\'zl(0, 0)\'}F{z.C.2t=\'zl(-P7, 0)\'}}F{if(x==1){C.a=1}F{C.a=0.5}}on=x==1;if(C.23==1&&5v.S>1){2l.2B=(on?5v[0]:5v[1])}Q(1f[0],{"1I":C.a})};G.fk=E(){if(on){if(2m){if(2m.S>1&&U.S>1){1n(1f[0]);1k(1f[1]);Q(1f[0],{"1I":C.a})}}17=U[0];if(U.S>1){if(C.23==1){2l.2B=fp(0);6Y()}}dZ();on=I;8M=I}};G.rg=E(){if(hr()){hm();1n(1f[fF]);8M=H}};G.zk=E(){B 2h=I;if(C.1k==1){if(C.zj==1){if(5U(o.1T)){2h=H}}if(C.P8==1&&!o.1O){2h=H}if(C.Pb==1&&o.1O){2h=H}}if(!2h){5l(1a);B dN=1a.aU("*");W(B i=dN.S;i--;){Q(dN[i],{"4E-1r-aF":"Pc"})}3H=H}};G.fC=E(){fC()};E fC(){3i(1a);B dN=1a.aU("*");W(B i=dN.S;i--;){Q(dN[i],{"4E-1r-aF":"a2"})}3H=I}G.4s=E(){if(2m.S>0){W(i=0;i<2m.S;i++){if(1f[i].3T==1a){1a.3C(1f[i])}1f[i]=28}}if(bg){bg.bt("cX");bg.bt("gK");bg.bt("h1");bg.3T.3C(bg);bg=28}if(C.1p.K(\'7b\')>-1){if(1a.3T==o.7b){o.7b.3C(1a)}}F{if(1a.3T==o.1M){o.1M.3C(1a)}F{if(o.1m){if(1a.3T==o.1m){o.1m.3C(1a)}}}}if(23){if(23.3T==1a){1a.3C(23)}}1a=28};G.zi=E(){dr?dr.dP():\'\'};G.zh=E(){sy()};E sy(){AU(2m[0],C.1S,1f[0])}E sz(x){B z=x+\'\';if(x.K(\'{\')>-1){if(x.K(\'{Z}\')>-1&&L(o.2M)){x=x.1P(\'{Z}\',cM(o.2M.8L().t))}if(x.K(\'{29\')>-1){B y=o.bn?o.bn:(v.29?v.29:\'\');if(x.K(\'{i3}\')>-1&&o.R){x=x.1P(\'{i3}\',o.R.an(\'i3\'))}if(o.fl&&o.R){y=o.R.an(\'fl\')}x=x.1P(\'{29}\',y);if(o.fl&&!o.R){1E(4N,1w,z)}}if(x.K(\'{1u\')>-1){W(B i=1;i<6;i++){if(x.K(\'{1u\'+i+\'}\')>-1){if(L(v[\'1u\'+i])){x=x.1P(\'{1u\'+i+\'}\',v[\'1u\'+i])}F{x=x.1P(\'{1u\'+i+\'}\',\'\')}}}}if(x.K(\'{56}\')>-1){o.sA=Y;if(o.R){x=x.1P(\'{56}\',o.R.an(\'Pg\'))}}}J x}G.sE=E(){4N(C.1u)};E sF(sf){if(22(C[sf+\'3V\'+\'B\'])){B x=v[C[sf+\'3V\'+\'B\']];if(22(x)){if(1z(x)=="47"){C[sf]=x}}}}E hV(1f,6r){W(B i=0;i<1f.S;i++){zP(1f[i],6r)}if(C.2x=="3j"){if(o.3j){o.3j.Pj(1f[0],6r)}}}};B C2=E(Y,17){B i;B C=[];B w;B h;B bg;B 3H=H;B x0;B y0;B 2F=1;B 2K=1;B c4=0;B 7u=0;B Pk;B 3h;B k9;B 54;B 2a;B 2R;B CA;B CG;B oP;B CF;B 23;B 2l;B 6H;B cZ;B os;o.CZ=-1;B lh;B 54;B pn;W(i in dU.P){C[i]=dU.P[i]}B 17=v[Y].17;B 1G=v[Y].1G;W(i in dU[17]){C[i]=dU[17][i]}W(i in v[Y]){C[i]=v[Y][i]}C.w=2P(C.w);C.h=2P(C.h);C=4h(C,\'33\',\'33\');C=4h(C,\'aX\',\'aX\');if(o.bo){if(C.Cx>0){C.w=2P(C.Cx)}if(C.dT){if(C.dT!=\'0 0 0 0\'){C=4h(C,\'aX\',\'dT\')}}}B 1a=1Z("2p");if(v.1m.Cw==1&&v.1m.1k==1){o.1m.1V(1a)}F{o.1M.1V(1a)}17=="2A"?o.7b=1a:\'\';B 6D=I;if(C.5Q){if(C.5Q!=\'1y\'){6D=H}}Q(1a,{"1p":"2n","1c":0,"1b":0,"1I":1,"b9":"hc","kT":"gC"});if(C.Cv==1){1a.C.4k=C.43}8G();B 6T=1Z("2p");Q(6T,{"1p":"2n","3v":2u.5r(-C.h/2),"1b":2u.5r(-C.w/2)});if(C.6B>0&&C.Cb==1){Q(6T,{"3n-8g":C.6B*C.h/2,"1d":C.h,"9L":"3g","4V-2L":"1R"})}if(22(C.3N)){3P(1a,{"id":(v.id+"hK"+C.3N)})}1a.1V(6T);if(17==\'2A\'&&v.s0==1){Bu()}if(C.23==1){ky()}B 6K=1Z("2p");eg(0,6K,0.3,(C.5h==1?"3A-5h("+(C.rd==1?"to 1b,":\'\')+3O(C.Cu)+", "+3O(C.hA)+")":3O(C.hA)),C.w,C.Pr);if(C.Cl==1&&L(C.hX)){B eo=1Z("2p");eo.2B=C.hX.1P(/\\#Ck/g,3O(C.hA));6K.1V(eo);Q(eo,{"1p":"2n","3v":-2u.5r(C.h/2),"1b":0,"4V-2L":"1R"});Q(6K,{"9L":"3g","2y":"1R"});B x=["pa","cl","Ct","eA","eE"];W(B y=0;y<x.S;y++){B z=eo.p1("2I "+x[y]);if(z.S>0){W(B y2=0;y2<z.S;y2++){z[y2].C.5F=3O(C.hA)}}}}6T.1V(6K);B Se=[];B 9n=1Z("2p");eg(1,9n,C.Cs,(C.5h==1?"3A-5h("+(C.rd==1?"to 1b,":\'\')+3O(C.Cr)+", "+3O(C.Cq)+")":C.Cq),0,C.Q3);6T.1V(9n);if(C.8e>0){B ax=1Z("2p");eg(2,ax,C.Cp,C.Sg,0,C.8e);6T.1V(ax)}B 5I=1Z("2p");eg(3,5I,C.Cn,(C.5h==1?"3A-5h("+(C.rd==1?"to 1b,":\'\')+3O(C.Cm)+", "+3O(C.1S)+")":C.1S),0,C.a);if(C.Cl==1&&L(C.hX)){B hB=1Z("2p");hB.2B=C.hX.1P(/\\#Ck/g,3O(C.1S));Q(hB,{"1p":"2n","3v":-2u.5r(C.h/2),"1b":0,"4V-2L":"1R"});Q(5I,{"9L":"3g","2y":"1R"});5I.1V(hB)}if(C.7a==1){B 9r=1Z("2p");C=4h(C,\'pi\',\'pi\');C=4h(C,\'ph\',\'ph\');Q(9r,{"1p":"2n","3v":C.h/2,"1b":0,"4V-2L":"1R","4I-3Y":C.Ci*2r(v.bO,1),"1S":C.jO,"2A-1d":"1w%","3U-1c":C.Vn,"3U-3v":C.Vv,"3U-1b":C.Vt,"3U-2Q":C.Vr,"33-1c":C.VL,"33-3v":C.Vz,"33-1b":C.W3,"33-2Q":C.W2,"3n-8g":(C.C3+"px"),"2o":"1R"});if(C.Ch==1){Q(9r,{"2y":3O(C.Cg)})}5I.1V(9r);B e8=I;B W5=I}o.hj=C.h;6T.1V(5I);if(C.fJ==1){B bF=[];if(1z Cf!=="1H"){B 7w=1C Cf(1a,bF,w,C)}}if(C.2R==1){if(C.az.4T().K(\'<2I\')==-1){C.az==\'\'?C.az="<2I 1g=\'20\' 1d=\'20\'><g><eE ry=\'5\' rx=\'5\' cy=\'10\' cx=\'10\' 5F=\'#bN\'/></g></2I>":\'\'}2R=1Z("2p");2R.2B=C.az.4T();C=4h(C,\'Ce\',\'Ce\');Q(2R,{"1p":"2n","1c":-10+C.UC-C.UB,"1b":-2b,"4V-2L":"1R","1d":20,"1g":C.cJ,"1I":C.pw,"5b":"2t 0.1s 3A, 1I 0.1s 3A"});if(C.ea==1||C.ol==1){Q(2R,{"2t":"1F(0)"})}F{if(C.lx!=1){Q(2R,{"2t":"1F("+C.lx+")"})}}if(C.Uz==1){Q(2R,{"6W":"Uy-di(bh bh aP 9T(0, 0, 0, .7))"})}1a.1V(2R);if(C.p9!=-1){B x=["pa","eA","eE"];W(B y=0;y<x.S;y++){B z=2R.p1("2I "+x[y]);if(z.S>0){W(B y2=0;y2<z.S;y2++){z[y2].C.5F=3O(C.p9)}}}}C.cR=2R.1U}if(C.8V!=0){Q(1a,{"2t":"lo("+C.8V+"p8)"})}if(C.3g==1){1k(1a);3H=I}if(17=="1y"&&!6D){if(C.1k==1&&C.eH==1){o.eL=H;C.3g=H}F{o.eL=I}}C.9t=0;if(C.8V!=0){C.e2=2u.De(C.8V);if(C.e2>45&&C.e2<Vc){C.9t=90}if(C.e2>Vb&&C.e2<Cd){C.9t=CU}}if(6D){C.5Q?o[\'2A\'+\'3V\'+C.5Q]=C.5Q:\'\';w=C.w;C.5Q=="6i"?59(1,o.4R.4v(-1)[0],"no"):\'\';if(C.5Q=="qN"){B pv=v.1y;v.1Q?(v.1Q.1y?pv=v.1Q.1y:\'\'):\'\';59(pv,1,"no")}}E eg(n,x,y,z,Cc,Ca){Q(x,{"1p":"2n","3v":0,"1b":0,"1g":Cc,"1d":(C[\'h\'+n]>0?C[\'h\'+n]:C.h),"2y":z?(z.K("3A")>-1?z:3O(z)):\'\',"3n-8g":(C.Cb==1?1:C.6B*C.h/2),"1I":Ca,"4V-2L":"1R","5b":"2t 0.2s ce-in-7E"})}E 8G(){bg=1Z("2p");C=4h(C,\'ei\',\'ei\');B fr=C.h+C.b3+C.c9;B C9=C.w+C.7B+C.7Q;if(C.bg==1){}F{C.7A=0}C=4h(C,\'ep\',\'ep\');if(v.1m.eq==1||C.eq==1){C.5d=\'#p3\';C.bg=1;C.7A=0.5}Q(bg,{"1p":"2n","1c":0,"1b":0,"1g":C9,"1d":fr*C.pj,"pb":(C.lD*fr)/2,"2y":5O(C.5d,C.7A),"bX":"2X","5b":"1I .1s 3A, 2y .1s 3A"});if(C.9O==1){Q(bg,{\'jV-6W\':\'9O(ci)\'})}if(C.pk==1){Q(bg,{"3n":2r(C.C8,1)+"px 9I #"+C.pK})}if(C.2a==1){if(C.fM==1){Q(bg,{"9c":"4V"})}if(!o.1i.1W||v.cq==1){bg.cX=cE;bg.V5=pq;bg.V4=kj;bg.gW=aA}}F{Q(bg,{"9c":"6a"})}if(!o.1i.1W){bg.gK=9d;bg.gW=aA;bg.h1=7X}if(o.1i.pH&&C.2a==1){bg.1Y("kW",E(1q){1q.6V=H;if(!L(1q.4H)&&1q.5T.S>0){1q.4H=1q.5T[0].fE;1q.6M=1q.5T[0].k5}lh=1q;9d(1q);kj(1q)},{5y:I});bg.1Y("kR",E(1q){1q.6V=H;o.3h=I;7X(1q);pq(lh)},{5y:I});bg.1Y("2a",E(1q){1q.6V=H});bg.1Y("af",E(1q){if(!L(1q.4H)&&1q.5T.S>0){1q.4H=1q.5T[0].fE;1q.6M=1q.5T[0].k5}lh=1q;o.3h=H;aA(1q);if(o.1i.pH){kj(1q)}},{5y:I})}Q(bg,{"1b":2u.lq(-C.w/2-C.7B)});Q(bg,{"1c":2u.lq(-C.h/2-C.b3+C.C5-C.C4)});if(C.Cy==1){pE(bg,C.5d,C.Cj,C.Cz)}1a.1V(bg)}E 2z(1g){if(1g!=w){w=1g;o.pB=w;B 8O=w/6K.1U;Q(bg,{"1g":(w+C.7B+C.7Q),"1b":-w/2-C.7B,});Q(6T,{"1b":-w/2});Q(6K,{"1g":w});Q(6T,{"1g":w});B xx=9n.1U*8O;if(xx>6K.1U){xx=6K.1U}Q(9n,{"1g":xx});B wp=5I.1U*8O;Q(5I,{"1g":wp});e9(wp);if(17=="2A"){Bc()}if(C.fJ==1){7w?7w.CB(w):\'\'}if(o.4Q){o.4Q.2z()}}}E e9(x){if(C.2R==1){if(x<C.cR/2&&C.cJ!=20){x=C.cR/2}if(x>w-C.cR/2&&C.cJ!=20){x=w-C.cR/2}B y=x-w/2-C.cR/2+C.UW-C.UY;Q(2R,{"1b":y})}}E oD(){Q(2R,{"2t":"1F("+C.lx+")"})}E 9d(1q){o.R.fe(Y,"54");if(C.bg==1){if(C.8Q!=-1){B m=1C 9q({"mc":bg,"1G":"aM","to":C.8Q,"Z":0.1,"me":(Y+"bg")})}if(22(C.8R)){Q(bg,{"2y-1S":C.8R})}}if(22(C.pz)){Q(5I,{"2y-1S":C.pz})}if(C.2R==1){if(C.D3==1&&L(C.py)){if(C.kk==1&&3h){}F{2R.2B="<2I 1g=\'"+C.cJ+"\' 1d=\'20\' 5H:5w=\'4O://5x.w3.5o/bC/5w\' 5H=\'4O://5x.w3.5o/5q/2I\'>"+C.py.4T()+"</2I>"}}if(C.ea==1){if(C.ol==1&&!o.1A){}F{oD()}}F{if(C.kb!=-1){B m2=1C 9q({"mc":2R,"1G":"aM","to":C.kb,"Z":0.1,"me":(Y+"2R")})}}}if(C.23==1&&(o.O.1h()>0||17=="1y"||6D)){fs()}if(C.cL>0){Q(bg,{"2t":"2K("+((C.cL-1)/5+1)+")"});pt(C.cL)}if(C.2R==1&&C.ov==1){e9(6C(1q.4H)-7u)}if(17=="1y"){o.U.5i(H);o.5i=H}54=H;o.ay=H}E pt(x){Q(6K,{"2t":"2K("+x+")"});Q(9n,{"2t":"2K("+x+")"});ax?Q(ax,{"2t":"2K("+x+")"}):\'\';Q(5I,{"2t":"2K("+x+")"})}E 7X(){if(!k9){if(C.8e>0){Q(ax,{"1g":0})}if(22(C.pz)){Q(5I,{"2y-1S":C.1S})}if(C.bg==1){if(C.8Q!=-1){B m=1C 9q({"mc":bg,"1G":"aM","to":C.7A,"Z":0.1,"me":(Y+"bg")})}if(22(C.8R)){Q(bg,{"2y-1S":C.5d})}}if(C.2R==1){if(C.D3==1&&L(C.py)){if(C.kk==1&&3h){}F{2R.2B="<2I 1g=\'"+C.cJ+"\' 1d=\'20\' 5H:5w=\'4O://5x.w3.5o/bC/5w\' 5H=\'4O://5x.w3.5o/5q/2I\'>"+C.az.4T()+"</2I>"}}if(C.ea==1){Q(2R,{"2t":"1F(0)"})}F{if(C.kb!=-1){B m2=1C 9q({"mc":2R,"1G":"aM","to":C.pw,"Z":0.1,"me":(Y+"2R")})}}}if(C.cL>0){Q(bg,{"2t":"2K(1)"});pt(1)}if(17=="1y"&&!o.1O){o.U.5i(I);o.5i=I}o.R.fe(Y,"7E")}if(C.fJ==1&&7w){7w.7E()}if(C.23==1&&(o.O.1h()>0||17=="1y")){kq()}if(o.oj&&17=="2A"){o.th.1k();o.CZ=-1}54=I;o.ay=I}E cE(1q){1q.6V=H}E CY(1q){1q.6V=H}E pq(1q){if(17=="1y"){if(o.6Q){k9=H;2w(pn);pn=1E(E(){k9=I;7X()},2b)}}oo();o.3h=I;if(C.2R==1){if(C.kk==1&&L(C.oZ)){2R.2B="<2I 1g=\'20\' 1d=\'20\' 5H:5w=\'4O://5x.w3.5o/bC/5w\' 5H=\'4O://5x.w3.5o/5q/2I\'>"+C.az.4T()+"</2I>"}}a5(1q.4H,1q.6M);o.R.cC(Y);o.R.cS(1q.4H,1q.6M);1q.6V=H}E kj(1q){3h=H;if(C.2R==1){if(C.kk==1&&L(C.oZ)){2R.2B="<2I 1g=\'20\' 1d=\'20\' 5H:5w=\'4O://5x.w3.5o/bC/5w\' 5H=\'4O://5x.w3.5o/5q/2I\'>"+C.oZ.4T()+"</2I>"}}c4=6C(g0(bg));7u=6C(db(bg));a5(1q.4H,1q.6M);59(2a,1,"no")}E a5(aD,aC){B x;aD=6C(aD);aC=6C(aC);B CW=2u.6j(1K.jZ.fA,1K.8T.fA);B CX=2u.6j(1K.jZ.km,1K.8T.km);if(o.1i.1W){}F{aC=aC+CX;aD=aD+CW}if(C.9t>0){x=aC-c4-C.7Q;2a=x/w;if(C.9t==CU){x=aC-c4-C.7B;2a=x/w;2a=(2a-1)*-1}}F{x=aD-7u-C.7B;2a=x/w;if(C.8V>Vj&&C.8V<UT){x=aD-7u-C.7Q;2a=x/w;2a=(2a-1)*-1}}2a>1?2a=1:\'\';2a<0?2a=0:\'\'}G.CS=E(){7w?7w.CB(w):\'\'};G.k7=E(){7w?7w.aJ(w):\'\'};E oo(){3h=I}E aA(1q){7u=6C(db(bg));if(C.8e>0){if(o.1A||17!=\'2A\'){Q(ax,{"1g":6C(1q.4H)-7u})}}if(C.23==1&&(o.O.1h()>0||17=="1y"||6D)){fs();c4=g0(bg);a5(1q.4H,1q.6M);if(17=="2A"){if(v.Ut==1){if(o.O.53()&&o.O.9y().K("?ow")>0){2l.2B=\'- \'+cM((1-2a)*o.O.1h(H))}F{2l.2B=cM(2a*o.O.1h())}}F{B d=o.O.1h();if(v.3R>0){d=d-v.3R*1}B c0=\'\';if(C.fJ==1&&7w){c0=7w.23(2a*d);c0!=\'\'?c0=c0+\'<br>\':\'\'}2l.2B=c0+cM(2a*d)}}if(17=="1y"||6D){2l.2B=p0(2a)}6Y(1q)}if(o.oj&&17=="2A"&&o.th){os=1q;if(!cZ||v.CP!=1){ot()}if(v.CP==1){2w(cZ);cZ=1E(ot,50)}}if(C.2R==1&&C.ov==1){e9(6C(1q.4H)-7u)}}E ot(){2w(cZ);cZ=1H;if(C.23==0){c4=6C(g0(bg));7u=6C(db(bg));a5(1q.4H,1q.6M)}54?o.th.9o(os,w,2a,7u):\'\'}E 6Y(1q,t,l){B 1b=(-w/2+(6C(1q.4H)+1K.jZ.fA-7u)-2l.1U/2)+(l?l:0);B fv=0;if(v.qd!=1){if(1b+w/2+2l.1U+10>o.2E){fv=1b;1b=o.2E-w/2-2l.1U-10}if(1b+o.2E/2<0){fv=1b;1b=-o.2E/2}}B x={"1c":(-2l.2D-C.CO*1-C.kA-C.oO)-(C.CN==1?(C.h/2)*(C.cL>0?C.cL:1):0)+(t?t:0),"1b":1b};Q(23,x);if(C.c7==1){Q(6H,{\'1p\':\'2n\',\'1b\':2l.1U/2-4+(fv!=0?fv-1b:0),\'1c\':2l.2D-6})}}G.fs=E(e,x,t,l){fs();2l.2B=x;6Y(e,t,l)};E fs(){if(!5U(23)||23.C.1I==0){1n(23);Q(23,{"1I":1})}}G.kq=E(){kq()};E kq(){1k(23);Q(23,{"1I":0})}G.c=E(){J 1a};G.s=E(Y){J C[Y]};G.ss=E(x,x2){J C[x][x2]};G.g=E(x){aI(x){1o"1g":J w;1j;1o"VQ":J 6K.1U;1j;1o"1d":J C.h;1j;1o"x":J 4F(1a.C.1b);1j;1o"y":J 4F(1a.C.1c);1j;1o"1I":J 1a.C.1I?1a.C.1I:1;1j;1o"1n":J 3H;1j;1o"2F":J 2F;1j;1o"2K":J 2K;1j;1o"17":J 17;1j;1o"Y":J Y;1j;1o"x0":J x0;1j;1o"y0":J y0;1j;1o"2a":J 2a;1j;1o"cp":J 6D;1j;6a:J I}};G.1J=E(Y,x){aI(Y){1o"1n":3H=x;1j;1o"3h":3h=x;1j;1o"2o":17=="2A"||C.1k==1?Q(1a,{"5n":(x?"3H":"3g")}):Q(1a,{"2o":(x?"6g":"1R")});3H=x;1j;1o"2F":Q(1a,{"2t":"2F("+x+")"});2F=x;1j;1o"2K":Q(1a,{"2t":"2K("+x+")"});2K=x;1j;1o"1I":Q(1a,{"1I":x});1j;1o"1b":Q(1a,{"1b":x});1j;1o"1c":Q(1a,{"1c":x});1j;1o"2a":2a=x;1j;1o"bH":C.bH=x;1j;1o"1g":Q(1a,{"1g":x});1j;1o"1d":Q(1a,{"1d":x});1j;1o"op":C.VR=x;1j;1o"x":Q(1a,{"1b":x});1j;1o"y":Q(1a,{"1c":x});1j;1o"x0":x0=x;1j;1o"y0":y0=x;1j}};G.2z=E(x){2z(x)};G.l4=E(x){};G.cI=E(8W,8U){if(3h){if(17=="1y"||6D||C.VY==1){a5(8W,8U);o.R.cC(Y)}if(17=="1y"){o.6Q=H}a5(8W,8U);59(2a,1,"no")}};G.cS=E(8W,8U){if(3h){oo();3h=I;a5(8W,8U);o.R.cC(Y);59(2a,1,"no")}};E 59(Z,1h,x){Z<0?Z=0:\'\';if(v.3R>0&&1h>1){1h=1h-v.3R;Z=Z-v.3R}if(C.2R==1&&C.ol==1&&C.ea!=1){if(!C.CH&&Z>0){oD();C.CH=H}}if(3h&&1h!=1){}F{B 3B;if(1h>0&&Z>0){if(Z>1h){Z=1h}3B=w*(Z/1h);if(3B==5I.1U){3B=-1}}F{3B=0}if(3B>=0){Q(5I,{"1g":3B});if(C.ov==1&&54&&!x){}F{e9(3B)}}if(L(9r)){if(1h<2&&17=="2A"){if(e8){3i(9r);e8=I}}F{if(!e8){5l(9r);e8=H}9r.2B=17=="2A"?3t(Z==0?1h:Z):p0(Z)}}}};G.59=E(Z,1h,x){if(1h!=CG||Z!=CF||x){59(Z,1h,x)}};G.CD=E(){2a>1?2a=1:\'\';2a<0?2a=0:\'\';Q(5I,{"1g":(2a*w)})};G.CC=E(Z,1h){if(1h>0&&Z>0){B 3B=w*(Z/1h);3B>w?3B=w:\'\';Q(9n,{"1g":4F(3B)});CA=1h;oP=Z}F{oP=0;Q(9n,{"1g":0})}};G.es=E(x){if(C.4Q==1){if(!o.4Q){if(x!=0){if(1z C1!=="1H"){o.4Q=1C C1(1a,C,x);o.7C=H}}}F{if((!L(x)||x==0)&&o.7C){o.4Q.1k();o.7C=I}F{if(!o.7C||(L(x)&&x!=1&&x!=0)){o.4Q.oX(x);o.7C=H}}}}};E Bu(){o.9o=1Z("2p");Q(o.9o,{\'1p\':\'2n\',\'1b\':0,\'1c\':0,\'1g\':v.C0,\'1d\':v.Bq,\'9L\':\'3g\',"4V-2L":"1R","2y-1S":"#B8","3n-8g":v.Bp+\'px\',"2o":"1R"});o.9o.id="VM"+v.id;if(v.Bo==1){Q(o.9o,{"3n":v.Bn+"px 9I "+oU(\'1S\',v.Bm)})}if(v.Bl==1){Q(o.9o,{"6P-di":"jk bh jz 9T(0,0,0,0.5)"})}o.9o.C.4k="oS";1a.1V(o.9o)}E ky(){23=1Z("2p");Q(23,{\'1p\':\'2n\',\'1b\':0,\'1c\':0,\'1d\':\'2X\',"4V-2L":"1R","1I":0,"5b":"1I 0.1s 3A"});C=4h(C,\'eu\',\'eu\');2l=1Z("2p");Q(2l,{\'1p\':\'2n\',\'3U-1b\':C.oR,\'3U-2Q\':C.Bk,\'3U-1c\':C.kA,\'3U-3v\':C.oO-1,\'1u-gS\':\'as\',\'1S\':C.oG,\'4I-kB\':g2(C.oN),\'4I-3Y\':C.oM*2r(v.bO,1),\'jG-fX\':C.oL+\'px\',\'2A-1d\':"1",\'2y-1S\':5O(C.gM,C.h3),\'3n-8g\':C.oK});C.Bj?C.c7=C.Bj:\'\';if(C.c7==1){6H=1Z("2p");6H.2B=\'<2I 1g="ci" 1d="oJ" Bi="0 0 8 6" 6S="1.1" 5H="4O://5x.w3.5o/5q/2I" 5H:5w="4O://5x.w3.5o/bC/5w"><cl id="Bh" Bg="1R" 5F="\'+3O(C.gM)+\'" 5F-Bf="Be" bF="0 0 8 0 4 6"></cl></2I>\'}1a.1V(23);23.1V(2l);if(C.c7==1){23.1V(6H);Q(6H,{\'1I\':C.h3})}23.C.4k="2b"};E Bc(){if(o.2M&&v.aE==1&&!o.1A){B f=o.2M.8L();if(f.t&&f.d){59(f.t,f.d)}}};E p0(x){B y=2u.5r(x*1w);if(6D){if(o.eF){J(6D&&22(C.2l)?C.2l+\'&kD;\':\'\')+3l(x*o.4R.4v(-1)[0]).pM(1)}if(o.AX){J(6D&&22(C.2l)?C.2l+\'&kD;\':\'\')+o.qN}}J y};G.4s=E(){1a.3C(6T);if(bg){bg.bt("cX");bg.bt("gK");bg.bt("h1");bg.3T.3C(bg);bg=28}if(2R){1a.3C(2R)}if(1a.3T==o.1M){o.1M.3C(1a)}F{if(o.1m){if(1a.3T==o.1m){o.1m.3C(1a)}}}1a=28}};B qL=E(1c){B i;B C=[];B w;B h;B 3H=H;B 2F=1;B 2K=1;B x0=0;B y0=0;B aH=4J(l3,Vx);B 17,Y="bg";B 1G="Vy";if(1c==H){C["1p"]=\'1c\';C.h=2r(v.1m.VA,50);C.a=2r(v.1m.VC,0.5);C.1S=2r(v.1m.VD,\'#B8\')}F{C["1p"]=v.1m.1p;W(B k in v.1m){if(v.1m.2e(k)){C[k]=v.1m[k]}}}if(C.1n==0){v.1m.h=C.h=0;C.3U=C.33="0 0 0 0";C.5h=0}C["1F"]=1;C=4h(C,\'33\',\'33\');if(22(C.B7)&&o.bo){C=4h(C,\'33\',\'B7\')}if(C.VI==1){C.4f+=\'%\';C.4n+=\'%\'}B 1a=1Z("2p");if(C.9O==1&&C.5h==0){C.a<1?C.qC=C.a:C.qC=0.2;v.1m.a=C.a=1}F{C.9O=0}Q(1a,{\'1p\':\'2n\',\'1b\':0,\'1c\':0,\'1g\':(C.gc==1||1c?\'1w%\':o.8p),\'1I\':C.a,\'4V-2L\':\'1R\',\'b9\':\'hc\',\'kT\':\'gC\'});o.1M.1V(1a);B bg=1Z("2p");Q(bg,{\'1d\':C.h-(C.1p!=\'1c\'?C.g9+C.9M:0),\'2o\':\'6g\',\'33-1b\':C.4f,\'33-2Q\':C.4n,\'3n-8g\':C.6B});if(C.g4>0){B g4=\'bh 9I \'+5O(2r(C.VJ,\'3u\'),C.g4);if(C.Ux==1){Q(bg,{\'3n-1c\':g4})}F{Q(bg,{\'3n\':g4})}}1a.1V(bg);w=1a.1U;v.bJ=-C.9M;if(C.5h==1||1c){if((C.1S==\'3x\'||v.1m.7f!=\'\')&&!1c){if(C.1p!=\'1c\'){v.bJ=98-C.h}B 4d=\'21:7f/qJ;cA,Tl+SR/T/D+SO/T3/T5==\';if(v.1m.7f.K("21:7f")>-1){4d=v.1m.7f}Q(bg,{\'1d\':C.h+(C.1p!=\'1c\'?v.bJ:0),\'2y\':\'18(\'+4d+\') cj-x 50% 1w%\',\'2y-3Y\':\'2X\'})}F{B ca=(1c?\'to 1c, \':\'to 3v, \')+5O(C.1S,0)+\', \'+5O(C.1S,1);Q(bg,{\'2y\':\'-oB-3A-5h(\'+ca+\')\',\'2y\':\'-3o-3A-5h(\'+ca+\')\',\'2y\':\'-ms-3A-5h(\'+ca+\')\',\'2y\':\'-o-3A-5h(\'+ca+\')\',\'2y\':\'3A-5h(\'+ca+\')\'})}}F{if(C.9O==1){Q(1a,{\'jV-6W\':\'9O(ci)\'});Q(bg,{\'1I\':C.qC})}Q(bg,{\'2y-1S\':C.1S})}if(1c){Q(1a,{"5b":"1I 0.2s ce-7E"})}G.h=E(){J C.h-(C.1p!=\'1c\'?C.9M:0)};G.c=E(){J 1a};G.s=E(Y){J C[Y]};G.g=E(x){if(1a){aI(x){1o"w":1a.1U>0?w=1a.1U:\'\';J w;1j;1o"1g":J 1a.1U;1j;1o"1d":J 1a.2D;1j;1o"x":J 4F(1a.C.1b);1j;1o"y":J 4F(1a.C.1c);1j;1o"1I":J 1a.C.1I?1a.C.1I:1;1j;1o"1n":J 3H;1j;1o"2F":J 2F;1j;1o"2K":J 2K;1j;1o"Y":J Y;1j;1o"x0":J x0;1j;1o"y0":J y0;1j;1o"aH":J Y+aH;1j;6a:J I}}F{J I}};G.1J=E(Y,x){aI(Y){1o"1n":3H=x;1j;1o"w":w=x;1j;1o"2o":Q(1a,{"2o":(x&&v.qz!=1?"6g":"1R")});3H=x;1j;1o"1F":Q(1a,{"2t":"1F("+x+")"});2F=x;2K=x;1j;1o"2F":Q(1a,{"2t":"2F("+x+")"});2F=x;1j;1o"2K":Q(1a,{"2t":"2K("+x+")"});2K=x;1j;1o"1I":Q(1a,{"1I":x});1j;1o"1b":Q(1a,{"1b":x});1j;1o"1c":Q(1a,{"1c":x});1j;1o"1g":Q(1a,{"1g":x});1j;1o"1d":Q(1a,{"1d":x});1j;1o"x":Q(1a,{"1b":x});1j;1o"y":Q(1a,{"1c":x});1j;1o"x0":x0=x;1j;1o"y0":y0=x;1j}};G.4s=E(){o.1M.3C(1a);1a=28}};if(1z(2q)=="47"){AY()}o.G=G;if(2q.id){if(1K.7h(2q.id)){qO()}F{1K.1Y(\'Sj\',gP)}}F{1z Bd==\'E\'?Bd():\'\'}E qO(){if(L(2q.id)){if(1K.7h(2q.id)){if(!Du(1K.7h(2q.id))||2q.3H==1){2q.Sm==1?1E(gP,50):gP()}F{1E(qO,50)}}}}E gP(){W(B i=0;i<1t.4U.S;i++){if(L(1t.4U[i])){if(1t.4U[i].2N("id")==2q.id){if(1t.4U[i].2N("8Z")){1t.4U[i].2N(\'2h\')}}F{if(v.Sn==1&&1t.4U[i].2N("v","2T")==1){2q.2T=0}}}}1t.4U.2U(o.G);B 2h=I;o.v0=gw(v);2q.d7?2q.ka=2q.d7:\'\';if(L(2q.ka)){W(B i=2;i<10;i++){if(2q.ka==i&&o[\'u\'+i]!=\'\'){v=7T(v,46.5k(ba(o[\'u\'+i])));2h=H}}}if(o.u!=\'\'&&!2h){v=7T(v,(1z o.u!="2W"?46.5k(ba(o.u)):o.u))}if(1z(Sq)!="E"){W(B Y in 2q){if(2q.2e(Y)){if(Y.K("BZ")==0){2q[Y]=28}}}}v=7T(v,2q);o.26=1K.7h(v.id);if(v.gJ==1&&v.SC==1&&1z(r6)=="E"){mp(o.26,"SD");if(!r6()){1t.1K.1Y("g7",r6,{5y:I})}}F{BY()}}E BY(){B r5=v.1T;if(v.SE==1&&L(v.1T)&&L(r5)){v.1T!=\'\'?v.1T=r5:\'\'}if((!L(v.3e)||v.3e==\'\')&&v.SF==1){1l(\'5C\');J}if(v.BX==1||v.qR==1){1t.1Y(\'8u\',E(1q){B x=1H;B y;L(1q.21.Z)?x=1q.21.Z:\'\';L(1q.21.1y)?x=1q.21.1y:\'\';L(1q.21.BW)?y=1q.21.BW:\'\';L(1q.21.2N)?y=1q.21.2N:\'\';if(y&&22(v.BV)){B pm=v.BV.1P(/\\s+/ig,\'\').2g(\',\');if(pm.K(y)==-1){J}}if(v.qR==1){if(1z(BU)=="E"){BU(1q)}}if(y&&o.6A){if(L(1q.21.1J)){x=1q.21.1J}B z=3a(y,x);1t.7H.lI({1q:y,Tj:z},\'*\')}})}W(B Y in o.bY){if(o.bY.2e(Y)){o.bY[Y]!=\'\'?o.fY+=o.bY[Y]+\' \':\'\'}}1l(o.6S+\' \'+o.fY);1t.aN=v.id;o.d=6G.qW;o.hs=6G.SN;if(!v.6c&&6e([o.hs],\'#1r-\')){v.6c=o.hs.1B(o.hs.K(\'#1r-\')+6)}if(7H){B lJ=I;2C{if(7H){if(7H.1K){B lk=7H.1K.aU("yF");W(B i=0;i<lk.S;i++){if(lk[i].fm===1t){o.6t=lk[i];o.l8=H;v.BT!=1?Q(o.6t,{"3n":"1R"}):\'\';o.BS=o.6t.C;1l("bM")}}}F{lJ=H}}}2k(bp){lJ=H}if(lJ){o.l8=H;1l("TX-gL")}}o.l8&&1K.iA?o.gL=1K.iA.2g(\'/\')[2]:\'\';!o.BR?BQ():\'\';if(1z(BP)=="E"){if(BP()){J}}o.6A=H;BO();B BN=1C 6L();if(BN.U2()==20){if(4J(1,20)==10&&v.U4!=0){BM(o.qs,o.qs);1E(E(){if(1t.ga){ga(\'bW\',\'UA-U6-6\',\'2X\',{\'5Z\':\'7k\',\'U8\':H});ga(\'TT\',\'Bv\');ga(\'Bv:Ub\',[o.d]);ga(\'7k.dR\',\'1q\',{Tp:\'Ts\',Tt:\'gP\',Tu:o.d})}},hD)}}if(!o.26){v.1l=1;1l(\'id "\'+v.id+\'" gY q5\');J I}o.26.2B=\'\';Q(o.26,{\'3U\':0,\'Ty-fX\':\'hE\'});o.7N=o.26.2D;o.7M=o.26.1U;if(L(v.gh)&&!L(v.3W)){if(L(v.gh.3W)){v.3W=v.gh.3W}if(L(v.gh.hI)){v.hI=v.gh.hI}}if(o.26.C.1g.K("%")>-1){o.Tm=o.26.C.1g}if(v.3W=="bs"||o.26.C.1d.K("%")>-1){v.3W="%";o.i2=o.26.C.1d;o.7N=0}if(o.7M==0){if(o.26.C.1g.K("px")>0){o.7M=2P(o.26.C.1g)}F{if(o.26.3T.C.1g.K("px")>0){o.7M=2P(o.26.3T.C.1g)}F{if(o.26.3T.3T.C.1g.K("px")>0){o.7M=2P(o.26.3T.3T.C.1g)}}}}if(5D(v.3W).K("x")>0){o.3W=v.3W.2g("x")[0]/v.3W.2g("x")[1];if(o.7N==0){o.7N=o.7M/o.3W}}F{o.3W=0}Q(o.26,{\'1p\':\'TA\',\'6P-je\':\'qr-6P\',\'1u-gS\':\'1b\',\'-3o-BA-TC\':\'1R\',\'q3\':g2(\'hT-hW\'),\'b0-1d\':15,\'b9\':14*2r(v.bO,1),\'2A-1d\':\'gC\',\'BH\':\'BI\',\'1S-Bz\':\'1R\'});if(v.di==1){Q(o.26,{\'6P-di\':\' 0 Bw TF 9T(50,50,93,.1), 0 jz Bw 9T(0,0,0,.TJ)\'})}if(o.3W>0){Q(o.26,{\'1d\':o.7N})}F{Q(o.26,{\'1d\':o.7N==0?o.i2:o.7N})}if(o.7M==0){Q(o.26,{\'1g\':\'1w%\'})}o.1M=1Z("2p");Q(o.1M,{\'1p\':\'2n\',\'6P-je\':\'qr-6P\',\'do\':v.hS,\'1S\':\'#3u\',\'1g\':\'1w%\',\'1d\':\'1w%\',\'1b\':0,\'1c\':0,\'b9\':\'hc\',\'2A-1d\':\'gC\'});if(v.qd!=1){o.1M.C.9L=\'3g\'}if(v.TM==1){o.1M.C.do=\'bL\'}o.Q=1K.1Z(\'C\');o.Q.1G=\'1u/Q\';o.1M.1V(o.Q);o.1M.5V("id",\'H4\'+v.id);hy(1);if(1t.Bx){B By=1C Bx(E(e){if(e[0].pO.S>0){W(B i=0;i<e[0].pO.S;i++){if(e[0].pO[i]==o.1M){m4()}}}});By.GQ(o.26,{GV:H})}o.aL=1Z(\'bM\');3P(o.aL,{"id":"BC"+v.id,"BB":"no","29":"BC"+v.id,"BD":"H","BE":"H","BF-jn":"H"});Q(o.aL,{\'1p\':\'2n\',\'1g\':\'1w%\',\'1d\':\'1w%\',\'3n\':0,\'4V-2L\':\'1R\'});if(v.3n==1){if(v.Hm==1){Q(o.aL,{"6P-di":"jk jk jk "+v.q7+"px "+v.aG+" Hl",\'4k\':2})}F{Q(o.26,{\'3n\':v.q7+\'px 9I \'+v.aG})}}if(!1K.Hk(\'.qo\')){B 1L="";if(v.BG==1){W(B i=1;i<6;i++){if(22(v[\'1S\'+i])){1L+=\'--H9\'+i+\':\'+5O(v[\'1S\'+i],v[\'6r\'+i+\'a\'])+\';\'}}}j4("4L, 4L > *{-3o-Hh-5n: 3g;1p: ja;1c: 2X;1b: 2X;9L:3H;BH:BI!6N;6j-1g:1R!6N;bi-17: He;2t-Hc: as as;6P-je:qr-6P!6N;-3o-BJ-BK-1S: 9T(0,0,0,0);-3o-BJ-BK-1S: bL;1u-GO:0!6N;"+1L+"} 4L 4d{6j-1g:1R} 4L > *:4A{Gv: 1R} 4L,4L a,4L a:Gq,4L a:Gp,4L a:d5,4L a:qq,4L a:4A{1S:#bN;4I-3Y:1w%;}4L bM{3n:0}4L bM{2o:6g!6N;6j-1d:1R!6N;2y:bL}.qo{}4L 2I{33:0}");o.1M.5V(\'Gn\',\'qo\')}o.1M.1V(o.aL);o.4b?o.4b.2N(\'6A\'):\'\';o.26.Gx=E GP(e){o.jr++;if(o.jr==5){v.1l=1;1l(o.6S+\' \'+o.fY+\' \'+o.fZ)}if(!e)B e=1t.1q;e.6V=H;if(e.aa)e.aa();B x=e.fE-db(o.1M);B y=e.k5-g0(o.1M);if(v.I7==1){if(L(v.jv)){if(4c(v.jv)!=\'\'){o.qi=v.jv;L(v.BL)?o.du=v.BL:\'\';v.jv==\'1R\'?o.du=o.d:\'\'}}}qg(x,y);J I};E qg(x,y){if(o.du.K(o.d)==-1||v.Bt==1||v.3M==1){if(!L(o.3M)){!v.jJ?v.jJ="3x":\'\';!v.qp?v.qp="3u":\'\';o.3M=1Z(\'2p\');B 1L;B n=0;W(B i=0;i<10;i++){if((v[\'rm\'+i]==1&&v.3M==1)||i==9){if((L(v[\'rm\'+i+\'t\'])&&L(v[\'rm\'+i+\'a\'])||i==9)){1L=1Z("qk");if(i==9){if(v.I8!=1){1L.qa=o.qi+(v.Bs==1?" "+o.6S:\'\')}F{1j}}F{1L.qa=v[\'rm\'+i+\'t\']}if(i!=9){if(v[\'rm\'+i+\'a\'].K(",0/1")>-1||v[\'rm\'+i+\'a\'].K(",1/0")>-1){B z=v[\'rm\'+i+\'a\'].2g(\',\');1L.qa+=\' (\'+(3a(z[0].1B(4))==1?41(\'on\'):41(\'bs\'))+\')\'}if(v[\'rm\'+i+\'a\'].K("3y")==0){o.gf=H;!o.3y?o.R.AZ():\'\'}}1L.5V("i",i);B9(1L);1L.1Y("2a",B1);o.3M.1V(1L);n++}}}Q(o.3M,{"1u-2t":"Ib","2A-1d":"1","h4-bw":"ik","2y":5O(v.jJ,0.7)});if(n>1){Q(o.3M,{"3U":"jz"})}o.3M.C.4k="I9";o.3M.gW=B0;o.1M.1V(o.3M)}F{5l(o.3M)}Q(o.3M,{"1p":"2n","1c":y,"1b":x,"1u-gS":"1b"});B qb=I;if(o.2E-x<o.3M.1U-20&&v.qd!=1){Q(o.3M,{"1b":x-o.3M.1U});qb=H}if(v.Ip==1||qb){Q(o.3M,{"1u-gS":"2Q"})}o.B2=x;o.B3=y;2w(o.iL);o.iL=1E(E(){3i(o.3M)},5q)}}E B0(){2w(o.iL);o.iL=1E(E(){3i(o.3M)},5q)}E B1(e){B i=e.6F.IC("i");B y;B ql=I;if(i>0){if(i==9){o.du!=\'\'?1t.6I(o.du):\'\'}F{B x=v[\'rm\'+i+\'a\'];if(x){if(x.K("2N:")==0){if(x.K(",0/1")>-1||x.K(",1/0")>-1){B z=x.2g(\',\');B b=o.R.qe(x,"2x");B u=3a(z[0].1B(4),z[1],b);js(z,u);qf();qg(o.B2,o.B3);ql=H}F{y=x.2g(",");3a(y[0].1B(4),(L(y[1])?y[1]:28))}}if(x.K("3y:")==0&&o.3y){o.3y.2N(x.1B(6))}if(x.K("js:")==0){y=x.2g(",");4G(y[0].1B(3)+\'(\'+(L(y[1])?\'"\'+y[1]+\'"\':\'\')+(L(y[2])?\',"\'+y[2]+\'"\':\'\')+\')\')}if(x.K("18:")==0){x=x.1P(/\\(18\\)/g,B4());x=x.1P(/\\(Iw\\)/g,B5(L(v.B6)?v.B6:1K.iA));x=x.1P(/\\(29\\)/g,o.bn);x=x.1P(/\\(6U\\)/g,v.6U);1t.6I(x.1B(4))}}}!ql?3i(o.3M):\'\'}}E B9(x){Q(x,{"3U":"Ba jz","4I-3Y":(v.Bb?v.Bb:"55")*2r(v.bO,1)+"%","jG-fX":"0.HH","1I":0.9,"1S":v.qp});x.1Y("HF",Br);x.1Y("HX",CE)}E Br(e){Q(e.6F,{"1I":1});Q(e.6F,{"2y":5O(v.jJ,0.5)})}E CE(e){Q(e.6F,{"1I":0.9});Q(e.6F,{"2y":"1R"})}o.1i=1C CJ();if(o.1i.3E){B pT=(v.CK==1?\'*::-3o-O-R-1A-EE-jj {2o: 1R!6N;-3o-pQ: 1R;}\':\'\');if(v.hk==1&&v.CL!=1&&(v.CM!=1||!o.1i.5A)&&(v.CQ!=1||!o.1i.gy)){}F{if(o.1i.3E&&v.dy==1){}F{pT+=\'g5::-3o-O-R {2o:1R !6N;}*::-3o-O-R-ET {2o: 1R!6N;-3o-pQ: 1R;}*::aF(3o-O-R-1r-jj){2o: 1R!6N;-3o-pQ: 1R;}\'}}B 1L=1K.1Z(\'C\');1L.1G=\'1u/Q\';1L.1V(1K.CT(pT));o.1M.1V(1L)}if(o.1i.CV){v.2T==1&&v.Ex==1?v.2T=0:\'\'}if(o.3W==0){if(o.1M.2D==15&&!o.i2&&v.D0>0){Q(o.26,{"1d":v.D0})}}if(L(v.i7)){v.X.dX=v.i7}if(L(v.lH)){v.X.lF=v.lH}if(L(v.1A)){o.2c=v.1A}if(L(1t.D1)&&v.FD==1){1t.D1(gg)}F{gg()}}E gg(){1l("gg");o.U=1C D2();if(!v.3e){v.3e="?"}if(v.pl){v.3e=v.pl+o.b4}o.FI=lf();o.D4=0;o.4M=D5();if(o.4M){if(3D.5K("r8")!=28){o.r9=3D.5K("r8")}F{o.r9=lf();3D.96("r8",o.r9)}if(v.ra==1){if(3D.5K("r0")!=28){o.4D=3D.5K("r0");if(22(v.l5)){if(v.l5.K(o.4D)>-1){o.4D=28}}}}if(v.CR==1){if(3D.5K("qP")!=28){v.94=3D.5K("qP")}}W(B i=0;i<o.a9.S;i++){if(v[\'C6\'+o.a9[i]]==1){if(3D.5K("C7"+o.a9[i])!=28){}F{v[o.a9[i]+\'s\']=0}}}gs("FY");gs("G0")}o.gu=o.6O.1B(o.6O.K("://")+3);if(o.gu.K("#")>0){o.gu=o.gu.1B(0,o.gu.K("#"))}if(o.4M&&v.aE==1){o.2M=1C G4()}if(v.gJ==1){o.5n=v.G5;mp(o.26,"5n",H)}v.cV==1&&v.gJ==1?o.cV=1C G7():\'\';v.ab==1?F8():\'\';if(v.Fd==1){o.ag=1C Fe();o.ag.gD()}o.O=1C qw(v.3e);if(!o.1i.1W||v.cq==1){o.1M.1Y("Fn",E(){o.3J=H;o.kY=H;o.R?o.R.Co():\'\'});o.1M.1Y("Ft",E(e){if(!o.3h){if(v.1m.6o>0){2w(o.i8);o.i8=1E(E(){if(o.3J!=o.kY){o.3J=o.kY;o.R.qv()}},v.1m.6o*2b)}F{o.3J=I}o.kY=I;if(o.R){o.R.l4()}}})}if(!o.1i.1W){o.1M.1Y("Fy",E(e){if(!o.f0){o.3h=H}});o.1M.1Y("zo",E(e){if(!o.f0){o.3h=I;if(!o.5i){o.6Q=I;o.bq=I}if(o.1i.bi&&o.1i.cq&&o.1O){1E(E(){o.3J=I;o.R.qv()},4l)}1E(E(){o.4A=H},4l);if(o.1i.1W&&o.R.rE()){}F{o.R?o.R.cS(e.4H,e.6M):\'\'}if(v.gZ==1){if(o.R.al()){o.R.6E()}}}});o.1M.1Y("zq",E(e){if(!o.f0){if(L(o.R)){if(o.3h){o.R.cI(e.4H,e.6M)}F{o.R.iQ()}}}})}if(o.1i.1W){1t.1Y("M2",DV,I)}v.pL==1&&1z AV==\'E\'?o.pL=1C AV():\'\';o.3d.1Y("kW",E(e){if(e.5T){o.bZ=e.5T.S}o.3h=H;o.3J=H;o.kF=I;kw("1A",e)},{5y:H});o.3d.1Y("af",E(e){if(e.5T){o.bZ=e.5T.S;if(o.bZ>1){o.oT=1}}if(o.3h){o.kF=H;kw("Mn",e)}},{5y:H});o.3d.1Y("kR",E(e){o.3h=I;2w(o.i8);o.i8=1E(E(){o.3J=I},(v.1m.6o>0?v.1m.6o:0.5)*2b);if(v.ih==1){B kH=1C 6L().a6();if(kH-o.bB<(v.e7?v.e7:0.3)*2b){jA(e)}}!o.kF&&o.bZ<2&&o.oT!=1?ef(e):\'\';o.kF=I;o.bZ=0;if(e.5T.S==0){o.bZ=0;o.oT=0}kw("4e",e)},{5y:H});2C{1t.1K.1Y("zo",E(e){o.4A=I;if(!o.5i){o.6Q=I;o.bq=I}if(o.3h&&o.R){o.3h=I;o.R.cS(e.4H,e.6M);o.R.l4()}if(!o.3J&&!o.1i.1W&&!o.1i.tv){o.R.ae();if(o.4x){o.4x.ac()}o.R.zp()}})}2k(bp){}1t.1K.1Y("zq",E(e){if(o.R){if(o.3h){o.R.cI(e.4H,e.6M)}F{if(o.1O&&o.om){o.R.iQ()}}}});if(!o.1i.tv){o.1M.1Y("kW",E(e){o.f0=H;if(!o.1i.1W){1l("om");o.om=H}o.bi=H;o.3h=H},{5y:H});o.1M.1Y("kR",E(e){o.bi=I;o.3h=I},{5y:H});1t.1K.1Y("af",E(e){if(o.R&&o.bi){o.R.cI(e.5T[0].fE,e.5T[0].k5)}},{5y:H})}1t.1K.1Y("Mf",E(e){B x=e.6F.jX.jT();if(x==\'zz\'||x==\'zC\'||x==\'zF\'){J}F{o.R?o.R.zu(e):\'\'}});1t.1K.1Y("LQ",E(e){B x=e.6F.jX.jT();if(x==\'zz\'||x==\'zC\'||x==\'2p\'||x==\'zF\'){J}F{o.R?o.R.zG(e):\'\'}});if(o.6t){oA(7H.1K,DR)}oA(1K,DN);E oA(x,z){B y=[\'\',\'oB\',\'3o\',\'ms\',\'Ln\'];if(x){W(B i=0;i<y.S;i++){x.1Y(y[i]+(i<y.S-1?"Lg":\'\'),z,I)}}}if(!L(o.aL.fm)){1l("Lx");J}F{o.aL.fm.1Y(\'3Z\',hZ,H)}o.3d.1Y("2a",E(e){!o.f0?ef(e):\'\'},I);if(v.hu==1&&v.ih==1){o.3d.1Y("LI",jA,I)}o0();if(v.3j){v.3j.on==1?o.3j=1C LD():\'\'}v.4b==1?o.4b=1C LA():\'\';v.cH==1?o.cH=1C Mt():\'\';o.R=1C pJ();if(v.aq.yJ){o.ll=v.aq.yK}ak();8q();if(o.4M){if(v.p6==1&&v.1y!=0&&!o.1i.1W){if(3D.5K("p7")!=28){v.1y=3D.5K("p7")}if(3D.5K("eP")==1&&v.lb==1){v.4j=1}}if(v.yL==1){B sp=3D.5K("yM");if(L(sp)){if(sp.K(\'.\')>0&&o.eF){o.U.aW(sp,1)}F{if(o.4R){B hL=6e(o.4R,sp,H);if(hL!=-1&&o.R.yO(\'6i\')){o.8N=hL;o.O.aW(o.4R[hL])}o.R.yP()}}}}B sB=I;if(v.AG==1){W(B j=0;j<o.fH.S;j++){if(3D.5K("sn"+o.fH[j])!=28){v[o.fH[j]]=3D.5K("sn"+o.fH[j]);sB=H}}}if(o.1i.1W){if(!sB){22(v.yQ)?v.f2=v.yQ:\'\'}if(L(v.yX)){v.yV=v.yX;22(v.z5)?v.z4=v.z5:\'\'}}}if(o.2M){B f=o.2M.8L();if(f.t&&f.d){o.R.fj(f.t,f.d);o.R.3k(f.t,f.d);v.1h=f.d}}o.U.3q(v.1y);if(v.4j==1){o.U.4C();o.R.5m()}if(L(v.z9)){3a("6i",v.z9)}o.7Y=1C rR();if(v.6B>0){Q(o.26,{"3n-8g":(v.6B+"px")});Q(o.1M,{"3n-8g":(v.6B+"px")})}if(L(v.51)){sc("51")}if(L(v.aK)){sc("aK")}if(L(o.X)){js("X")}if(v.6d==1&&v.NB==1){o.U.jD()}W(B i=2;i<10;i++){if(L(v["d7"+i])){if(v["d7"+i]=="1W"&&o.1i.1W){3a("d7",i)}}}1E(hZ,4l,H);1E(E(){js("6A");if(v.8J){if(1z v.8J==\'E\'){v.8J=v.8J.5Z};4G(v.8J+(v.8J.K(\'()\')==-1?\'("\'+v.id+\'")\':\'\'))}},1)}E ef(e){if(o.so[o.3d]>2){J}o.dI=H;v.e7==0?v.ih=1:\'\';if(o.hf&&v.jy==1&&!o.1i.tv){jA(e)}F{B t=(v.e7?v.e7:0.35)*2b;h9();2w(o.za);o.za=1E(E(){o.am=0},t+5c);if(v.ih==1||(v.hu==0&&v.1D.jB!=1)){rB()}F{o.hf=1E(rB,t)}}o.am++;rl()}E rB(){h9();if(o.1i.1W){if(o.R.rE()){o.R.iQ();if(o.2H&&v.iI==1){o.U.5j();v.iI=0}if(v.MO!=1){J}}if(o.ez){if(v.At==1&&v.MT==1&&o.1i.bD){J}if(v.dy==1&&v.Mv==1&&o.1i.3E){J}}}if(o.am>1&&v.1D.jB==1){o.am=0;J}o.am=0;if(v.jy==1){o.1i.1W&&v.JB==1?\'\':o.U.ef()}}E jA(e){h9();B y=I;if(v.1D.jB==1){if(e){if(v.1D.Jz==1&&!o.1i.1W){}F{B x;if(o.1i.1W){x=e.Jy;if(!x){if(e.AH){x=e.AH[0].fE-db(o.1M)}}}F{x=e.Jo}if(v.zm&&v.zm!=1){x=x/v.zm}if(x){if(x<o.2E/2){if(x<o.2E*20/1w){3a("3r","-"+2r(v.1D.AS,10)*o.am);v.1D.2m==1&&v.1D.zU==1?5E(\'3r\',0):\'\';y=H}}F{if(x>o.2E-o.2E*20/1w){3a("3r","+"+2r(v.1D.AS,10)*o.am);v.1D.2m==1&&v.1D.zU==1?5E(\'3r\',1):\'\';y=H}}if(y){if(e.aa)e.aa()}}}}}if(!y){if(v.hu==1){if(v.hk==1&&o.1i.1W){}F{o.1O?o.U.6z():o.U.7y()}}}}E h9(){2w(o.hf);o.hf=1H}E hZ(x){if(o.zV!=o.1M.1U){x?o.zV=o.1M.1U:\'\';hZ()}F{8q()}}E 8q(){B y=I;if(o.8p!=o.1M.1U||o.aS!=o.1M.2D){y=H}o0();o.R?o.R.3Z():\'\';o.O.3Z();y&&!o.1O?js("3Z",o.8p+\',\'+o.aS):\'\'}E o0(){B xw=o.1M.1U;B xh=o.1M.2D;if(o.R){if(v.zW==1){if(v.X.1p!="3v"){B x=o.R.an("KQ")+o.R.an("1c")+5+o.R.an("KP")+2r(v.KO,0);Q(o.26,{"1d":x})}}}if(o.3W>0&&!o.1O&&!o.b5){xh=xw/o.3W+2r(v.lN,0);Q(o.26,{"1d":xh})}if(!o.1O&&!o.b5&&!o.8n){o.8p=2u.5r(xw);o.aS=2u.5r(xh)}if(o.1i.1W&&o.1O&&v.na==1&&8m.ai){if(L(8m.ai.lj)){if(o.3W>0){if(o.3W<1||o.O.7s()<1){B sp=8m.ai.lj(\'DS\');if(sp!==1H){sp.a7(E(){}).2k(E(e){})}}F{B sp=8m.ai.lj(\'nv\');if(sp!==1H){sp.a7(E(){}).2k(E(e){})}}}F{B sp=8m.ai.lj(\'nv\');if(sp!==1H){sp.a7(E(){}).2k(E(e){})}}}}o.2E=xw;o.3L=xh;if(L(v.29)&&o.R){v.29!=\'\'?o.R.A3():\'\'}if(L(o.fU)){o.O.1F(o.fU)}if(o.1N&&!o.1O){o.1N.2z()}if(v.A4==1&&L(o.a8)){2C{o.a8.2z()}2k(e){7p.1l(e)}}o.4x?o.4x.2z():\'\';o.ag?o.ag.2z():\'\';o.4b?o.4b.2N(\'3Z\'):\'\';o.7O?o.7O.2z():\'\'}E ak(){o.U.nW(v);W(B x in v){if(v.2e(x)){if(x.K("29")==0){if(v[x]!=\'\'){o.KH=v[x];o.U.ak(x)}}}}o.cH?o.cH.zQ():\'\'}E 8y(18,26,1F){if(18){if(18!=\'\'){if(v.ap==1){18=ap(18)}if(26==o.1T&&18==o.nn){}F{if(18.K("#"+v.bb)==0){18=o[o.fd[0]](18)}if(18.K("#0")==0){18=cg(18)}18=A5(18);if(L(v.A7)&&18.K("//")==-1){18=v.A7+18}B s="nV";if(1F=="5F"){s="m3"}if(1F=="1R"){s="2X"}if(1F=="A8"){s="1w% 1w%"}if(18.K(\' d0 \')>0&&26==o.1T){o.gE=18.2g(\' d0 \');4z(o.mR);o.mR=aj(DM,2r(v.L4,2)*2b);o.cP=0;18=o.gE[0]}18=18.1P(/ or /g,\'"),18("\');18=18.1P(/\\s/g,\'%20\');if(v.NG==1&&6e([18],\'.En\')){B 1L=\'7k\'+v.id+\'NI\';26.2B=\'<g5 id="\'+1L+\'" 2Y="\'+18+\'" 7V=1 kE=1 2T=1 2H=1 C="\'+(v.NJ==1?\'2W-gR:m3;\':\'\')+\'1g:1w%;1d:1w%"></g5>\';o.cv=1K.7h(1L)}F{o.cv=1H;26.2B=\'\';Q(26,{\'2y-7f\':\'18("\'+18+\'")\',\'2y-cj\':\'no-cj\',\'2y-1p\':\'as\',\'2y-3Y\':s})}1n(26);26==o.1T?o.nn=18:\'\'}}}};E DM(){if(L(o.gE)&&L(o.cP)){o.cP++;if(o.cP>=o.gE.S){o.cP=0}8y(o.gE[o.cP],o.1T,v.cQ)}}E DN(){if(o.1O&&!nd()){o.U.mW(H);o.1i.ff?8q():\'\'}F{if(o.b5||o.3J){nd()?o.1O=H:\'\';o.U.mS()}}1l("1O",o.1O)}E DR(){if(v.gJ==1){mp(o.26,"5n",H)}}E LJ(){1l("ai "+8m.ai.ly)}E DV(){if(2u.De(1t.ai)===90){1l("nv");if(v.DQ==1){B ok=H;if(v.Dg==1&&!o.1A){ok=I}if(v.Dw==1&&!o.1r){ok=I}if(o.7x){ok=I}if(o.1N){ok=H}!o.1O&&ok?o.U.7y():\'\'}}F{1l("DS");if(v.DQ==1){o.1O&&v.na!=1?o.U.6z():\'\'}}}E nd(x){!x?x=1K:\'\';B y=I;2C{y=!!(x.FO||x.FJ||x.FG||x.FF||(x.F6!=1H))}2k(e){y=I}J y}E Du(x){J x.1U==0&&x.2D==0};E m4(){W(B x in o){if(o.2e(x)){if(x.K("Ek")>-1){4z(o[x])}if(x.K("mE")>-1){2w(o[x])}}}1l("Tf")}}', 62, 3605, '|||||||||||||||||||||||||||||||||||||var|style||function|else|this|true|false|return|indexOf|exist|||media|but|css|controls|length||actions|pjstg|for|playlist|key|time||||||||action|url||control|left|top|height|settings|icon|width|duration|system|break|hide|log|toolbar|show|case|position|event|play||window|text|hls|100||volume|typeof|start|substr|new|hotkey|setTimeout|scale|type|undefined|opacity|set|document|tmp|frame|vast|fullscreen|replace|pip|none|color|poster|offsetWidth|appendChild|mobile|vasturl|addEventListener|createElement||data|exist2|tip|||container||null|title|click|1000|seekto||hasOwnProperty|file_type|split|stop|Play|error|catch|tiptext|icons|absolute|display|div|options|existv||transform|Math|_type|clearTimeout|linkurl|background|Resize|line|innerHTML|try|offsetHeight|screen_w|scaleX|media2|muted|svg|current_quality|scaleY|events|continue|api|Pause|parseInt|right|handle|files_quality|autoplay|push|playlist_dic|object|auto|src|pause||||margin|||||||apiProcessor|mediascale|urls|mediacontainer|file|vasttype|hidden|mouseDown|hide2|chromecast|Duration|parseFloat|dash|border|webkit|Seek|Volume|seek||Time|ffffff|bottom|files|000000|share|custom|linear|_to|removeChild|localStorage|ios|ShowOrHide|is_hls|visible|sbt|mouseHere|settings2|screen_h|rightmenu|dom|CheckColor|attr|_from|delete|tagvideo|parentNode|padding|_|aspect|obj|size|resize||Lang|subtitle|order|||JSON|string|||live|effects|trim|img|end|marginleft|butPosition|MarginPadding|casting|mute|zIndex|500|m_to|marginright|canvas|preload|xhr|vast_loaders|Remove|youtube|Hls|slice|vastloader|droplist|m_type|clearInterval|focus|dechar|Mute|default_quality|animation|int|eval|clientX|font|random||pjsdiv|storage|UpdateText|http|is_dash|cut|files_speed|vast_|toString|pljssglobal|pointer|captions|minutes|dash_created|removeEventListener||midroll||isLive|over||next|||UpdatePlay|hlsconfig|transition|200|bgcolor|File|reload|charAt|gradient|volumewheel|Unmute|parse|show2|refresh|visibility|org|FindBut|2000|round||current_audiotrack|motions|tips|xlink|www|passive|vast_and|iphone|ShowPoster|remove|String|PluginHotIcon|fill|Events|xmlns|line3|bg2|getItem|obj2|onError|skip|hex2rgb|seconds|customline|safari|_url|touches|isVisible|setAttribute|navigator|realfullscreen|preroll|name|||current_url||||||||default|status|plstart|pass|indOf|waiting|block|files_audiotrack|speed|max|toolbarHidden|metadata|ended|airplay|hideleavetimeout|HLS|Advertising|clr|hours|parentIframe|buffered|lastwheel|isVastBgLoad|is_sleep|VAST|Normalscreen|init|rounding|Zoomed|_cul|Settings|target|location|tipcrn|open|SetQuality|line0|Date|clientY|important|href|box|hidden_volume_over|floor|version|lines|label|cancelBubble|filter|info|Tip|area|||||||||||value|timeline|folder|ResizeText|hlsquality|image|txt|getElementById|stretch_width|ctx|pjs|quality|media_error|icn|pipwebkit|console|unmute|Waiting|ratio|vast_or|leftBg|is_ws|pnt|ispipkit|Fullscreen|ll1I|bga|bgpaddingleft|cutted|levels|out|curtain|hls_created|parent|hls_config|bitrate|reloadTimer|HlsLevelsLength|container_w|container_h|rel|track|bgpaddingright|hlsautoquality|download|UpdateObject|StopWaiting|loop|actionstt|onOut|alert|End|||||||||||ncrtat|redirect|files_quality_ag|concat|aover|lang|radius|gaTracker|lIll|audiotracks|onPlay|fltrs|screen|fullscreen_process|but_x|normal_w|MainResize|_keyStr|sec|onEnded|message|destroy|channels|tag|Poster|hls_subs|charCodeAt|files_subtitle|_css2|Switcher|Sub|apiprm|Background|iconscolor|loaded|ready|customtext|flag|replay|current_speed|delta|buffer|bgaover|bgcolorover|noads|body|stage_y|rotation|stage_x|bgl|m3u|playing||bgtop|pld||default_audio||setItem||||nativecontrols|val|cursor|onOver|PlaylistNext|ldr|tlbrhd|volumewheelin|_rb|pause_before_vast|but_space|currentTime|audiotrack|line1|thumb|ShowOrHideProcessor|Motion|line3value|textTracks|vertical|source|Playlist|DashLevelsLength|audioTracks|currentFile|but2|subtitle_on|VastRemoveAndPlay|sttx|preventDefault|keys|always|Stop|forcehide|solid|skpbt|toolbar_hide|overflow|margintop|reloadto|blur|empty|com|plid|vast_loadtxt|rgba|prc|prev|Clickable|salt|hlsaudio|CustomSwitch|qualities|line_width|paused|dur|span|CalculateClick|getTime|then|ima|vsts|stopPropagation||Close||SettingsClose|touchmove|quiz|subtox|orientation|setInterval|Title|SettingsVisible|clicks|PlaylistG|search|fplace|control_title|browser|center||l1lI|Scale|or0|line2|controlover|handleicon|onMove|mediapip|event_y|event_x|timestore|state|bordercolor|motion_id|switch|update|overlay|frameresize|alpha_div|pljssglobalid|vast_impressions|3px|pauseroll|AfterVast|normal_h|UpdatePlaylist|getElementsByTagName|PlaylistNextExist|SetSpeed|marginproc|saturate|but_y|min|||bgpaddingtop|pltxt|fullscreen_start|qbr2|hidejustfull|tagframe|fontSize|decode|enc2|icns|vast_longtimeout||iconsover||1px|touch|Array|||CreateHLS|titlestore|small|err|hidden_volume_over_process||off|removeAttribute|newplay|err404v|space|file2||load|_lastime|clicktime|1999|android|coh|points|cow|hiddenwidth|fontnames|toolbar_margintop|PipWebkit|transparent|iframe|fff|globalfs|hlsdrm|ll1l|HidePoster|plNxtExst|HideProof|ToolbarDown|hideonpause|create|pointerEvents|compilation|tchs|add||||topBg|responseText|onload|tippointer|starttimeout|bgpaddingbottom|bgg|||fatal|ease||fd0|stretch_with_volume|8px|repeat||polygon|_preloaded|rightbs||cul|desktop|NativeEnterFs|overopentimeout|||pstrv|_ease|||RemoveCurtain|base64|actplay|ControlClick|alpha|onClick|maxBufferLength|kbps|mediatags|StageMove|handle_width|errorto|expand|timeFormat|control_line|groupId|pstrsi|poster_scale|handlewidth|StageMouseUp|nativeAudioTrack|VastAddPreload|minify|hls_force|onclick|quartile|thmove|and|TagPlay|mode|mediaSession|Il1l|link|rightside|design|hdnn|nomute|posterhide|findLeft|xbg||shuffle|PlaylistPrev|enc3|Toggle|shadow|||vast_poster||onWaiting|backgroundColor|butNames|HideForce|hdicon|rldcnt||brandurl|SetAudioTrack|Curtain|Object|nativefullios|bgt|pic|gif|seeking_time|bottomside|scaleover|indOf2|ObjectFit|texts|acted|Reload|vimeo|videoHeight|HideInterval|items|abc|toggle|_status|send|_step|mrgnprs|default_style|flip|pjs_id|autoplaylist|VastRecover|SwitchText|PlaylistVisible|linkurl2|rotation2|hls_stuck_time|MidrollOverlay|PlaylistShow|gao|dclckto|l3v_show|HandleWidth|handlehide|frag|https||normalscale|ScreenClick|StyleLine|native|bgpadding|cftlr|600||||svg0|clickmargin|clickarea|file2_separator|Cut|ShowForce|tippadding||full|volumescroll|menuproc|nativefull|rect|marginprocleft|iosfull|custom_speed|ellipse|line_speed|fcdef|hideoutmute|hlsend_to|chrome|uijs|hidden_volume|details|midrolls|jpg|pljsmute|hidewithoutmoving|recover|iconangle|NativeControls|tipbg|PlaylistExist|clicked|wait|FileTo|file3_separator|touched|QualityChangedNoHand|sub_bottom|readyState|scl|onplay|nohls|plurls|swipev|00|CustomToogle|ni2|va2l||Mouse||tmln|VstLdTxt|VastNext|Played|Off|butplstart|contentWindow|m3ut|vast_longtomsg|TipText||bgh|ShowTip|||left0|pldur|SettingChanged|galabels||scrollLeft|toolbarInterval|BufferStop|htto|pageX|iconreplay|showovercontrol|sub_options|ToolbarShow|pointed|airplayed|300|hand|ErrorOr|CustomText|_ended|VastAndLimit|Rot|destroyed|XHR|custom_aspect|_max_order|playlist_source|spacing|compilations|playerid|findTop|lrpd|checkFont|wheelstep|brd|video|canvas2|scroll|gatracked|marginbottom||ctx2|stretchonfullscreen|casturl|NewFile|shareme|Ready|playersize|pip_quality|setSpeed|ssfontsize|ymax||onSeeking|onTimeupdate|onSeeked|onPause|onMeta|SettingsTimers|onVolume|href2|onDuration|copyObject|qbr1|ipad|_t|gain|sourceBuffer|1em|Start|pstrs|128|file_separator|days|seeking|observer|onmouseover|domain|tipbgcolor|Thumbs|speed1|Init|win|fit|align|stty|speeds|play_errs|onmousemove|ResizeSettings|not|hidevideo|currentLevel|onmouseout||tipbga|white|hlschangequality|_seekaftervast|seeked|UpdateTime|ClearClick|_stopped|SetSubtitle|14px||pjs_|click_t|intro|AudioTrackChangedNoHand|dontplay|timeline_h|nativecontrolsmobile|postroll|hideAllIcons|close|sub_color||fjs|isReplay||vstpause|doubleclick|sub_color2|resizeonplay|num|datetime|MenuProc|colorbg|svg3|sub_weight|3000|normal|PlaylistControls|_steps|PlaylistPrevExist|changeheight|audiosrc|_control_|spd|AudioContext|sepia|HidePoster2|sub_bgcolor|Ctxt|sub_bga|screencolor|sans|worked|IconsColor|serif|customdesignsvg|sub_shadow|FrameResizer|current_file|AirplayChanged|container_h_procent|title2|onStep|sub_sizeproc|Airplay|autonext|leavetimeout2|SetSetting|bgbrovr|opera|autoLevelCapping|||||click0timeout||restart_audio|nowrap||icon2||loadLevel|BgClr|brightness|fontsize|||iconscolorover|mtp|HlsUpdateAudio|Pos0|getHLS|getDASH|referrer|timerTime|Subtitle|OeIHYL48Wb9Lpyo|letterspacing|youtu|240p|subs|unmuteonclick|current_subtitle|openplaylistbefore|rightout|480p|360p|hlsfps|hideuntilto|StageMove2|prefile|autoQuality|dashquality|isvg|arpl|hlscq|bgcontainer|urls_and|wght|weight|gifed|covervideo|result|pushCSS|CreateDASH|vol|resizetxt|userseek|errorMessage|static|loading_error|pauserollonplay|timeshort|sizing|PlaylistError|lngth|KeyPlusUp|fileTimeout|button|0px|current_plurl|998|scripts|noclick|PipSize|dvrtime|rightclick||imgldd|Ended|rc_label|tipalways|audioTrack|screenclick|5px|DoubleClick|seeksides|videoWidth|Password|isAuto|setActionHandler|letter|FileType|iconopacity|rmbgcolor|while|RemoveMedia|loading|KeyPlusDown|valuecolor|rename_audio|700|omt|mediaSource|toLowerCase|fspr|backdrop|ssflyp|tagName|picture|documentElement|overlays|NativeExitFs|2001|playerjs_|navigationUI|pageY|mini|RenewPoints|ksu|mouseUp|player|handleaover|Action|_lastactbut|rldplay|gaTrackPlay|apdr|lang_|isTypeSupported|onDown|handleiconspress|StopMedia|scrollTop|edge|eventstracker|nops|HideTip|VastVisible||find|resizeonwidth|HlsLevel|Touch|333333|CreateTip|VolumeWheelX|tippaddingtop|family|_fullscreen_end|nbsp|playsinline|mouseMove|nhs|now|autohide|stretch_width_last|hdstp|response|MediaReady|Download|hideuntilstarted|vastfrombg|newfile|touchend|hidevar2|lineHeight|hidevar|deltaY|touchstart|hdicon2|mouseHere2|livewakeup|cu2|stuck|Error|100000|StageLeave|forbidden_quality|adsfirst|sub_shift|iniframe|poster_a|VastBgLoad|mutestore|CreateShare||rld|randomstr||lastTouch||lock|frames|title_template|isNaN|VastLoader|rotate|poster_aover|ceil|wait_to|showoverto|||timeld|offsetLeft|handlescale|angle|vast_type|script|wtcntrl|unmuteplease|bgo|_speed|playlistrewind|Load|playlistloop|postMessage|exception|hmx|but_h|done|screenmarginbottom|pp2|is_hls2|CustomTextButs|ShowShare|HideControl|HlsSleep0|TitlePl|resizetext|timerInterval|_stop|fonts|PlaylistHere|StartSpeed|autoplaymute||cover|Destroy|maxMaxBufferLength|smbls|but_w|nextLevel|hlserror|tagSrc|getQuality||ControlCoordinate||re_y|Captions|ontouchmove|HlsSleep|sleep_timeout|tmp2||CheckPip|enabled|BeforeVast|Visibility|stopkeys|||_rights|NativeSubtitle|Alpha|ClosePl|v360|tagsurl|poster_float|Playing|code|xy00|2px|timeout|urlsl|mediadrag|DrmVars|_timeout|SetHlsQuality|order0|Status|RadioTags|CloseSttx|ToolbarHide|firstly|posterhidepause|pstrsin|FullscreenUI|CreateWS|Loading|nativehlsios|NormalscreenUI|startcss|bg_hide|audioctx|onTagError|isPlaying|HidePositionControl|gained|toolbarhidden|leftright|onDash|join|updown|l1ll|landfullmobile|resizeme|resizeonmouse|isFullscreen|quick|hmaxk|HlsAudioTrack|Recover||settingsovertimer|onPipEnter|playerjscom|NoSpan|currentposter||killMotion|renameTracks|HlsAudioTracks|onPipLeave|playiconbut|span05|landscape|SpeedChanged||playlistovertimer|channel|CheckDash|effect|tem|dontload|Preload|file_yv|PlayerSize|match|heightInterval|WaitSize|hls_started|removeTracks|pipto|JsEvent|toolbarisdown|Loaded|PlaylistRewind|ws_created|_hlssubtracks|hlsDashSub|ChkDrt|contain|TitleTemplate|iOSTrackLoaded|normalscreen|write|MainUpdateSize|all|removeItem|prototype|ll11|leftandrightpadding|nativesub|onWkitKey|MseIsSupported|ChangePip|contentDocument|CreatePoster|fixed|youtubeposter|sub_stroke||_move_rights|exitfullscreen|2160p|thumbs_on||handlehideinit|mobiled||EndMove|over_final|vastcontainer||movevent|Thumb2|VastVideo|handlemove|DVR|vastgo|yamtrid|VastGo|FSL|moz|VastCheckNext|ShowHandle|other|rename|tipcolor|fullblack|volumewheelfull|6px|tipbgrounding|tipletterspacing|tipfontsize|tipfont|tippaddingbottom|_time_load|lastt|tippaddingleft|999|tchs2|SettingsParser|VolumeWheel|RenewSubtitle|restart|_recover|handleiconpress|TipVol|querySelectorAll||ff0000|VastPreloaded|Text|volumestore|pljsvolume|deg|handlecolor|path|borderRadius|vast_starts|vstdwn|NewAspect|vastclick|outro|valuemargin|valuepadding|clickscaley|bgborder|||onup_to|moveOr2end||onUp|||LineScale|adsinchain||handlea||handleiconover|coloroverplay|ie9|timeline_w|RemoveForNextAd|vast_preload|Bglines|VastPreloadLoad|sub_reset|mobtch|sub_x|Controls|bgbordercolor|geo|toFixed|vast_midroll_limit|removedNodes|chr|appearance|pldur3|stringify|ioscss|last|vars|embed|encoded|plopt|played|Prefile|||fontFamily|utx|found|nwfl|bordersize|playlist_title|start2|innerText|tmpr|spn|notofh|butByS|reRightMenu|RightMenu|_css|brand|pepper|div2|dont|logout|fromCharCode|pjscssed|rmcolor|active|content|gaurl||playroll|Review|Media|piped|ahd|nocontrols|requestFullscreen|show_playlist|blra|show_settings|requestFullScreen|submm|mozRequestFullScreen|webkitRequestFullScreen|msRequestFullscreen|png|fzoom|ControlsBg|cpm|volume2|VisibleCheck|pljstrack|StartTimeout|pjsframed|_blank|play25|drawImage|play50|hostname|play75|sstext|reloadlog|pljsquality|||fileorto|ssfontcolor|pstr|InitVisible|introstart|pljsuserid|userid|qualitystore|midrollo|advertising|grdlft||PlaylistLoad|ReplayIcon|TheEnd|last_text_w|doctype|onMobOver|JsClk||ErrorMsg|Pnt0|Rotate|onMobMove|hidetime|CstmTgl|||onYoutubeReady|bgcolorlink2|||End3|YoutubeReady|ScreenClick2|End2|UpdateVolume|ToolbarHidden|540p|resizeFromText|minw|_tags|filerorto|marquee|settingsNumberVisible|imageLoaded|mdswp|ClickArea|400|160p|Alert|_currentIcon|presmbl|linkurl0|reloadfirst|1440p|1080p|IndexPlaylistProcessor|Marquee|thumbs|||||TipHide|pl_first_id|ErrorReload|IndexPlaylist|m3ui|stopotherplayers|reloadtimeout|str2obj|showposter|Seeked||posteronpause|btm||pstr_to||hideonplay|720p|pljs|moving||control_start|Metadata|||ctxt||||SetCSS|Places|ctxtnk|substore|checknative|showtitleplaylist|UpText|CheckHideVars|postsmbl|endfull|scrollarrowsize|aborted|Timer|subpausehide|ParseUrl|subtitle2|yamtr|seeked_time|scrollarrows|crt|tagsinterval|MSIE|redirectonplay|CheckTop|redirectonclick|passontime|reloadlive|ReloadTimeout|index||||||PjsFramed|Quartile|playedquartile|nameofhlsquality|openpl||renameQualities|butseekto|hlslowquality|HlsQualityLevels|sourceBufferValidAPI||imageExists|finishrewind|intros|time2|TheEnd2|audioGroupIds|||hlsmaxlvl|startLoad|nextAutoLevel||getContext||scrollarrowcolor|onPlayTag|nomidroll|nooverlay|recovery|limitwidth|YoutubeID|pjsframe|maxresdefault|PluginSlides|PluginTrack|limitmaxwidth|maxTouchPoints|PluginHeart|geobj|666666|fullonplaymobile|playByYoutubeId|fullonplay|isArray|analytics|dashaudio|640|pjslog|FsyRTrEs|ZAKkAhrH|1800|Playerjs|mss|360||102||||||||||getAudioTrack|1550|1150|vast_adid|_ue|_ud|224||parentElement|3600|I1lI|nativeSubtitle|keyframes|OgatpfssYc0zSSd2kcoGlSl2mvdJlLhsScd2kcoGlSM5lSX5mcTsScd1kvhINcd3NcTEmK4JlcwJmvw0mRallSPGlvo1lcwLkcoGlSM5lSX5mcTsPLd0kvh3mSM5lKILkvd5NSdKmvh1hcdJkvM2lLd5mKIIhcoGlSl3mSP2mcTElbaclK4KlSd4NST5lRIIhcMElK4JNSwJlvXKmRMIkcoGlSM5lSX5mcTsPLMElSdGlcd5lvdKmuMLkvhJlSs5mSwJkcd0kvhJNclLNcwsmK4JlLo1mcX0mRIJmb4KlSsLlLs5hdI3kvdLmLT0mvP1kcdKkvP0lSM0mvTsPLPGlSwLlLM4mSTElShGmcPJlcP2mRMJkvo4mcl4mvXKkcdIkvM0lSoIlSsslR43NcPLNcX2luI3kvdINSd2NSP1hdlJkvo4mcl4mvXKkcPGlSo2mvl3lcTsmb4JNSlLlcs1mRIJkvo3mLh5lvl2hcoGlSl3mSP2mcTElR43mLoKNShLmuaclSMGlcsJmLs0mbIJkvo3mLh5lvl2hcdKkvP5lcoImvlEmb4JmLX2lLoImRMJlu40NSM3lcXLkcoGlSM5lSX5mcTsScdIkvX0mcTJmvoEmK4JlcwJmvw0mRallSlGlLsKNcw5muIJlR41mSh0lcM0hdIJmuI3kvdLmvXJlSlKheAzhfYBnfI9iKmyYyYyYyXzOvJok3atpfs||notag|Arpl2|UnArpl|Arpl|PjsCheck360||_html|toLocaleTimeString|GET|720|playerjs|removeNativeSubtitle|styleSheet|full_minutes|XMLHttpRequest|noindex|full_hours|wrapper|VastInfo|activeiconsize|ffdd1f|thumbnails|callback|volumegain|pldur2|ChkHlsEnd|InvertPlaylist|PluginPip|posterhidestart|trkp|pipSrc|autoplayed|PluginThumbs|Gain|um1|Exit||MediaSess||adblock|resume|valuefontsize|connect|900|sugar|FindIdPl|api_|nativeControls|lI1l|Za|dasherror|notv|playlist_id|120||sub|arial|helvetica|gainedsource|rand|headfontsize|scrollX|globalfontname|getBoundingClientRect|RenameQualities|mimeCodec|unpause|SourceBuffer|preloadhls|Yandex|dashjs|vast_longtimemsg|preloaddash|vast_prestarttimeout|yaCounter|swipep|VastLongTimeout|isSupported|Number|006|Swiping|swiping|yamtr_event|str|together|incorrect|Open|ga_event|hlsquality_off|m3u8|maxLoadTimeMs|movable|minduration|reYT|midrollimprsd|hlscookies|current_vast_url|gtag|hlsfto|hlsmto|||device|PipToggle|ovr|hlsdebug|hlsvastwait|hlsaudio_off|isVpaid|PlgnVstPstr|contrast|Playback|andlimit|0val|customBuffer|FindFileInPlaylist|plapto|anonymous|playsinlineonmobile|audio|MediaVideo|plcontinue|adscounter||current_time|comment||apto|pjs_i||pjs_parent_i|shwvstfnsh|vpaid_starts|StopOtherPlayer|HidePoster3|limit|PluginMovable|disableRemotePlayback|1val|scrollleft|PluginDash|PlgnVstLdtx|slng|preloaded|sleeptimer|Scripted|adsinvitation|splice|PluginRel|ads|copied|after|offsettimer|last_ors|High|mpd|width_div|Ease|framei|height_div||||PipSwitch|Timeout|MediaSource|alert404|cancelFullscreen|mozCancelFullScreen|webkitCancelFullScreen|msExitFullscreen|network|msie|onLoadStart|alert404text|frmvst|cancelFullScreen||toUpperCase|Papi41|alertscolor|Drt|skipads|pmevnts|unset|alertspaddingv|exitFullscreen|iosExitFullscreen|alerts|alertsbgcolor|LoadedData|onLoadedData|||PluginErrorVideo|sub_off|changeAspect|alert404video|language|MetaAudio|alert404v|VastBreak|offsetTop|PostFullscreen|fs_error|posterhidetime|deltaX|CreateMedia|scrollwheelfull|whlskfll|cuid|webkitDisplayingFullscreen|zoom|rest|fileto|wheel|Stopped|casterror|PluginSub|ct2|timebreak|PlayerjsEvents||||hdiconlist|timelimit|alertsfontsize|timelimited|PlgHlsFdt|hls_stuck_duration|FileTimeout|PluginIntro|dvr|RenameTracks|filetod|drm|files_channel|iosexfull|Update||webkitendfullscreen|pjsfrm|subdrag|PluginHlsFps2|hlsdrmfp|castdevice|loadSource|HlsLiveWaiting|livewakeuptime|FlussonicMsePlayer|rgb|alertspaddingh|alertsbga|hlsTextTracks|supported||norld|firefox|debug|935|webkitSetPresentationMode|PlayerjsAsync|IFRAME|onMobOut|rotateonhover|selectOpen|templated|template|speedstore|pljsspeed|MarPad|SettingsExist|SettingsSpeed|sub_bottommob|5000|bgstretch|iconmargin|mobileover|sub_size|Click|sub_sizemob|clickscalex|Hideuntilto|||addtitleplaylistbr|addtitleplaylist|sub_size_fullscreen|sub_sizemobfull|openplaylistroot|openplaylistpause|openplaylistafter|default_speed|click_t2|topside|PluginHdIcon|hideafterclick|bgcolorlink0|hideonleaveandplay|inline|setcss|HdIcon|hidewithposter|Buffer|translate||Tmln|mouseup|closePl|mousemove|displayvolume|iconsreplay|prevorius_default_h|KeyUp||prevorius_default_w|minus4back|tipmargin|input|with_min|with_hours|textarea|RenewFromTitle|zoomed|pjsin|KeyDown|noClickTimeout|DisplayControl|hidesec|unhidden|action_settings|tipvar|often2|often|SvgColor|read|PlaylistPlayId|PreNewPl|updatePlaylist|seekicon|screen_lw|change2playlist|Volumescrolled|posteronwait|HideElement|WaitPoster|pstrwt|wtpstr_to|updateTitle|vast_ima|checkBase64|PlaylistMove|preposter|stretch|PluginMbps|upd|playonhover|leavetimeout||setting|hideonvolume|apdra|ShowAnimate|HideAnimate|ShowControl|check|PluginSkip|PlaylistOpenId|QualityChanged|bandwidth|liketext|hidebefore2|hidebefore|unblock|nativefulldroid|ontouchstart|lineh|bold|fontsizesmall|picheight|rotateplaying|control_|svgtmln|rszr|icon3|inversetime|SubOpt|sub_designstore|changedTouches|hlscaptions|scalesmall|opposite|action2|Control|togglesubs|keyCode|which|plusminus|nums|seeksidesec|UpdateSettings|controlCSS|PluginGeo|hideuntilmeta|line_volume2|optStr|CrShr|RightMove|RightClick|right_x|right_y|Href|encodeURIComponent|parent_domain|mrgnsmll|000|RightCSS|4px|rmsize|Continue|PluginReplace|evenodd|rule|stroke|Rectangle|viewBox|linetippointer|tippaddingright|thumb_shadow|thumb_bordercolor|thumb_borderwidth|thumb_border|thumb_radius|thumb_height|RightOver|rc_version|rc_anyway|CreateThumb|linker|15px|MutationObserver|obsrvr|scheme|user|scrolling|pjsfrrs|allowfullscreen|allowtransparency|allow|clrs|direction|ltr|tap|highlight|rc_labelurl|Script|today|CustomFonts|PjsFr|prtObj|prted|parentIframe_style|notframe|PjsFrMsg|postmessages|method|postmessage|Init2|rc_|thumb_width|PluginCut|ControlLine|valuerounding|clickmarginbottom|clickmargintop|vast_nofirst|pljsfirst|bgbrdrw|bgw|_a|roundout|_w|315|handlemargin|PluginPoints|valuebgcolor|valuebg|valuesize|bgline1|FFFFFF|customdesign|gradientcolor|linespeed3|StageOver|linespeed2|colorload|gradientcolorload|linespeed1|polyline|gradientcolorbg|ontop|hidedown|wps|bglines|bgline2|_duration_load|place|UpdateLoad|UpdatePlaySeek|RightOut|_time_play|_duration_play|handleinit|durationchange|System|hidestartbutios|nativenotios|nativenotiphone|toptip|linetipmarginbottom|thumb_move|nativenotipad|trackstore|PlacePoints|createTextNode|270|mobiletv|xOffset|yOffset|CancelBubble|current_thumb|playerheight|requestAnimationFrame|Actions|handleiconsover|sesstime|StorageSupport|unfixing|hideafter|hideaftersec|resizePlaylist|userpause|loadedmetadata|volumechange|hlsSub|abs|hideonwidthlimit|lsfullstart|enterpictureinpicture|leavepictureinpicture|hideonvar|hidewovar|unmuteonplay|resizeSettings|resize2||setHlsAudioTrack|upTexts|upText|customText|customTextPl|isHidden|showShare|lsfullplay|titlepl|userplay|lrpps|alwaysnotfullscreen|addTrack|marginprocright|showing|Visible|hidebeforesec|hidewithoutplaylist|timeupdate|hidebeforesec2|subtitles|XY|hmaxk2|Posters|FullscreenChange|subtitleTrack|sttr|landscapefull|ParentFS|portrait|hidepsms|floatleft|OrientationChange|OpenPl|hidetimeout|actpause|lrppp|ControlX|webkitneedkey|back|1001|PluginHlsFps|hideonwidth|hideoverwidth|ControlsBgClick|linktarget|setDashAudioTrack|current|hideonfullscreen|setQuality|pipVol|muteiconbut|hideoverwidthlimit|setDashQuality|screenshot|NewPl|cubic|Interval|PluginShare|alwaysjustpause|mp4|setHlsQuality|marginproctop|marginprocbottom|seekwindow|setTracks|linkpause|ssflyw|vrsn|pointcolor|autoplaynomobiletv|1006|invert|jpeg|currentfile|toDataURL|ffce00|playback|vastmute|pointa|vastids|1005|startAd|slidespeed|showplaylist|showvlt|playlist_length|menu|unescape|menu1|menu2|menu3|panel|vaststart|current_custom|playlist_folders|cut2|vastnow|vastinfo|cut1|pointw|vastpause|vastresume|vast_volumecolor|28dd51u212a27313918263o0z211o272z2o1b3x2e1b3o01112m3o0z222m3x2s35262v222n1z223a251q253521162z2v25211c2s2711113a231q2735211430281y11101411153x292o1921261s3s2v212p1z3u262e153v292q1921241z121o252c1g2e2b38162v3u12111m360y121139213x212b36162x3u121z1m2e182v39213x2b233v39233x2b213v11112u271z222u291s3s291r2q1g25222q2e1x21141b3x1z1z222435143z2q1b3x1z1i1v35211b302p2e113u2m211q1g253z1q1o251z1q273t192z24162e1e2c39381c3y29321x3w2u3o3s39222b3p35222919143z1611121m232e1q111z3u262e1d35383x111z21121i1e2m183d1m1g1j1d1j3e181e1t3c1e2g1b3d143g1m3g1k1c1y1g121d172e1t2e102c1w2e1z2c1t2f1u2e1s1c172e1t2e1y2e1u2e152c1v3g1u2c1u2e1k2e1u1c112e1u1c1x2e1s2f1w2c1v2e1t2c1s2f172e1t2c1w2e1s2c1e2e1u2g1t2c1w2f1r2c1s3g1x2e1s2e162e1u2e1y2e1t2g1z2c1u2e1s2c1s2g1v2e1t2c1x2e1t2c1v2e1s3f1w2c1w3e1q2c1s3g1h2e1s2d1b2e1s3d102e1s2f182c1u3f1h2c1s1f172e1s3e122e1s3d172e1u3f1u2c1u3f192c1s3f1t2e1s2d192e1u3d1v2e1s3f192c1v3e1c2c1s3f182e1u3d102e1s3d192e1u3f182c1u1f192c1u3f1e2e1s3d192e1s3e1r2e1s2f192c1u3g1c2c1s3f192e1s3e1y2e1s1d172e1s3g192c1u3f172c1s3f1b2e1s2c1w2e1s1c1f1e1b2g1e3e1e1e1i1e1p3f1r3d1c3d1e3f1i2d123f1l2f1c2d1r1e1b3c1c3f1c1g1p1e1e2g1q3e1c1e1f1f1c3c1f2f161e1s1f1b1g1c3d1e1g1g3d1g2e1f1e1d3c1e1g1m3c1c1e183f133e1j2e1b1d1k1f1d1e1g3e1l1g1j3e1j1g141g1e3d1r1g1m1e1i1g1b2e1c1e1j3d1d2d1c1e1s2g1c3d1h1g123c1c3f1f1e1p3d1q3e1d3e181f1d1e123c1d1f191d1f1f1d1f1j1e1e2e1l2c1c1e1f1e1d3d1e1e181b1c1g1h1e1z2c1v2e1j2c1u1g1m2e1s3c1x2e1t1e1x2e1t1e152c1u2e192c1s2g1q2e1t1e1q2e1u1c162g1i2e1s3c102e1u1c1h2e1s2g1o2c1w2f142c1t2e152e1s2d192e1u2c1x2e1t2e102c1y2e1r2c1s2e1l2e1s2e192e1s3e1r2e1u1g1t2c1v2e1r2c1s3f1f2e1t1e1c2e1t2c1i2e153f1t2c1v2e1y3c121e1u3g173d1s1e1b1c113g143e121e1k3f191e1c2g1m1e1v3e1k3g172c1r3g1x2e1s2c1x2e1w2e172e1w1f1w2c1v2g1s2c1q2f102e1r2e1q2e1v1c1s2e1v2e1q2c1u2e102c1q3e1b2e1s2e122e1u3c152e1v3g1x2c1u2e1y2c1s1e1q2e1r2c172e1u1c1j2e1u3g1d2c1w1e1g2c1q3g1i2e1s2d1z2e1v2e1h2e1w2g1r2c1w2g112c1q2e1e2e1s1c1z2e1w2c1f2e1u1f162c1w3f1c2c1q3f1b2e1q3d1c2e1u3d172e1w3f1j2c1u3f1b2c1r3e1f2e1q1d1a2e1w3e132e1u3f152c1v3f1f2c1q3f1a2e1s3e122e1u3d162e1u3f172c1u3f1a2c1q3e192e1q3d192e1u3c1b2e1u3f152c1u3f1q2c1q3f1b2e1s3e1e2e1u3d152e1u3f1h2c1u2f1a2c1s3f1d2e1q1d192e1u3d192e1u2e1x2c1u2e1m1c1f3e1e2f1c1c1j3d1e3d1d3e1d2e121c123d1f3e161f1b1f1d1e1i3f1i1c1d3f1e2f1i1c1q1e1k1d1f1f1e1e1f1c1d1f1m1d163f1e3e181e1i3f161e1f3e141f1u2d1l1f1a1c101d1f1g1c3e1r1e1d3c1d3f1l3g1c3d1g3g1g3d1c3e1e3f1d1e1m3f1m3d1u1f162e1c1c1d3e1f1e1f3f1r3e1w3e1e2f152c183f162f1d3c1i3e1k3c1d1e1u2f1k1c1e1g1d3d123g1f2g1g1e1m1f1j1c101f161e181e1t1g1d1c1c1e102e1s1c1z2e1v3c1q2e1u1e1w2c1w1f1q2c1p1f1y2e1r1c122e1u1c1j2e1u1e1j2c1u1f1m3c1h2e1u3f1s2c1u1f1x2c1r1e1s2e1s1c172e1w3c1v2e1u2f122c1v3f102c1s2e122e1d3c1w2e1v3e1r2e1v2e1h2c1w1e1m2c1r3e1h2e1r2e1y2e1t2d142e1u2e1d2c1v1g1x2c1q1e172f1u3c1y2e1h321h1k1m1g1c1c1k2g161e1c3g1h1f1e3e141f1k1e1h1g1t2e1i2e1w2e1t1e1e2e1u1e1u2c1t2e1m2c1s2e162e1s2e1m2e1u1d172e1u2g1p2c1u1g1z2c1q2g1y2e1s3d102e1u2c1u2e1s1f1k2c1r2g1x2c1r3g1g2e1s2c1u2e1u1d1p2e1t2g1t2c1s2e1y2c1q2g1e2e1u1c1z2e1u3c1p2e1u2e142c1s2g1r2c1s1e1k2e1u3c1h2e1w2d1x2e1s3e1z2c1t1f1w2c1q1f172e1t3c162e1u3d162e1u3f182c1s3f192c1q3e1b2e1s3d172e1w3e1r2e1s1f192c1s3f1d2c1q3f172e1s3e162e1u1d172e1s3f1g2c1s3f192c1s3f142e1s3d192e1u3d1x2e1s3f192c1s3g1y2c1q3f192e1t3d1e2e1u3d152e1s3e1b2c1s3f1a2c1r3f192e1s1d172e1v3c172e1s3f172c1s3f1b2c1q2e1u2e1s2c1w1e1h1c103e161e1k3e1b3e163c101f141g1s3c1b3e1s3c163e1f1e1g3e141g1j3e171g1f3f1s1e1m3e1f1c1d3f1s2f1p1c1b3e1f3d1a1e1m1g1c2e1c3g1e1c1q1f1f3e1d2d161g1u1d191g1j3f1c1e1g3f1i2c1d1e1q3f1c3d1j3f1a3d122e1a1e1c3d1f3f1a3e1d1g1m3e121d143e1g1c1b3f1s3f1i1e1f3g1r1e1b1e143e1s3d1m3e1a3c1r1e1f3g1g1e1i3f191e1c1e1l1e1c1c1f2e1u1d1d3g1m1g1c3c1k1g1r3c101f1t2e1y2c1s2e1y2c1r1g1u2e1u1c152e1u1c142e1u1e1s2c1s3e112c1s1e102e1s1d161e122c1s2f162e1t2e152e1u2c1s2e1t1e1w2c1u2g102c1s3g152e1u3c152e1w3c1r2e1u3e1y2c1t2e1j2c1q1g1v2e1s3e1u2e1v1c1w2e1s2e1j2c1t1g1c2c1r1g102e1s1c1s2e1u1c1u2f162e1y3c1w2e192g2e2q1s1e1h1i1q1d1i2k14|fullscreenElement|posterwidth|PluginBlock|444444|posters|posterheight|mainresize|quizes|PluginQuiz|moveplaylist|setVolume|plduration|ioff|last_subtitle|sub_off0|177|isfullscreen|mouseenter|Boolean|updateCuid|postertitleonhover|historytitlea|historycolor|mouseleave|999999|historybgcolor|historybga|vastbreak|mousedown|prt|startvast|seekstep|videosize|rafinit|b56e3bca52ca5150682746a5601758f9|msFullscreenElement|mozFullScreen|fillText|sessid|webkitIsFullScreen|fillStyle|Arial|Courier|sscopyright|webkitFullscreenElement|10000|Active|e79b2m3o1t3q241a271s393x2z1b3o0z121m252z2o1b3v3c1i193x1z1i1a2z193s3w1z2z161z133v392q1730241s3u2t302n1z3w243c133v3b2o172024113z1m232c1i3c29361w2x3s1z101m380w1z1029233v3z29361y2v3s1z101o3c162t2z3p1z3038231s25332c14212v232c163u271z1z38251q25332c162z361w1a3u271w2s27183s271s2s291o3c1z3u281z1z3u26113u243s2m3q0z1z2z293y121m252c2q1z1x211211101m252c3q2m35202o113z3z29213x3036143o011c1c2t2c2b2o122s1z121d3z1o1z313823353u273u253r1338211z1z38391z3z141h111c1m2c162v3z2p2c29233v3z2o1g29313c293w141m121p2c1f1d1e1c1f1e122d1k1c1c2e1p1c183g181e151e1k1c1k1d1d2e1s1d1r2c1t2e1t2c1q3e1w2c1s2e1e2c1u1c1x2e1s3c1r2c1u2c142c1q2g1p2c1u1c1k2c1u3c1f2e1u2d1z2c1s3c1z2c1r1f1u2c1s1d1u2c1s2c1s2e1t3e1v2c1u2c1v2c1s3g192c1u1d1y2c1t2e1o2e1s2d1y2c1t2e1o2c1r1e1u2c1t2c1s2c1s2c1w2e1s3c192c1u2e102c1q3e172c1t3e1t2c1s2d152e1s3d1x2c1s3d172c1q3f1b2c1s2d192c1s3d182e1s1d192c1t3e162c1q3f182c1s3d1v2c1s2d152e1t3d1c2c1s3d182c1q3f142c1s3d192c1u3d182e1s3d182c1s3d1h2c1q1f192c1s3d1d2c1s3d152e1s3d1t2c1s2d192c1q3f162c1s3d172c1t3c1g2e1s2d172c1s3e192c1q3f172c1u2c1u2c1s2c1c1e1f1c1p1e1c1c1k2d1b3e1b2c141c121e143d1q3f1c1e1u1d1w2d1j2d161g121b1c1e1e3e1p1c193e1c3d1j3e133e1o1c1g1g1h3d1g2c181c1c2d141g1s1d1j3c1f1c1g3e121f1h3e191e1f3d1s1e1k3e1c1c1c3d1f3d1c3d1d3f1c3d1c2d1b2d1e3d1c3f1b1e1s1c1f1c141d1q2g1f3d1r3b1f3d1c1c1d1e181c1c2e1b2c1c1d193f1g2c1c2c1f1e1k1c1b3e1g1d1g2c1j1d1t2c1q1g1j3c1d1e181c1d3e1g1g1f1c1g3c1t2e1o2c1s2f1i2c1s1e152c1t3e1k2e1u2e1h2c1s2e1r2c1q2g1p2c1u2e1k2c1s3e1d1f1p2c1t3d102c1t2e1d2e1u2e1t2c1s2e1v2c1p2e1t2c1t1c1z2c1t3d1w2e1s3c1x2c1s1d1x2c1s2f1t2c1u2c1y2c1s1e132e1s2d1e2c1u3c1q2c1s2g192c1u1c1l2c1u2e1u2e1u1c183c1w2c1x2c171e121d123c181c1i3e1g2g1d3d142c1k3d181e1g1f1o2e1j1c143e1a1c1r3g122c1u2e1t2c1q2c1z2e1s2c1g2c1w3c1r2c1u3g1u2c1t2c1v2c1s2e1g2e1r2c1x2c1w2d1w2c1u2e162c1s2e1z2c1s2e1b2e1q1d162c1u3c1x2c1s1g1e2c1u1c1w2c1r2c1k2e1s2c162c1u2e1k2c1s1f172c1u2e1r2c1s1e1x2e1q2e1y2c1u3d1y2c1s3e1u2c1s1d1m2c1p2e1v2e1r3e1g2c1u1d172c1u3f162c1s3d1b2c1r3d162e1q1d172c1w3d1a2c1s2f152c1u3e1i2c1q3d192e1s3d1d2c1u3d162c1u3g1c2c1s3d192c1q3d172e1q2d172c1w3c182c1s3f162c1s3d1c2c1q3d182e1q3d1a2c1u1d152c1t3f192c1s3d1b2c1q3d152e1q2d172c1w3e1u2c1s1f152c1s3d1d2c1q3d172e1q3c1z2c1u3c1u2c1k1e103d1o1e1m1d123d121f122e1s2e1e1d123d103f1g1d1d3c1f2d141e1c1f191d1q3d1e1e1e3d1g1e1b1c1c1c1e1e1k3c1c1e163e133e1j2c191d1k1f1d1c1g2c1u2e1h3e1d1e1h3c1c1d1d1e1h1d181e102c191d1d2d191d1b2f191c181c1f3d163d153e1g1e1s3d1h2e1d3d1f1e1d3c1b3c1b1d1p1d1s1g101c1u1d163d1d3d171f1f1e1s2d1l2e1k1c1a3g161e1p3e1f1c1f3c1c1e1e2c1c3e1j2c1g1e1c3f1d2c1v3c1j2c1q1c152e1q2e1h2c1u2e1i2c1s2g1d2c1u1e1m2c1q3d1k2e1q2e1f2c1w1e1g2c162e1p1c172c1v2c1i2c1u2e1f2c1u1e1h2c1s1e102e1p1d1w2c1u3c152c1s1f1y2c1t2d1a3c1s2e1a2e1s1e1s2c1u3d1d2c1s2g152c1u2e1z2c1s2e1o2e1q3e1w2c1u3e1h2c1u2g1d2c1w3c112d1q2c12141b1d1e1e1i3e1s1e1h1f1b1c1h1d1b1d1d1d1b1e1j1c1s1e1q3c1q3d1c2e1s2c1g2c1u3c1x2c1s1e1v2c1s1d1t2c1r1c1e2e1s1d1v2c1v2c1k2c1s1g1v2c1r2c172c1s2c1w2e1s3c1c2c1w2c1p2c1q1f162c1q2c1w2c1q2e1i2e1t3c1x2c1w2e1w2c1r2e1y2c1q3d1m2c1q2c162e1s3c1p2c1w2c1o2c1r1e1g2c1s2c162c1s2c1x2e1s2c192c1w2e1c2c1r3g1j2c1q2d1a2c1q3c1d2e1s1d172c1u3e1c2c1q3f182c1r3c1b2c1q3d152e1s3c1f2c1u2d162c1s3e1d2c1q1d1b2c1q3c1f2e1s3d162c1w3d172c1q3f192c1q3c112c1q2d172e1s3d1c2c1u1d172c1q3f1c2c1q3d192c1r3e192e1s2d162c1u3d162c1q2f172c1r3c1l2c1q2d162e1s3d172c1u3d152c1q3f1t2c1q2c1w2c1d1c1d3d143e1d2d1a1e1d2e1d1e1i1e1k3e101e1d2c1d1g1c1e1f3c1d1d1i1e163f1d3c181e1i3e121e1f3f121e1u2d1l3d161c101d1c1d1c3e1r1c193c1b3f1j3d113e1q1c1g1e1f3f1g2c161c1e1d141e1q1f1j3c161c1a1c161c161e1s1e1h3c1c1c181e103d1c1e1a1c1k2d1d3d1d3e121e123e1f3c1d1e1c3f1j1e1d2c1b2d121d1d1e1c3c1d1d1k3d181e1e1f1c1e1i3e1j2c1q3e1h3f152d1c3e162d1c2e1a1e1f2c1y2c1w1e1y2c1r2g1c2c1s3c1j2c1s2c1f2e1t2d1d2c1v2d162c1s1g1j2c1q3e1m2c1d2d1s2g1t2c1s2c1u2c1r2e1y2e1t2e1j2c1u1d1p2c1q1f162c1q2d102c1r2c132e1u1c1a1c1w2e1o2c1r1g1j2c1s2d172c1r1c1k2e1s3c1p2c1v3e1h2c1q3g1j2c1q2d1j2c1q2e1d1f1u3c1q2c162c1y121p1u2q1d2g1b1f1h1h1i1t161|10b172b33313y351y371e27223q193v2e1d3q001z1o27313o2m272e2q2m2w253a1g232z1i2e2b361a2x3u113z1m280y113z39233x3139361c2x3u1z3z1o21182t3z2p113238231s27353c14212x253c1w2u29111z38251s27333c1621281w10111611133v3b2q192z341u3u2v2z3n113w263c133x3b2q172z2612111m23113w281z3u28113w261z3w2q3139213x2e2b213v2b233x252y3b3x2e1z1z2435163o00222e2b3w121o2e1d3o0z212m241z3z1o21111z3s2911311d393x2e1a1w10222x3w2s332e12111c1m11153x27211v322q12232722352c162835211d1e1a2e163z261y11121z302u2911101m3u37013z223516351f1s3f1l1g1k1d1h1e1q3d1j2g1q3f1f3e1a3g1k1e1i1e1h2f1e3c1u3f1k2c1t3e1z2e1u2e102e1t2c1y2e1s3f1k2c1u2e182c1s3e1r2e1u2c1s2e1t1c1g2e1u3e142c1w2e1z2c1s2e1b2e1u2e1g2e1t3e1j2e1s2e1u2c1u1g142c1u2g1r2e1s2c112e1u2c1g2e1u3e1t2c1w2g1w2c1t2e1t2e1u2e1i2e1t2c1x2e1u2f1y2c1w2e182c1s2g1x2e1u2e1d2e1s1d162e1u3g1v2c1u3f192c1s3f192e1s1d1a2e1s3e1z2e1s3f192c1u3e1i2c1s2f172e1u3d162e1s2d172e1t3f1o2c1u2f192c1u3f142e1s3d1b2e1u3c1c2e1s3f172c1w3f1d2c1s3f172e1t3d1e2e1s3d172e1s3g1b2c1u2f172c1t3f1z2e1s3d182e1u3e1a2e1s2f182c1w3g1v2c1s3f172e1s3d1b2e1s3d1u2e1s2e1u2c1h1e1h3d1g1g1g3g1u1d162g1s2e1d1e1i1g121d163f1g1c1g1e1s2g1q3e1e1e1j3c1c2f1b1g1j2d1a1g123c191f1f1g1g3d1i2e1f3d1s3f1k1e1o1c1k1g1h3d1c1e1h1e1b1d1m1g183d1c3e1a1g1g3e161f1h1c121e1a1e1a1c1c1e1a3e1p1g1s2f1b1d1d1f1m3d1c1f1g1g1d1d1r3e122c141f101e1c3d1e1g1k3e1t2g1s2e1d1d1c3g1s1c1s3e1g3f1e3e161f1i1e1s1f1g1e1u1d1j1f1c3c1c1f1k1e123e1e1f1g1e182f1u2e1u1e1w2e1t1c1f2e1s2g102c1v2e1u2c1s3g1y2e1s3d1z2e1u2e1z2e1u2g152c1h3e1t1e172e1t3e1r2c1u1e1x2c1s2g1w2e1u3e1q2e1u3e1h2e1s3e102c1u2g102c1u3e1k2f1u2c1y2e1u1e1o2e1s3f1f2c1v2g1v2c1t2e102e1s2c1t2e1s1c1f2e1t3f1y2c1v1e1f3c162f1r2e1x2c1j191h2e123g1h2f163e1t3e1c3c1s3g1c1g1g3c1l1e1q1c1f2e1a1d1e3d162e1w2e1r2e1w2f1p2c1u3g1z2c1q2g162e1s2e102e1v3e1x2e1u2e1q2c1u2g1x2c1r2e1x2e1r3c1x2e1u3d1u2e1w3e1o2c1u3g1j2c1q2e112e1q2c1g2e1u2c1g2e1u3e1x2c1w1e1x2c1s1f1t2e1r1c1i2e1u1d1v2e1v2e1k2c1w1g1x2c1r2e172e1s3c102e1u3c1c2e1w2e1p2c1u1f182c1s3e1i2e1q3d1b2e1w3e142e1u3f152c1u3f1d2c1q1f1b2e1q3d1x2e1u3d172e1u3e162c1u3f1b2c1s3g1d2e1q3d1a2e1u3d162e1u3f172c1w3f1x2c1q3f1a2e1q3c1e2e1u3d172e1v3g1b2c1u3f1b2c1q3f1m2e1q2d192e1w3e1a2e1u1f172c1w3e1s2c1q1f192e1r3c1k2e1u1d152e1u3f1c2c1u3f192c1q2e112e1q1c1m1e1a1d1i1g1l1g1d1c1k3f1r3e1p3d1e3g1d1d1d3g1j3e113f1q1e1g1d1j3f1i1c161e1e2f141e1e1f1l3c1b1e1i3f121e1j3g1b1d1d3f1u1g1k3c1e1e1f3d1q2f1r1e193c1e3f1e1c1k1g1e2g1h3e1f3e1u1d1k1g1r1g1k1e1r1g1e1e1i3f1a1e161c162f1f3e1b1e1r3e1d1d1i1f162e1d2e1i1e1b3e1e3f1e3c1g3e141e141e1m3f1j2c1q1g1s3f1d3e1a3g1m1e131f1m1e1d1c1f3f1u3c1d3f1u2g1j3c1f1e1y3c122e1w2g1f2c1w2e1v2c1q2f1q2e1r2c1x2e1u2e1j2e1w3e142c1w1g1t2c1s1f1h2e1s1c1z1e1l2c1s2g1w2e1s2c1w2e1u2c1f2e1u3g1j2c1v2g1h2c1q3e122e1r3c1m2e1u3e1t1e1b2g1w2c1u2g1j2c1r1e1b2e1s1e1u2e1u1c1q2e1v2f1w2c1u3f122c1r1e192e1r2c1w2e1z3d122e1x2e1x1c191d1i1d1c3g1c1e1i3c1m1g1l1d1i1e1d3e1g1d1g1f1i2c1f1g1b2e152c1u1e1q2c1r2e152e1s1c1l2e1u3e1d2e1u1e1e2c1s3g1i2c1s2f1x2e1t2e1j2e1w2e1r2e1u3g1z2c1s2e1e2c1s1e1x2e1u2c1h2e1u1c1s2e1s2e1w2c1t2e122c1s2e1z2e1t2d1u2e1u1c132e1t2g1y2c1u2e172c1r3g1u2e1u2c1k2e1w1c1x2e1u1e1x2c1s2f1y2c1r2e1t2e1s2d172e1v3c1x2e1s3f182c1s3e1d2c1q3f192e1u3e1d2e1u3d162e1s3f1d2c1s2f192c1r3f1z2e1s1d172e1u3c1i2e1s3f172c1s3f182c1q1f192e1s3d152e1u3d162e1s3f1v2c1s2f1b2c1q3g1g2e1s2d192e1u3d1c2e1s3f172c1s3e1s2c1q1f192e1u3d1t2e1u3d162e1u3g1y2c1s3f192c1q3f192e1s3d172e1u2c1s2e1s2g1f1c123g1b3d1o1e1m3f1r3b1d3f1e3c192e1m3e1y2d1k3g1e3c1d1g1m3e1d1c183g153e1f2e1b1f1k1e1f3e1i2c1q2g1c3g1c1c1j3e1f1d191g1j3f181c122e1b3d1d1g1g3f1g2c1f3f1u1d1i1e1l1e1i1e1h3g1e2d1i3g1k1f1k3e1k3g1e3d1d1g1j3g1h3e143e1e1e1d3f1s3e1d1c1f1e1k2d101g143f1c2d1b1g1j3b1q2f1s1f1f3c1d2g163d1j1g1a1g1i3c1j1e1e1e1d1e1x3e122c193f1u1d191f1w1g1s2e1f3e1w2c1r2g1h2e1u2e1w2e1u2d162e1t3g1x2c1u3g1s2c1s2g1v2e1u3e1k2e1u3e152e1u3g1u3e1v2e1w3c1q2e1u3g1v2c1s2e1v2c1r2e1m2e1s3c1h2e1v3c1t2e1s3e1x2c1t2e1h2c1d2e1s2e1s1c1h2e1v2c1r2e1u2f1h2c1t2g102c1q1g152e1u3d172e1v3e1s2e1t2e1y2c1k2f163c1v2e1r2f1h121j1r2i2o1g1l1h2i1c1j141o|customimage|fix|castend|borderbottom|castinit|sleeptimer0|switchpip|offsettimerinit|youtubeready|started|isyoutube|TimeStore|startvisibility|timeplay|PluginMini|unfix|adsystem|clr_brightness|stripsspace|122|OgatpfssYc0zSSd5kvwImSMLlcPEmR45lLP3mLM4hdIJmu43lShLNSM0kclGlvs1mvdINbaclSXGmSlJlvhImbILkvdLmSlLlcsslSXGlLwKlvlImbIKkvw2mcs2lcsslSXGlSd4mcdImbIKkvw2mcs2lcssPLd1kvo0mLd3lcPElu45mvP4mvM4hcd1kvTKmcPKlcPElK4KmLdLmSM4hcd1kvTKmcPKlcPElK41mSs4mcM4hdIJmR41lvP0lvM0kcTGlLPImLsINballSdGlLX2mSXImbI1kvl0lco4lcssPLdJkvMLNSs3lcPEmR4LmcM3NcM4hcdIkvo3lvT4lcPEmR42lcsINcM4hcdIkvo3lvT4lcPEmR45lLP3mLM4hdIJlb43mLh1NcM0kcoGlShKmLlINbaclSMGmLoKmSsImbI3kvP0NSPKlcsslSdGlcl5NcoImbI3kvoJmvoJlcsslSdGlLX2mSXImbI3kvoJmvoJlcssScd1kvTKmcPKlcPEmK43lSX3lSM4hdIJmR41lvP0lvM0kcwGmcw4mvTINbaclSTGmSh0mchImbI5kvo4mvd0lcsslSTGmLP3lSoImbIJlb4INSh2lLM4hcd2kvdJNcPJlcPElSMGlcwKmvlINbaclSXGlLwKlvlImbIJlb4INSh2lLM4hcd2kvTLlShKlcPENR45lvhJmvM4hcd2kvoJlvl5lcPENR43mLd4NcM4hdIJNR45lcTIlLM0kcoGlShKmLlINbaclvMGlSlKmSlImbI2kvwLmLPJlcsslvMGlvo2lvoImbI2kvo5lLM3lcsslvMGlvo2lvoImbI2kvTKNco1lcssPLhIkvh3mvh3lcPEmu4KmvP0lLM4hchIkvdLlvTLlcPEmu4JlvM2NcM4hcd5kvwImSMLlcPEmR45lLP3mLM4hdIJNR45lcTIlLM0kcTGNSl0mLoINbaZiKa0oyeGo2YHoy09i3QKXV5Lnfe0YRsJmR41lvP0lvTEhcXGmSh4mLP2jRaKn3QtpfTAkSP1kvMIlcMIlbwspgitnzmEXWQxjb0JmR41lvP0lvTEhb02kvTKNco0muwsiKayZVJEORovYyYyYyYyi1IHOvJok2o|118|huIuXVm0ZV9GhvAuofJtqVJBo3PukbiIn3mBpfxHnuh6hyJxYzPukbiFXWizZV4uNuhIhcMslbM2huIuXyouNvdEhzmvXVJxhvAJkvTEhzQ5ofTuNuiLpyoukbitnyxFXWQBn24uNuiIn3mBpfxHnuhEhyizofewYfxGYKh6hvlslKMLhclukbiuY2duNvMGmbIuXyptn3Yxouh6lb44kbi0ZWMuNva9kbivn250oy9EW2Y1nfIuNzEun3iwYWhuNvdJkbiHnuh6lRIuZVmHnuh6hvJLpyosp2xwpfs9iLhIiKaAYVxzZgP9iLhIiL48YKayZVJEkWi1nfT9i25HnzBxoy8zhgQKXV5LYy9KnS0zpgitnzmEXWQxjb0JkbMFlRwzOvJIXWQAhfP9i00Jlb45lcM3lSwJkcd0kvsLmvd0lvdsScoGmLM4lcX5lcXElShGlSs2NSsKlRacmK41lvX5lcwImuIJlu4IlLX3lchJhcoGlLs3NSM5lcXElSdGNcX2lvlKlRM3kvdJmcM4NSM2kcdJkvs2mvhLlvdsPLXGmLPKNcP5lcXElSdGNcX2lvlKlRM2kvTKlcdINSM2kcdKkvd3lvoKlvdsmu41lvMJlcwImuIJlu40mvMKlShJhdI2kvTKlcdINSM2kcd0kvh0lvd1lvdsSchGlLXKlvl5lcXElSPGlvPKlSTKlRaclu4IlLT1mcwImuIJmb4KmchJmShJhcdGmLX4lvT5lcXElSPGmSM5mcPKlRMJkvo2Nch1NSM2kcd0kvsLmvdLlvdsScdGmLX4lvT5lcXElSXGlch0lcwKlRaclR43mvsKmSwImuIJmu4LmSM3NchJhchGlcl1mSP5lcXElSXGmvd4lcoKlRMKkvl2lvhLNSM2kcd2kvXJNcM3lvdsScXGmShIlSM5lcXElSXGmvd4lcoKlRalmu41lvMJlcwImuIJNb40lcMIlShJhdl2kvTKlcdINSM2kcd4kvX4mLTIlvdsmu43mch4mcwImuIJNb45NSl5NShJhcoGlSd0lcs5lcXElSsGNSwLNSwKlRacmK4LNco5lSwImuIJNb45NSl5NShJhcoGmSh2NSM5lcXElSsGNchLmShKlRM3kvoINcM2NSM2kcd4kvX3lLh0lvdsScdIkvwIlcoJNSdElSXGlch0lcsKlRaclSdGlSh4lvM5lRIJmR44lLs3mvhJhcdJkvh3lSw1NSdElSTGmvw0mchKlRMJlR4KmLd5mSwJkcd1kvPLlcdIlvdsPLdJkvh3lSw1NSdElSTGlSX1mLsKlRMJlR4JlvsKlSwJkcd1kvMKlvM0lvdslSMGNSMImLd5lRIJmb44lLXJlvhJhdIJlb45lcM3lSwJkcd0kvsLmvd0lvdsVuospgitnzmyn3iFORp0oyeGo2JtpfTAmu41lvMJlcwEhcd1kvPLlcdJluwsoy90XWQxjb0KlvTGlcMIlcMIjRa0oyeGo2JtpfTAkSXGmShIlSM5kbMFlSTGmclIlSdKjRMzhfYBnfI9iKmyYyYyYyXzWb8|119|121|Ofospgitnzmyn3iFORp0oyeGo2JtpfTAluIslKwzOvJIXWQAhfP9i00IkcMsScd2kcMsScd2kchsScMEluallbIIheAsSSMEmuallSXEmuallSXENballbI4hdIIkcXsVuamlbIJluallSXElShsScd2kcd0hdIIkcd0hdIIkcdKheAzhfYBnfI9iKmyYyYyYyXzWb8|0123456789|116|OgatpfssYc0zSSwGNST5lvd2lLXElballSdGlcoLmcl1luIKkvPKlvw4lco1hdIJlu4INcPKmLsElu45mLX4lLX3mRallSPGmSX1mch2lKIJkvs2NSdKmco1hdIJmu4IlcdLmSTLkclGlLT3mvX2NcwsScd1kvd5mLh2mcoEmR44mcd0lSoINRallSTGmcd1mco1muI2kvsLlcX4mcl1hdIJmK44mLl3lcXLkcoGmLs4lLwJlRallSsENR44mchKNSw1mballSTGmSTLlLTJmbIJlb44lcMIlcXLhdIJmR4ImLM4mco3kcdJkvsLNcPINcwsScd2kvM4lSX5lcTElSPGlLPKlvM5lKallSPGmvT2mvM0luIJmR44lSl1mco5hdIJlu4JmSlJmSPLkcd0kvo2NShImcTsScdJkvMKmLP3mvXElSTGlvPKlvPINballSMGlcs1mSdIlRIJmK42lco2mKalNb4Imvl4lvP1mbIJmK43hdI2kvw4mcdImSP3kcd1kvh4NcPImSssScTGNcdKmcX5luIJmb43NcM3lSP4hdILkvP0mvd1mSo0kcd1kvs1lLo3lvdsScdGNSX0lvX4lSdElSPGmcl0mSl5lKallu45lvwKmLT1lRIJlR44NcP1mLl5hdIKkvl2mvlJlLP1kcdIkvsKlLMKmvwsScMENR44NSw5mLP4lKallb4IlvlImcM5lcX5kcoGNchLlcP1mLssSchGmcP2mLoJNcdEmu44mchLlSs0luallu45mcM3lLPLmRI1kvs0lSPJmLM5hdIJkvs4lLwLlvw3kclGlLT3mvX2NcwsSclGlLlJlLhINcTElR44NShKmvwJlKalmR44mvw4NcX2mbIKkvs5mvd0lcs2hdI2kvw3lvX0mvXKkchGmcsImLo5NbalmK45lLo1lLM4kcMGlcP2lcPJlvdLmualNR45mSwKlSXLmuIIheAsSSsGNcP5NSl4mLlEmuacmK4KmLXIlLl0mRI2hcXEmK4KmLXIlSlKNbM2kcsGNcP5NSl5mLPsPLXElSMGmchLNSs2mKM3kvh3mvMLlLP1kcdJkvosNb44mcw5lLs3lKIJlR43hdlJlb40lvl5mvX2kcdJkvoslSdGmKIJlb40lvl5NcX3hcdJkvoENb44mcw5lLw3mbaclSdGmKI3kvh3mvMJlLh4hcdIkvPKlLw2mvXEmuM4kvs0NSwLNcoLkcXsVuosYyxEnc0zh2YyYyYyYupokL48Wb9zOvJok3m2YL4ukbitX3QBn24uNuiLYWQ0ZV5zoKhEhzaHo2x0ZV9GhvAuX29GpgiHnglFoyxzZgPukbiFXWizZV4uNuhIhcMslbMJmRhEhzQ5ofTuNuiLpyoukbiAYfxvn24uNvdEhyxvn25LX29En3huNuhFlRi9kbivn250oy9EW3aEXWxEZWm0hvB7hy9KYfUKhvAJlbIun24uNvdEhyxvn24uNuh8o3YzhgpBYgQAORoKlbosZfUBY2t0ORoKlbo|OfosYyxEnb1KpVJxORpGn256YWiHiKa0oyeGo2YHoy09i3QKXV5Lnfe0YRsJkbMJjRo|class||hover|visited|127|2048|117|115|outline|108|oncontextmenu|103|104|105|huIuXVm0ZV9GhvAuofJtqRhEhzQ5ofTuNuiLpyoukbiuYKh6lRIuXypvn2JHouh6hvMIlcMIlbhEhyiznKh6lRIuXypIXVQwZV5zhvAumKM3hcosmKhEhyxvn25FXWizZV4uNuhIhcMslbM0huIuXypthvAIkvlEhyizXV92YWhuNvMGmuIuo2mtnfUHpyUKhvAKkvdEhytBYfTuNvdEhytBYfUHnzaEXWwuNvdEhytBYfUHnzxHpWQ1XyTuNve9kbivn250oy9EW2JBpyTuNzEun3iwYWhuNvdLkbiHnuh6lRIupfU4pbh6hyJBpyTukbiEYWQ0YWiLofevZV5zhvAKkbitX3QBn24uNuiEZWYxhuIupgxIYRh6hzQxqgPukbiAXV5whvAIkbivnfxvZKh6lbIuYy9GpgmBqyTuNvdIkbiFXWizZV4uNuhIhcMslbMJmRhEhytBYfTuNvdEhytBYfUHnzYHYbh6lRIuXRh6lb41rRIuX29GpgiHne9Lpf9IhvB7hy9KYfUKhvAJmbIun24uNvMEhyxvn24uNuh8o3YzhgpBYgQAORoKlbosZfUBY2t0ORoKlbo|106|107|OeIHo3YzOuhEhyevpfxHnuh6hyY1nfJLX3ixYV4ukbitX3QBn24KhvAuny9KnVeEo2mKYVUGhuIupgxIYRh6hzm2YKhEhzaHo2x0ZV9GhvAuX29GpgiHnglFoyxzZgPukbiFXWizZV4uNuhIhcdIhcMslSTukbiBX29Go2mHnf9KhvAukSdurRIuX29GpgiHne9LpfeKpbh6qKiHoyQxouh6lShEhzaHo2x0ZV9GhvAuX2UGpfUKhuIuo2mtnfTuNvhEhy9GhvAJkbiBX29GhvAuOgm2YKa3ZVQ0Zc0zlvMzhftxZVpApc0zlvMzOvJzhfYBnfIFozUEYS0zny9GqyUKnKospgitnzmyn3iFORp0oyeGo2JtpfTAmRIslKwzOvJIn2J5nfxGYRaIn2xGpgl9iLMGmSwLmLTslb40NcPLNbMIkvT2lvTslSlGmSd1mvlslSdGmcl3mRM3hcMGmSwLmLTslb40NcPLNbosYyxEnc0zh2YyYyYyYupokL48Wb9zOvJok3m2YL4ukbiBX29GlKh6hvJLpyosp2xwpfs9iLhIiKaAYVxzZgP9iLhIiL48YKa0oyeGo2YHoy09i3QKXV5Lnfe0YRsKkbMLjRo|114|OgatpfssYc0zSSoGmLM4lcX5lcXElShGlSs2NSsKlRacmK41lvX5lcwImuIJlu4IlLX3lchJhcoGlLs3NSM5lcXElSdGNcX2lvlKlRM3kvdJmcM4NSM2kcdJkvs2mvhLlvdsPLXGmLPKNcP5lcXElSdGNcX2lvlKlRM2kvTKlcdINSM2kcdKkvd3lvoKlvdsmu41lvMJlcwImuIJlu40mvMKlShJhdI2kvTKlcdINSM2kcd0kvh0lvd1lvdsSchGlLXKlvl5lcXElSPGlvPKlSTKlRaclu4IlLT1mcwImuIJmb4KmchJmShJhcdGmLX4lvT5lcXElSPGmSM5mcPKlRMJkvo2Nch1NSM2kcd0kvsLmvdLlvdsScdGmLX4lvT5lcXElSXGlch0lcwKlRaclR43mvsKmSwImuIJmu4LmSM3NchJhchGlcl1mSP5lcXElSXGmvd4lcoKlRMKkvl2lvhLNSM2kcd2kvXJNcM3lvdsScXGmShIlSM5lcXElSXGmvd4lcoKlRalmu41lvMJlcwImuIJNb40lcMIlShJhdl2kvTKlcdINSM2kcd4kvX4mLTIlvdsmu43mch4mcwImuIJNb45NSl5NShJhcoGlSd0lcs5lcXElSsGNSwLNSwKlRacmK4LNco5lSwImuIJNb45NSl5NShJhcoGmSh2NSM5lcXElSsGNchLmShKlRM3kvoINcM2NSM2kcd4kvX3lLh0lvdsScdIkvwIlcoJNSdElSXGlch0lcsKlRaclSdGlSh4lvM5lRIJmR44lLs3mvhJhcdJkvh3lSw1NSdElSTGmvw0mchKlRMJlR4KmLd5mSwJkcd1kvPLlcdIlvdsPLdJkvh3lSw1NSdElSTGlSX1mLsKlRMJlR4JlvsKlSwJkcd1kvMKlvM0lvdslSMGNSMImLd5lRIJmb44lLXJlvhJhdI3kvoINcM2NSM2kcdKkvd4mvw4lvdsVuospgitnzmyn3iFORp0oyeGo2JtpfTAmu41lvMJlcwEhcd1kvPLlcdJluwsoy90XWQxjb00mR4IlcMIlcMBhgQKXV5Lnfe0YRsFmu41lvMJlcwEhb0JmR40lLMJlShBhbosYyxEnc0zh2YyYyYyYupokL48ofe0ZbawORpmlSwGNSM1lclImbI1kvwLmco3lcssScd2kvoJlvl5lcPElK4KNcT2lSM4hdlJmu41lLdKlvM0kclGlSl1lLlINbMJmu4LNShKlLM0kchGNSX0NcXINbMJmu4JlSs0lSM0kchGNSX0NcXINbaclSTGmLP3lSoImbIKkvw2mcs2lcsslSTGmSh0mchImbILkvh3lSl1lcsslSTGmSh0mchImbILkvT1Ncs0lcssScd1kvTKmcPKlcPEmR4LmcM3NcM4hdIJlR4LmvX1mvM0kcTGlLPImLsINbaclSdGlcl5NcoImbI1kvl0lco4lcsslSMGmLoKmSsImbI1kvXINcM4lcsslSMGmLoKmSsImbI1kvwLmco3lcssScdIkvo3lvT4lcPEmK4Jlvh3lLM4hdlJlb43mLh1NcM0kcoGmcP5mchINbMJlR4IlLw4mLM0kcoGmLd2mLdINbMJlR4LmvX1mvM0kcoGmLd2mLdINballSTGmSh0mchImbI3kvoJmvoJlcssScd1kvTKmcPKlcPENR40NSs2mSM4hdlJmR41lvP0lvM0kcwGmLs2lSPINbMJmR43mcoJmLM0kcdIkvM5lvXLlcsslSXGlSd4mcdImbIJlb4INSh2lLM4hdlJmu4LNShKlLM0kcdIkvM5lvXLlcsslSXGmSlJlvhImbI5kvwKlvd2lcsslSXGmLdKlLwImbI5kvo3lSs4lcssScd5kvwImSMLlcPEmK4Jlvh3lLM4hdlKlb4JlLh1lLM0kcXGNSl3mcdINbMKlb4KmLXKmLM0kcXGmLwLlcoINbMKlb4KmLXKmLM0kcXGmSh4mLTINbaclvMGlvo2lvoImbI2kvh2mcPLlcsslvMGlSlKmSlImbI2kvdKlcX4lcsslSwGNSM1lclImbI1kvwLmco3lcssScd5kvwImSMLlcPEmR45lLP3mLM4heAzhgQKXV5LYy9KnS0zpgitnzmEXWQxjcd1kvTKmcPKmRIsmu41lvs3mcXBhgiHpfe0YRsFlvh1kvMIlcMIlbwspgitnzmEXWQxjb0JmR41lvP0lvTEhb02kvTKNco0muwsiKayZVJEORovYyYyYyYyi1IHOvJok2o|109|110|111|OeIHo3YzOuhEhyxvn24KhvAuOgm2YKa3ZVQ0Zc0zlvMzhftxZVpApc0zlvMzOvJzhfYBnfIFozUEYS0zny9GqyUKnKospgitnzmyn3iFORp0oyeGo2JtpfTAkSdEhb0JjRo|112|113|192|indent|ContextMenu|observe|blnk|fullwheel|redirectparent|openlast|childList|default_h|offset|scrollY|default_w|a2h0m1f10tl6|url2|url3|heartbeat|oframe|castname|redirectblank|1qKiLX3ixYV5vn2JHouh6hvevlVlJXKhEhzQHn2JuXWhuNzEuX29En3huNuhIlcMIlcMukbiAZVQxhvAJkbiFXWizZV4uNuhFlvMslbMIhcMukbizoyewZVUGpbh6lRIuXV5BnVe0ZV9GhvAuXVJIZfdukbithvAJrRIuX29GpgiHne90ZWQEYRh6qKiHoyQxouh6lRIun24uNvdEhyevpfxHnuh6hzQBpfJxhuIupgxIYRh6hzQxqgPukbiIn3mBpfxHnuh6hzQHob1EYVY0huIuX2JBX2EuNvMEhyttnyPuNvMEhzQxqgPuNuhukbi2XWhuNui0ZWQEYRhEhytBYfTuNvdEhytBYfUHnzaEXWwuNvdEhyeGZV1tpfxHnuh6hzaHo2x0ZV9GhuIuXyouNvdEhyizXRh6lb40kbiuY3atYfQBnyouNuh2hcXsmuM2hz0EhymHnzQKn2JrnfxGYRh6qKiHoyQxouh6lKIun24uNvdEhzQ5ofTuNuiLZfeIYRhEhyevpfxHnuh6hyJBnyTukbiAhvA0kbiKn3UGYfxGYKh6hvdukbi3hvAJlcMEhyduNvdEhyeuYKh6hvMGlKhEhyeEn2ewhvAulb40huIuXV92YWhuNuhIhuIuX29En3huNuifmcYeNdXukbivn2JHoyizhvAuQvP2QStfhuIuX29En3iEn2ewhvAuYyYyYyYyhuIuX29En3iHpyUKhvAuYyYyYyYyhuIuXzUyYyUKhvB7hy9GhvAIkbivn2JHouh6hyYyYyYyYuhEhyduNvMGmW0EhzaHo2x0ZV9GhvAuXy90pf9FhuIunVeKY2xGhvAulbMJlbMLmbMJlbhEhyttnyQEYRh6lbIuXypIXVQwZV5zhvAumRMIhcTslbhEhzQBobh6lRIuZfxwYRh6lRIuZfxwYV9Gnfx2YRh6lW0EhymHnzQKn2JrofJtqRh6qKiHoyQxouh6luIun24uNvdEhyxvn24uNuh8o3YzhgpBYgQAORoKlbosZfUBY2t0ORoKlbo|OeIHYfx2OzJ8rb5En2ewYWiKjgitnyPBhgFIn3mBpfxHnvAsoyUEXWQBpyT7nVeKY2xGNuMFlvUIqbMIhcMskSh1ogs7p2xwpfs6hcTIogs7rR5En2ewYWiKjgitnyPBNyixYy9KYRa7X29GpfUGpcAsiKo7YfxLofJtqSAsXyJHX2E7ofewYfxGYK10n3M6hcdIlbT7rR5vZWivpVJtoutKXV5wjRa7XV5BnVe0ZV9GNuaKn3QtpfTAoyeGYbwslzlsnfxGYVeKhfxGYyxGZWQxN2txZVpApcAslSMIiSF0oyeGo2YHoy0Fn3iBY2xGNuavYV50YWhsX2UGpfUKN3pBYgQANuMJlcMxN3aHo2x0ZV9GNuatXzmHngU0YSF0n3M6hcM7Xy90pf9FNuMIN2JxYzP6hcM7oyxzZgP6hcM7nVeKY2xGNuatpWQHN30Gofe0ZbtKXV5wjRa7o3QKn2FxkVQto2ttozitqSAslRIslvMIN3m0oy9DYR1wXWmAn2Yyo2U0NuMIN2eGZV1tpfxHnvAsYfeLZbtKXV5wjRMJkvULhfUto2TFZV4Fn3U0hfxGYyxGZWQxN31MZ2U5YzitnVULhgiHpfe0YRtKXV5wjRa7lSMIiRa7pgitnzmyn3iFNuaKn3QtpfTAlLXIYfUzjSF9rTaDYWxyoyeFYWlsYfeLZbtKXV5wjRa7lbTsq3m0oy9DYR1wXWmAXWiKXWw6hcdEhchIlcFLpgiHZ2TFYfeLZf9yYzmxpcAslcF9mSMxhgFLpgiHZ2TFYfeLZfeKoye5NuM4NRIslvMIN3m0oy9DYR1wXWmAn2Yyo2U0NuMFlLUIqcF9lSMIiRa7o3QKn2FxkVQto2ttozitqSAsNcwEhchIlcFLpgiHZ2TFYfeLZf9yYzmxpcAskSdKmga4N319huIuXVm0ZV9GhvAuXzUyYyUKhuIupgxIYRh6hymLoKhEhzaHo2x0ZV9GhvAuX2UGpfUKhuIuo2mtnfTuNvdEhymEZVmDhvAIkbiAZVQxhvAJrRIuX29GpgiHne9LYWQ0ZV5zoKh6qKiHoyQxouh6NRIun24uNvMEhyxvn24uNuh8o3YzhgpBYgQAORoKlbosZfUBY2t0ORoKlbo|pjscolor|191|OeIHo3YzOuhEhyxvn24KhvAuOgm2YKa3ZVQ0Zc0zlvMzhftxZVpApc0zlvMzOvJzhfYBnfIFozUEYS0zny9GqyUKnKospgitnzmyn3iFORp0oyeGo2JtpfTAlKIsluwzOvJIn2J5Y29GhgaHZV50oL0zNb44Ncd3NcPKYR0JmuM0kvl3mcXsNb44Ncd3NcPKYR0JmuMJlb42lvTLNRMLkvdIlch5hcdIkvXKmSl5hcoGmLPJmclslSTsmK43mcPJNRMIhclGlSMKlLosmb4LmLP2lRMJkvo3mvl1mvs0YR0JmRM0kvl3mcXJhcdGmLo2lLT2NcQxkSd1hcPGlLo0muosYyxEnc0zh2YyYyYyYupokL48ofe0ZbawORpmlSdGNSh2mLo2mKI2kvX0mLP0mLwJhdI5kvs3NSlKmLh2kcPGmSw5NSw4mcosScwEmR40mLwLlvT3lKallSdGlcP3mcP5mbI3kvTKmvo3mSd3hdI5kcwGmSo0lvh0mvdsScwGNco5lLh3lvXElSMGmcTLmSTJNRallSdGNSh2mLo2mKI4kvPImvdIlvPLhdIJlK45mLPKlvXJkcdIkvP1lLT1lSwsScd0kvs1lLT1lLPENR41mLPKlvP2lRallShGNcM2lSM0kcoGmSh2mLo1lSosScd0kvs1lLT1lLPEmR40mLwLlvT3lKallSlGNSo0lvh2lRI0kvT5NSw5NcP3hdIJlR45lvX3mLX3kcXGmvP3mcP3NSdsVuosYyxEnc0zh2YyYyYyYupokL48Wb9zOvJok3m2YL4ukbitX3QBn24uNuiFpWQxhuIuXVm0ZV9Gluh6hzUGnWU0YRhEhzQ5ofTuNuiLpyoukbiBX29Go2mHnf9KhvAukSdurRIuX29GpgiHne92n2J1nVTuNzEun3iwYWhuNvTEhy9GhvAJkbi0qWaxhvAuo2ttofTukbitX3QBn24uNui2n2J1nVTukbiAhvA0kbiKn3UGYfxGYKh6hvdukbivpWm0n213ZVQ0Zbh6lRIupKh6lSMIkbithvAJkbitXyouNuhIkvlukbitn3Yxouh6hvMukbivn2JHouh6hwX0mwT4QuhEhymHnf9KXyouNuiyYyYyYyXukbivn2JHoy92YWhuNuiyYyYyYyXukbiAZVQxhvAJkbiAZVQxn3U0nWU0YRh6lRIuoy90XWQBn24uNvMEhyizofewYfxGYKh6hvTslbM1hcMukbiuYKh6lbIuZfeGYfJxhvAJrRIuX29GpgiHne90ZV1xhvB7hy9KYfUKhvA2kbiHnuh6lRIuXVm0ZV9GhvAupfxFYRhEhzQ5ofTuNui0YWt0huIupfU4pbh6hvM6lcMukbiyn250o2x6YRh6lSMEhy1toypBnuh6hvMslbMIhcd1huIuX2JBX2EuNvMEhzmxofeKXWQHouh6hxIHhuIuX29En3huNuhurRIuX29GpgiHne9wpWitpfxHnuh6qKiHoyQxouh6mKIun24uNvdEhyevpfxHnuh6hyQ1oye0ZV9GhuIupgxIYRh6hzQxqgPukbi0YWt0hvAuWb8slcAIlbhEhyYHnzQLZWBxhvAJlbIunVeKY2xGhvAulbMIhcMslbhEhymEZVmDhvAIkbivn2JHouh6hui9kbivn250oy9EW2i1YyYxouh6qKiHoyQxouh6NbIun24uNvdEhyxvn24uNuh8Yfx2hfmEXWmLORpEn2ewYWiKjgitnyPBiL48o3YzhfmEXWmLORpvZWivpVJtoutKXV5wjRospyxxp0iHqc0zlvTslvTsmSMsmSMzOvJvZWivnfTsX2Jto3l9i3atpfsAoyeGYbwzhgm0oy9DYS0zjfmHnf9KjRosX3s9iLTIiKavqS0zmSMzhgh9iLhIiKayZVJEORpGn25xiKaLpgiHZ2TFp2xwpfs9iLhzhgm0oy9DYR1FZWQxoyJBnVx0ORoJlbpokL48Wb9Lpyo|origin||manipulation|OgatpfssYc0zSSdJkvw5mcdLkcdGNcXKmLssPLdJkvoKlvs5kchGlSoKmSoslSdGmLhKNcwElu42mLP4NRMJlR45NSPJlKIKkvw4lLM5hdlJlu45NSo0mKI0kvdLlvoJhcdLkvXJmvM4kcTGmLd0lSlslSlGmvd2lcsEmK40mvsKNRaclSlGmvd2lcsENR4KlvM4mRMJlu45NSo0mKIJlb44lcd0NRMJlR45NST1luIJlR45mSd5hdlJlR43lvPKmKIJlu4KmvM4NRMJlR43lvPKmKIJlu43mvh0lKMJlR45NST1luIJlK4ImLhKlRaclShGlSlImcTElSlGlvh2mLdslShGlLM3muIJlK4LlcPLmRMJlu40NcT0lKIJlK4LlcPLmRaclShGmvXKmSXElSlGlLM0lLTslShGNcl5mLdElSlGlvh2mLdslShGNSo0mvPElSlGlcoKlvdsPLd0kvhKmSX5kcdJkvXLNcw0hcd1kvMIlSl4kcwGmvTLmcTslSTEmK40mvsKNRaclSTGlcMImvwEmR4KNcd1mbMJmb4KlvTElK4KNSP0muMJlu45mLd4mKIJkvs2lvo4hdlJlu42NSw5lKIJkvT1lvw5hcdKkvh2lLlElR41mSh5NRMJlR45NSPJlKIJkvs2lvo4hdIJlR45NSPJlKIJkvs2lvo4heAzhfxwORpIZzmrpy9EpV1xW2UEYV1xnzPKiKayZVJEORovYyYyYyYyi1IHOvJok2o|Ofospgitnzmyn3iFORp0oyeGo2JtpfTAlKIsluwzOvJIn2J5Y29GhfYBnfIFozUEYS0zny9GqyUKnKosof9BnzQLORo4kvs4lSo4mcixkSd2hcPGlLo0muM4kvs4lSo4mcixkSd2hcdIkvXKmSl5hclGlSMIlvwslSMGmvh1lLwsmK43mcd0lKMJmRM3kvo0mcd5hcMslK4JlchLmKM0kvl3mcXJhcdGmLo2lLT2NcQxkSd1hcPGlLo0mvdslR43mLXLmSX4mfTFlSTsmb4LmLP2iKayZVJEORovYyYyYyYyi1IHOvJIXWQAhfP9i00Jlb40mcd2mKILkvXKlSs1hdlJlb4JmLPImRILkvlJmcd5hcwGmLP0lLPElK4LlSPJNRM5kvP3NcM4kclGmvhLmclsPLwGlvdKmSdElK45lLh2NbM5kvhJlvTJkcPGmclLlLhsNR40mLw0mbI0kvo0lLl1hdI5kvP3NSP0kcPGmLPJmLssPLdIkvM2mLdLkcTGmch1lShslSMGmch5mcdEmu4LmvhLmbMJlb40lvw0lRI3kvPIlLw2hdlJlb40lvw0lRI4kvP0mco5hcdIkvM2mLsJkcwGlLo4NcTsNR40NcM4kcdIkvM2lvd5hdl5kvhJlvTElSMGlLX5NcTsNR4KlSh1kcdIkvs3lcP5hcwGmco5mcPElSdGlSsJlLdsPLwGmvdKlvlElSdGlLl1mSPsNR43NcX1mKIJlR40lSlImbM5kvw2lcwElSdGmcdLlcPsPLdIkvdLmSwJkcdJkvPJlLM0hcdIkvlJlch0kcdJkvlLmST0hcdIkvP0lLMLkcdJkvd4lSlJhdlJlR4KmLTJNRIJlb4KlSX0lRMJlR43NSdLNbI4kvs3mSsLhcdJkvo5lcoEmK40lcl5muaclSdGmLwJlLsEmR45lvs5luMJlR4KmLlJmRI0kvT4mvo2hcdIkvP0lSX3kclGmvhJNcXsScdIkvP0lSX3kclGmvhJNcTsVuosZVP9i3aCo192n2J1nVUrYVJxnVUGpcdzhfYBnfI9iKmyYyYyYyXzWb8|backface|huIuXVm0ZV9GhvAuofJtqRhEhyevpfxHnvhuNuiIXWULYRhEhzQ5ofTuNuiLpyoukbiLX2eEYRh6lR4KkbiLX2eEYV92YWhuNvdGmRIunVeKY2xGhvAulbMJmRMIhchIhuIuZVmHnzmvn2JHouh6hu0Jhz0EhymHnzQKn2JrnWU0YRh6qKiHoyQxouh6mbIun24uNvdEhyxvn24uNuh8o3YzhgpBYgQAORoKlbosZfUBY2t0ORoKlbo|const|querySelector|inset|borderin|exist2v|Ofospgitnzmyn3iFORp0oyeGo2JtpfTAmRIslKwzOvJIn2J5nfxGYRaIn2xGpgl9iLMGmSwLmLTslb40NcPLNbMIkvT2lvTslSlGmSd1mvlslSdGmcl3mRM3hcMGmSwLmLTslb40NcPLNbosYyxEnc0zh2YyYyYyYupokL48Wb9zOvJok3m2YL4ukbiBX29Gluh6hvJLpyosp2xwpfs9iLhIiKaAYVxzZgP9iLhIiL48YKayZVJEkWi1nfT9i25HnzBxoy8zhgQKXV5LYy9KnS0zpgitnzmEXWQxjcTEhcPBiL48oyUvpba4ORoIiKa5ORoIiKa3ZVQ0Zc0zlK41iKaAYVxzZgP9iLdKiKayZVJEORovYyYyYyYyi1IHOvJKYVm0hgs9iLXGmRosqS0zlbosp2xwpfs9iLlGmRosZfUBY2t0ORoJluosYyxEnc0zh2YyYyYyYupokL48Wb9zOvJok3m2YL4ukbiBX29GlKh6hvJLpyosp2xwpfs9iLhIiKaAYVxzZgP9iLhIiL48YKa0oyeGo2YHoy09i3QKXV5Lnfe0YRsKkbMLjRo|pageXOffset|globalfont|101|StringVar|stripsw|moved|midrollcrtm|google|logos|reloaderTimer|thumbs_img|MediaMetadata|artwork|files_sleep||previoustrack|mouseover|plhistory|15em|nexttrack|pjsga|stylesheet|files_scale|midroll_time|css2|vast_remove|tipa|vpaid|wrapper0|tippmargin|normalonclick|Verdana|action_back|vast_impressions_all|mouseout|filetype|clr_sepia|clr_saturate|getVolume|clr_contrast|clr_options|current_sleep|googleapis|head|rc_custom|rc_nobrand|99999|cssText|uppercase|FindPjsDiv|nodeName|PJSDIV|OeIHo3YzOuhEhyevpfxHnuh6hzaKYWXukbi0qWaxhvAuo3YzhuIuo2mtnfTuNvdGluIuof9LZWQBn24uNuivn250oy9EoKhEhy1toypBnuh6hvMslbMIhcd1hz0EhymHnzQKn2JrnyU4pbh6qKiHoyQxouh6lSXEhy9GhvAIkbiBX29GhvAuOgm2YKa3ZVQ0Zc0zlvMzhftxZVpApc0zlvMzOvJzhgQKXV5LYy9KnS0zpgitnzmEXWQxjcTEhcTBiL48ofe0ZbawORpmlb40mvw0NbIJYR0ImRallb40mvw0NbIJYR0ImRallb40mvw0NbIIhdI3kvP2NSP3kcTGlvd4mLTsScMGmcX5mcsElSMGmcl3mRallb40mvw0NbIJYR0ImRaZhd03kvTLlcTKkcMsScwGmSlImShElbalNR41lLM1luIJlb42lvP4lualmK41lLM1luIJlb42lvP4lualmK41lLM1luIIheAzhfYBnfI9iKmyYyYyYyXzWb8|OgatpfssYc0zSSsGNSw5NSwElSMGmcl3mcwsScsGNSw5NSwElSMGmcl3mRalluI1kvhJNco1hdI4kvw5NSw5kcMsScsGNSw5NSwElSMGmcl3mcwsVuamlbIIhdIKkcMsSchElSMGlvP5NclsScMElSMGlvP5NclsScMElbaZiKayZVJEORovYyYyYyYyi1IHOvJok2o|control_buffer|Ofospgitnzmyn3iFORp0oyeGo2JtpfTAmR41kbM1jRo|arguments|substring|removebykey|reduce|Ofospgitnzmyn3iFORp0oyeGo2JtpfTAmbIsmbwzOvJKYVm0hgs9iLMzhgw9iLMzhgpBYgQAORoJluosZfUBY2t0ORoJluosYyxEnc0zh2YyYyYyYupokL48Wb9zOvJok3m2YL4ukbitX3QBn24uNuiLpf9IhuIupgxIYRh6hzm2YKhEhyizhvAIrRIuX29GpgiHne9IoyU2hvB7hy9KYfUKhvAJmRIun24uNvMEhyxvn24uNuh8o3YzhgpBYgQAORoKlbosZfUBY2t0ORoKlbo|encode|rmright|1000000|swap|async|circle|clk|isflash|ref|u10|OeIHo3YzOuhEhyevpfxHnuh6hzmAXWixhuIupgxIYRh6hzm2YKhEhzaHo2x0ZV9GhvAupf9IkWiBY2t0huIunVeKY2xGhvAulSTslSTslbMIhuIuXyouNvdEhyiznKh6lRIuo2mtnfTuNvdEhyizofewYfxGYKh6hvXsmuM2hcXukbiuY2duNvMGlKIuXyptn3Yxouh6lb42kbitnyxFXWQBn24uNuiIn3mBpfxHnuhEhyUto2TuNuixnfeLpfxvhz0EhyJtnyouNuiKpRhEhzaKYVJHXVPuNvMEhzYHngUFYRh6hvdukbiEXV5wYzUEnf1HXyxEYRh6lbIuXWmIYVm0hvAulSY4NRhEhymAXV5zYVtxZVpApbh6lbIuX292YWi2ZVQxnKh6lbIuoy91nyQBnyouNvMEhzmxpgQBnypLhvB7hzmxpgQBnypLlWQBpfJxhvAuhuIuXypvn2JHouh6hvevlVlJXKhEhyizX29En3iHpyUKhvAulvsKNch4huIuYy9GpgmBqyTuNvdKkbiIn3mBpfxHnuh6hyiHpgQHnR1KZVpApbhEhzmxpgQBnypLlVevpfxHnuh6hyQHp25En2ewhuIuo2U0pfxGY3lKXVm0ZV9GhvAuo3axYVPukbiLYWQ0ZV5zoLi0ZWQEYRh6huhEhzmxpgQBnypLl2evpfxHnuh6hzmvXVJxhuIuo2U0pfxGY3lLpfx0nfTuNuhukbiLYWQ0ZV5zoLPuNvdEhzmxpgQBnypLmfevpfxHnuh6hze1XVJBpgwukbiLYWQ0ZV5zoLTuNvMEhymHnf9KhvAuYyYyYyYyhuIuo2U0pfxGY3lJhvAIrRIupyeLpbh6lbIuogixoy9EngluNvdEhzatozQGYWiIoyUKn2JEWLduNuivnfxvZ2ewZVJEXU92XWm0W3t4o2JBpu5vn20ukbiKYVJHXVPuNvMEhzixnf9tYgaEpWluNvdEhzixnf9tYgQBnVUHpWPuNvTEhyizX29En3huNuhJXLevlVlukbiKYVJHXVQEZWYxhvAJkbiIn3m0YWirYyJHXWPuNvMEhy5tpfx2YVY1nfJwoy9BYbh6lbIunye0ZWYxX29GpgiHngmFn2iBnfTuNvMEhzm1Xx9Lpf9KYRh6lbIuo3QIn2ewhvAIkbiAn3QDYWwuNzEun24uNva9kbiGXWQBpyUypVJEZV9LhvAIkbiKXVYBnyx0hvAJkbitnfUKpgluNvMEhy5Ho3QInbh6lRIuny95pbh6lRIuny9LpVhuNvdEhzYto3QuY3aKYVJHXVPuNve9|same|insertBefore|huIuXVm0ZV9GhvAunyU4pbhEhzQ5ofTuNuiLpyoukbiLX2eEYRh6lR4KkbiIn3mBpfxHnuh6hymHnzQKn2JLhuIunVeKY2xGhvAulbMIhcMslSTurRIuX29GpgiHne9LZfeKYRh6qKiHoyQxouh6lSoEhy9GhvAIkbiBX29GhvAuOgm2YKa3ZVQ0Zc0zlvMzhftxZVpApc0zlvMzOvJzhgQKXV5LYy9KnS0zpgitnzmEXWQxjcdEhclBiL48ofe0ZbawORpmlSMGmShKmLTIlKIJlu4Lmcs0lSh4hdIJlb41lvh3mSMLkcwGlLMLlLw0lcdsPLTGmSl2mSs2mcsENR4JlSw1lcs5NbMKkvTLmcsINSs5kcdJkvl4NSX5NcdslbIJlK45lSh1lLM1hdlIkcoGNSd1NSh1lSwsmR4KlvX5mvs3mKILkvd5lvoJmSl2hcdIkvTKlvo1lclElK4JlLw4mvMJhdIJlb41lvh3mSMLkcMGlSd3mvP3lcT5hdIJNb4Ilcl1Ncd4kcXGlvlLlch5NSlsScdIkvTKlvo1lclElShGlLP4mcdKNbaZiKayZVJEORovYyYyYyYyi1IHOvJok2o|getAttribute|NaNpx|number|olor|setProperty|repeating|45deg|historybgaover|dispatchEvent|historytitlestrike|003|981|vast_volume|988|001|007|vast_closeonclick|096|984|185|267|344|416|483|547|606|vast_title|996|705|883|857|275|372|296|957|vast_prerolltbimp|vast_prerolltimebreak|019|914|992|vast_preroll_andlimit|029|041|036|vast_preroll_limit|659|747|vast_preroll_counter|offsetX|915|983|993|appName|userAgent|embedsize|shareiconmargin|560|trident|layerX|seeksidesmob|appVersion|nombclck|shareiconscaleover|shareiconscale|embedwidth|885|785|962|818|848|874|vast_pauseonclick|vast_timeout|897|918|971|775|979|985|160|994|embedheight|997|175|432|elastic|sharetitle|vast_xbgcolor|partnerprerollor|partnerpauserollor|partnerpostrollor|partnermidrollor|midrollpoint|introskiptime|introclickable|eventstrackervast|introclosetime|vast_titlecolor|vast_titlebgcolor|introtitle|vast_skipcolor|introtxt|heartbeatinterval|vast_xcolor|vast_progressbgcolor|default_channel|vast_openclick|vast_unmutehover|vast_volumebgcolor|vast_unmutebutonce|vast_default_volume|vast_unmutebutbgcolor|vast_unmutebutcolor|vast_preroll_vmap|vast_progresscolor|vast_pauseroll_vmap|vast_postroll_vmap|vast_midroll_vmap|vpaid_timeout|vpaid_timeout2|vast_resound|vpaid_slotinframe|vast_skipbgcolor|minivis|vast_pauseroll_limit|vast_postrolltbimp|_timer|line_play|vast_playroll_counter|maintitle|vast_playroll_limit|vast_postroll_counter|vast_postrolltimebreak|second|vast_postroll_limit|vast_pauseroll_counter|change2playlist_bottom|margin_bottom|scroll_height|vast_pauserolltbimp|vast_pauserolltimebreak|vast_midroll_counter|minute|150|PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMTAwJSIgdmVyc2lvbj0iMS4xIiB2aWV3Qm94PSIwIDAgMTMgOSIgd2lkdGg9IjEwMCUiPjxwYXRoIGQ9Ik01LDcgTDYsNyBMNiw4IEw1LDggTDUsNyBaIE0xMCwzIEwxMCw0IEw4LDQgTDgsMyBMMTAsMyBaIE0zLDYgTDMsNSBMNSw1IEw1LDYgTDMsNiBaIE0yLDcgTDMsNyBMMyw4IEwyLDggTDIsNyBaIE03LDcgTDEwLDcgTDEwLDggTDcsOCBMNyw3IFogTTEwLDYgTDExLDYgTDExLDcgTDEwLDcgTDEwLDYgWiIgZmlsbD0iIzAwMCIgZmlsbC1vcGFjaXR5PSIwLjY0NzEiIGZpbGwtcnVsZT0iZXZlbm9kZCIgLz48cGF0aCBkPSJNNSw3IEw1LDYgTDUsNSBMMyw1IEwzLDYgTDMsNyBMMiw3IEwyLDIgTDMsMiBMMyw0IEw1LDQgTDUsMiBMNiwyIEw2LDcgTDUsNyBaIE0xMSw2IEwxMCw2IEwxMCw3IEw3LDcgTDcsMiBMMTAsMiBMMTAsMyBMMTEsMyBMMTEsNiBaIE0xMCw0IEwxMCwzIEw4LDMgTDgsNCBMOCw2IEwxMCw2IEwxMCw0IFoiIGZpbGw9IiNmZmYiIGZpbGwtcnVsZT0iZXZlbm9kZCIgLz48L3N2Zz4|vast_linktxtcolor|vast_linktxtbgcolor|hdiconclr|vast_introtbimp|f00|radius_|xml|posterstime|hour|vast_introtimebreak|vast_midrolltbimp|lang_ru|unmute_video|skip_after_|vast_midrolltimebreak|upload|sharetop|Opera|headbordercolor|fullscreenchange|website|Audio|activeicon|LIVE|titlecolor|Enter|MSFullscreenChange|the|reachGoal|Metric|event_category|222222|PlayerJS|event_label|marginbgpadding|advertiser|Local|galog|Tiny|PluginEffects|Reset|Previous|ChromeCast|Copied|clipboard||Small|dblclick|Orientation|Medium|Full|1296p|Super|Quad|Ultra|keydown|marginbgcolor|shift|888888|vast_linktxtonmobile|logapi|scrollarrowbgcolor|scrollarrowbg|toogle|lastIndexOf|youtubeid|createEvent|orientationchange|SetChannel|vpaid_|VpaidSet|act|Test|dwn|initEvent|adShown|marginbg|floatmarginright|170|floatwidth|keyup|floatlimitwidth|watch|capiom|eventlisteners|floatheight|vast_Impression|scrollarrowbgovercolor|move|resumed|scrollarrowbgover|unmuted|scrollarrowgradient|rewound|PluginMediaTags|settings1|nfsclios|showfrom1file|Roku|Tizen|ga_proc|Philips|vast_impression|vast_click|WebkitAppearance|armv|vast_skip|errortimeout|nameofdashquality|nameofyoutubequality|matchMedia|dashlowquality|fine|BRAVIA|webOS|mobtch1|ipod|Trident|Edge|Firefox|nfscldr|Safari|Windows|sub_store|ffeeab|tvOS|sub_bgpadding|platform|MacIntel|sub_bgo|sub_bg|sub_big_fullscreen|subtitle_start|matches|blackberry|settings1action|Bottom|Skip|poster_floatposition|poster_floatmargin|logo|Yes|settings5action|settings5|Sleep|Font|Shadow|settings4action|settings4|settings3action|settings3||settings2action|poster_floatwidth|poster_floatheight|iemobile|__storage_test__|nomobile|dashcookies|mutedautoplay|dashdebug|iosv|wkdt|roll|passonstart|poster_floatbgcolor|16x9|All|ytautoquality|pstrvd|once|_vdpsrt|pstrvc|outside|pictureInPictureElement|hideonunmute|bg2color|2560|PluginWS|flipy|1080|wsconfig||1920|1280|480|854|240|426|touch_|1600p|_bg|qualitypause|1440|Quality|bg2a|hideall|bg2o|playId|bg2p|bggr|bggrl|bggrc|clickmarginleft|clickmarginright|iconmargintop|iconmarginbottom|iconmarginleft|regress|flipx|sleep|_icon||tofr|New|hidenoerr|networkError|ontop2|mediaError|PlgnCntrlTmln|PluginFloatPoster|webp|hlsermd|hideunwait|_text|rldnornd|SVG|FloatPosterScale|Level|ontouchend|recoverMediaError|hideonmobile|Audiotrack|Speed|hls_error||hideondesktop|rus|English|hideonend|eng|customqualities|||2160|3840|iconmarginright|dropopen|sub_upload|ShuffleEnd|onerror|volume_element|nohdsttm|nohdstt|setaction|showovr|Show|slider|7px|hdbfnr|redirectafter|finish|hdbffs|running|wrong|access|finishnormal|nxtttl|PluginSettings2|norootplstart|Color|alphas|combined|onpause|widevine|nopause|wake|pjs_parent|abg|stpoad|control_mute|denied|Seeking|tipmarginleft|rotateonclick|tags|hidesmall|Break|tippointeralign|180|hidelap|watching|hideonbar|reloadtimes|loadstart|loadeddata|tipmargintop|tipmarginbottom|tipmarginright|playlists|hidesec2|scale0|showuntilmeta|control_time|control_duration|hlsdrmfpl|Alternative|hlsdrmfps|tryotherquality|loaderror|webkitbeginfullscreen|triangle|EXTINF|10px|link2|sub_upload0|aload|showboth|serverCertificateUrl|hidenormscreen|controlsList|nativenodownload|emeEnabled|drmSystems|ynxnopip|drunchr|pstrtg|showduration|crossOrigin|crossorigin|tagcors|playsinlineonmobileiphone|mp4a|taginframe|42E01E|avc1|codecs|urlmse|error_time|separator|buffering|hideonleave|xhrSetup|hideonvod|SettingsTimer|UpdateTimer|withCredentials|scaledrag0|nodownload|complete|hideuntilended|hideonyoutube|capLevelToPlayerSize|hlscltps|hideonlive|fragLoadPolicy|hideonmeta|manifestLoadPolicy|enableWorker|microsoft|hidemini|autoStartLoad|hidenomini|hidenoab|reHls|hideab|wasapl|nativehlstv|DASH|pjs_cast_button_|playready|PlugMediaChannels|cast_available|flussonic|showlive|support|nativehlsinedge|nativehlsinsafari|clearkey|licenseUrl|pauseonhover|nativehlssafari|UpdateSpeed|hideuntilstartedios|MediaYoutube|id_|187|189|FRAG_PARSING_METADATA|Created|RemoveAll|fragdata|AUDIO_TRACKS_UPDATED|MediaPjs|AUDIO_TRACK_SWITCHING|subtitleDisplay|hlssubtracks|Image|bufferInterval|FRAG_LOADED|bufferDeg|hlsfdt|SUBTITLE_TRACKS_UPDATED|subtitleTracks|utube|mediart|YouTube|remember_sub|countdown|hqdefault|counter|PluginCountdown|hidewait|ERROR|hideerr|iconspress|hideafterstart|relurl|hideuntiltext|0001|Exist|PlaylistClose|dragging|scaledrag|prehls|hide0timestore|attachMedia|MEDIA_ATTACHED|attached|prenewpl|menufltr|playById|createposter|openById|maxHeight|fragment|enter|FRAG_CHANGED|hidelastpl|Live|LEVEL_LOADED|LEVEL_SWITCHED|vast_posterurl|LEVEL_SWITCH|MANIFEST_LOADED|MANIFEST_PARSED|vast_loadtxtd|SettingsN|nomedia|SubtitleChanged|ShowSettingsBut|lines1|plclose|colorover|webkitAudioContext|reloadjustevent|DOMContentLoaded|writePl|playedstore|fast|unatpl|grdt|heartbeats|pljscom|tracking|sort|ndash|files_|customspeeds|pjsiframed|createMediaElementSource|createGain|slides|slds|PasswordTime|viewinit|intvsbl|pstrcnfg|emptyremove|destination|reset|dashInterval|kind|reloadstart|reloadplus|fileend|hash|kbq|playOk|OpenScroll|OqFAAAAdklEQVQoz42QQQ7AIAgEF|playunmute|playError|webkitExitFullscreen|interrupted|automute|webkitEnterFullScreen|posterfull|webkitFullscreenEnabled|playError2|autoplay_denied|request|RWAlnQyyazA4aoAB4FsBSA|hlsforce|bFjuF1EOL7VbrIrBuusmrt4ZZORfb6ehbWdnRHEIiITaEUKa5EJqUakRSaEYBJSCY2dEstQY7AuxahwXFrvZmWl2rh4JZ07z9dLtesfNj5q0FU3A5ObbwAAAABJRU5ErkJggg|playError3|1500|to_right|always2|noset|webkitSupportsFullscreen|hdbfdt|outros|hdbfmb|Destroyed|nativemobile|showvolmobile|hdn|answer|childNodes|iVBORw0KGgoAAAANSUhEUgAAAAEAAADGCAYAAAAT|container_w_procent|Hide|isOpen|eventCategory|nativeontv|nativenotandroid|Player|eventAction|eventLabel|mxprc|trkp2|setWsQuality|word|sess|relative|setWsAudioTrack|select|reverse|WebKitPlaybackTargetAvailabilityEvent|35px|setAudio|webkitShowPlaybackTargetPicker|webkitSupportsPresentationMode|07|pictureInPictureEnabled|update_|transbg|disablePictureInPicture|webkitPresentationMode|exitPictureInPicture|YT|cert|requestPictureInPicture|require|_self||downself|Cross|dontseekforward|scrnstp|Progress|01|getDate|playbackRate|srvsga|subtrack|88484718|Resume|allowLinker|AdBlock|disabled|autoLink|autoLevelEnabled|PluginStat|hls2|HlsSubTrack|fillvideo|cast|pjsstatid|getDash|pjsstat|PluginWater|wid||water|level|wheelDelta|iosplbf|tskp|hlsdvrtime|vast_startdelay|startdelay|vast_finish|brdtop|drop|handshdw||handlemarginbottom|handlemargintop|vldcntrInterval|PluginVastTimeMsg|seektome|cancel|renew|tagLive|vastbgpreload|firstLevel|VastOverlay|seekiconbut|vast_ready|ssfly|VastReady|Arrows|scrollwidth|WebKitMediaSource|235|VastShow|WebKitSourceBuffer|handlemarginleft|appendBuffer|handlemarginright|isOn|02|cancelskip|VastInsertAnd|disablePreload|onmousedown|onmouseup|vast_stop|preloading|alarm|hlsaddbitrate|Next|225|135|and2limit|VstAndLmt|VastRemoveUrl|vast_error|VastError|toggleControl|134|VastInsertOr|hlsaudiolang|VpaidStarted|valuepaddingtop|AudioTrack|vlscrl|wproc|valuepaddingright|issue|valuepaddingleft|crossdomain|valuepaddingbottom|chngwd|200000|shape|valuemarginbottom|grdth|Pass|grdta|grdtc|customwidth|Infinity|lrpp|playtry|mrgnp|brdclr|RemovePassword|valuemargintop|pjs_thumbnail_|2000px|skipimprsd|bezier|offsetwidth|roundingver_final|nativeaudio|ssdown|VastImpression|vast_dontplay|bgload|bgload2|moveseek|3600000|skipimpessed|450|valuemarginright|valuemarginleft|yandex|l3v_left|EmptyVastUrl|vast_init|crtm'.split('|'), 0, {}))
!function t(e) {
    var r, i;
    r = this,
    i = function() {
        "use strict";
        function r(t, e) {
            var r = Object.keys(t);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(t);
                e && (i = i.filter((function(e) {
                    return Object.getOwnPropertyDescriptor(t, e).enumerable
                }
                ))),
                r.push.apply(r, i)
            }
            return r
        }
        function i(t) {
            for (var e = 1; e < arguments.length; e++) {
                var i = null != arguments[e] ? arguments[e] : {};
                e % 2 ? r(Object(i), !0).forEach((function(e) {
                    var r, a, s;
                    r = t,
                    a = e,
                    s = i[e],
                    (a = n(a))in r ? Object.defineProperty(r, a, {
                        value: s,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : r[a] = s
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(i)) : r(Object(i)).forEach((function(e) {
                    Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(i, e))
                }
                ))
            }
            return t
        }
        function n(t) {
            var e = function(t, e) {
                if ("object" != typeof t || !t)
                    return t;
                var r = t[Symbol.toPrimitive];
                if (void 0 !== r) {
                    var i = r.call(t, e || "default");
                    if ("object" != typeof i)
                        return i;
                    throw new TypeError("@@toPrimitive must return a primitive value.")
                }
                return ("string" === e ? String : Number)(t)
            }(t, "string");
            return "symbol" == typeof e ? e : String(e)
        }
        function a(t, e) {
            for (var r = 0; r < e.length; r++) {
                var i = e[r];
                i.enumerable = i.enumerable || !1,
                i.configurable = !0,
                "value"in i && (i.writable = !0),
                Object.defineProperty(t, n(i.key), i)
            }
        }
        function s(t, e, r) {
            return e && a(t.prototype, e),
            r && a(t, r),
            Object.defineProperty(t, "prototype", {
                writable: !1
            }),
            t
        }
        function o() {
            return o = Object.assign ? Object.assign.bind() : function(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var r = arguments[e];
                    for (var i in r)
                        Object.prototype.hasOwnProperty.call(r, i) && (t[i] = r[i])
                }
                return t
            }
            ,
            o.apply(this, arguments)
        }
        function l(t, e) {
            t.prototype = Object.create(e.prototype),
            t.prototype.constructor = t,
            h(t, e)
        }
        function u(t) {
            return u = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
                return t.__proto__ || Object.getPrototypeOf(t)
            }
            ,
            u(t)
        }
        function h(t, e) {
            return h = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
                return t.__proto__ = e,
                t
            }
            ,
            h(t, e)
        }
        function d(t, e, r) {
            return d = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                    return !1;
                if (Reflect.construct.sham)
                    return !1;
                if ("function" == typeof Proxy)
                    return !0;
                try {
                    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                    ))),
                    !0
                } catch (t) {
                    return !1
                }
            }() ? Reflect.construct.bind() : function(t, e, r) {
                var i = [null];
                i.push.apply(i, e);
                var n = new (Function.bind.apply(t, i));
                return r && h(n, r.prototype),
                n
            }
            ,
            d.apply(null, arguments)
        }
        function c(t) {
            var e = "function" == typeof Map ? new Map : void 0;
            return c = function(t) {
                if (null === t || !function(t) {
                    try {
                        return -1 !== Function.toString.call(t).indexOf("[native code]")
                    } catch (e) {
                        return "function" == typeof t
                    }
                }(t))
                    return t;
                if ("function" != typeof t)
                    throw new TypeError("Super expression must either be null or a function");
                if (void 0 !== e) {
                    if (e.has(t))
                        return e.get(t);
                    e.set(t, r)
                }
                function r() {
                    return d(t, arguments, u(this).constructor)
                }
                return r.prototype = Object.create(t.prototype, {
                    constructor: {
                        value: r,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }),
                h(r, t)
            }
            ,
            c(t)
        }
        function f(t, e) {
            (null == e || e > t.length) && (e = t.length);
            for (var r = 0, i = new Array(e); r < e; r++)
                i[r] = t[r];
            return i
        }
        function g(t, e) {
            var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
            if (r)
                return (r = r.call(t)).next.bind(r);
            if (Array.isArray(t) || (r = function(t, e) {
                if (t) {
                    if ("string" == typeof t)
                        return f(t, e);
                    var r = Object.prototype.toString.call(t).slice(8, -1);
                    return "Object" === r && t.constructor && (r = t.constructor.name),
                    "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? f(t, e) : void 0
                }
            }(t)) || e && t && "number" == typeof t.length) {
                r && (t = r);
                var i = 0;
                return function() {
                    return i >= t.length ? {
                        done: !0
                    } : {
                        done: !1,
                        value: t[i++]
                    }
                }
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }
        function v(t) {
            return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default") ? t.default : t
        }
        var m = {
            exports: {}
        };
        !function(t, e) {
            var r, i, n, a, s;
            r = /^(?=((?:[a-zA-Z0-9+\-.]+:)?))\1(?=((?:\/\/[^\/?#]*)?))\2(?=((?:(?:[^?#\/]*\/)*[^;?#\/]*)?))\3((?:;[^?#]*)?)(\?[^#]*)?(#[^]*)?$/,
            i = /^(?=([^\/?#]*))\1([^]*)$/,
            n = /(?:\/|^)\.(?=\/)/g,
            a = /(?:\/|^)\.\.\/(?!\.\.\/)[^\/]*(?=\/)/g,
            s = {
                buildAbsoluteURL: function(t, e, r) {
                    if (r = r || {},
                    t = t.trim(),
                    !(e = e.trim())) {
                        if (!r.alwaysNormalize)
                            return t;
                        var n = s.parseURL(t);
                        if (!n)
                            throw new Error("Error trying to parse base URL.");
                        return n.path = s.normalizePath(n.path),
                        s.buildURLFromParts(n)
                    }
                    var a = s.parseURL(e);
                    if (!a)
                        throw new Error("Error trying to parse relative URL.");
                    if (a.scheme)
                        return r.alwaysNormalize ? (a.path = s.normalizePath(a.path),
                        s.buildURLFromParts(a)) : e;
                    var o = s.parseURL(t);
                    if (!o)
                        throw new Error("Error trying to parse base URL.");
                    if (!o.netLoc && o.path && "/" !== o.path[0]) {
                        var l = i.exec(o.path);
                        o.netLoc = l[1],
                        o.path = l[2]
                    }
                    o.netLoc && !o.path && (o.path = "/");
                    var u = {
                        scheme: o.scheme,
                        netLoc: a.netLoc,
                        path: null,
                        params: a.params,
                        query: a.query,
                        fragment: a.fragment
                    };
                    if (!a.netLoc && (u.netLoc = o.netLoc,
                    "/" !== a.path[0]))
                        if (a.path) {
                            var h = o.path
                              , d = h.substring(0, h.lastIndexOf("/") + 1) + a.path;
                            u.path = s.normalizePath(d)
                        } else
                            u.path = o.path,
                            a.params || (u.params = o.params,
                            a.query || (u.query = o.query));
                    return null === u.path && (u.path = r.alwaysNormalize ? s.normalizePath(a.path) : a.path),
                    s.buildURLFromParts(u)
                },
                parseURL: function(t) {
                    var e = r.exec(t);
                    return e ? {
                        scheme: e[1] || "",
                        netLoc: e[2] || "",
                        path: e[3] || "",
                        params: e[4] || "",
                        query: e[5] || "",
                        fragment: e[6] || ""
                    } : null
                },
                normalizePath: function(t) {
                    for (t = t.split("").reverse().join("").replace(n, ""); t.length !== (t = t.replace(a, "")).length; )
                        ;
                    return t.split("").reverse().join("")
                },
                buildURLFromParts: function(t) {
                    return t.scheme + t.netLoc + t.path + t.params + t.query + t.fragment
                }
            },
            t.exports = s
        }(m);
        var p = m.exports
          , y = Number.isFinite || function(t) {
            return "number" == typeof t && isFinite(t)
        }
          , E = Number.isSafeInteger || function(t) {
            return "number" == typeof t && Math.abs(t) <= T
        }
          , T = Number.MAX_SAFE_INTEGER || 9007199254740991
          , S = function(t) {
            return t.MEDIA_ATTACHING = "hlsMediaAttaching",
            t.MEDIA_ATTACHED = "hlsMediaAttached",
            t.MEDIA_DETACHING = "hlsMediaDetaching",
            t.MEDIA_DETACHED = "hlsMediaDetached",
            t.BUFFER_RESET = "hlsBufferReset",
            t.BUFFER_CODECS = "hlsBufferCodecs",
            t.BUFFER_CREATED = "hlsBufferCreated",
            t.BUFFER_APPENDING = "hlsBufferAppending",
            t.BUFFER_APPENDED = "hlsBufferAppended",
            t.BUFFER_EOS = "hlsBufferEos",
            t.BUFFER_FLUSHING = "hlsBufferFlushing",
            t.BUFFER_FLUSHED = "hlsBufferFlushed",
            t.MANIFEST_LOADING = "hlsManifestLoading",
            t.MANIFEST_LOADED = "hlsManifestLoaded",
            t.MANIFEST_PARSED = "hlsManifestParsed",
            t.LEVEL_SWITCHING = "hlsLevelSwitching",
            t.LEVEL_SWITCHED = "hlsLevelSwitched",
            t.LEVEL_LOADING = "hlsLevelLoading",
            t.LEVEL_LOADED = "hlsLevelLoaded",
            t.LEVEL_UPDATED = "hlsLevelUpdated",
            t.LEVEL_PTS_UPDATED = "hlsLevelPtsUpdated",
            t.LEVELS_UPDATED = "hlsLevelsUpdated",
            t.AUDIO_TRACKS_UPDATED = "hlsAudioTracksUpdated",
            t.AUDIO_TRACK_SWITCHING = "hlsAudioTrackSwitching",
            t.AUDIO_TRACK_SWITCHED = "hlsAudioTrackSwitched",
            t.AUDIO_TRACK_LOADING = "hlsAudioTrackLoading",
            t.AUDIO_TRACK_LOADED = "hlsAudioTrackLoaded",
            t.SUBTITLE_TRACKS_UPDATED = "hlsSubtitleTracksUpdated",
            t.SUBTITLE_TRACKS_CLEARED = "hlsSubtitleTracksCleared",
            t.SUBTITLE_TRACK_SWITCH = "hlsSubtitleTrackSwitch",
            t.SUBTITLE_TRACK_LOADING = "hlsSubtitleTrackLoading",
            t.SUBTITLE_TRACK_LOADED = "hlsSubtitleTrackLoaded",
            t.SUBTITLE_FRAG_PROCESSED = "hlsSubtitleFragProcessed",
            t.CUES_PARSED = "hlsCuesParsed",
            t.NON_NATIVE_TEXT_TRACKS_FOUND = "hlsNonNativeTextTracksFound",
            t.INIT_PTS_FOUND = "hlsInitPtsFound",
            t.FRAG_LOADING = "hlsFragLoading",
            t.FRAG_LOAD_EMERGENCY_ABORTED = "hlsFragLoadEmergencyAborted",
            t.FRAG_LOADED = "hlsFragLoaded",
            t.FRAG_DECRYPTED = "hlsFragDecrypted",
            t.FRAG_PARSING_INIT_SEGMENT = "hlsFragParsingInitSegment",
            t.FRAG_PARSING_USERDATA = "hlsFragParsingUserdata",
            t.FRAG_PARSING_METADATA = "hlsFragParsingMetadata",
            t.FRAG_PARSED = "hlsFragParsed",
            t.FRAG_BUFFERED = "hlsFragBuffered",
            t.FRAG_CHANGED = "hlsFragChanged",
            t.FPS_DROP = "hlsFpsDrop",
            t.FPS_DROP_LEVEL_CAPPING = "hlsFpsDropLevelCapping",
            t.MAX_AUTO_LEVEL_UPDATED = "hlsMaxAutoLevelUpdated",
            t.ERROR = "hlsError",
            t.DESTROYING = "hlsDestroying",
            t.KEY_LOADING = "hlsKeyLoading",
            t.KEY_LOADED = "hlsKeyLoaded",
            t.LIVE_BACK_BUFFER_REACHED = "hlsLiveBackBufferReached",
            t.BACK_BUFFER_REACHED = "hlsBackBufferReached",
            t.STEERING_MANIFEST_LOADED = "hlsSteeringManifestLoaded",
            t
        }({})
          , L = function(t) {
            return t.NETWORK_ERROR = "networkError",
            t.MEDIA_ERROR = "mediaError",
            t.KEY_SYSTEM_ERROR = "keySystemError",
            t.MUX_ERROR = "muxError",
            t.OTHER_ERROR = "otherError",
            t
        }({})
          , A = function(t) {
            return t.KEY_SYSTEM_NO_KEYS = "keySystemNoKeys",
            t.KEY_SYSTEM_NO_ACCESS = "keySystemNoAccess",
            t.KEY_SYSTEM_NO_SESSION = "keySystemNoSession",
            t.KEY_SYSTEM_NO_CONFIGURED_LICENSE = "keySystemNoConfiguredLicense",
            t.KEY_SYSTEM_LICENSE_REQUEST_FAILED = "keySystemLicenseRequestFailed",
            t.KEY_SYSTEM_SERVER_CERTIFICATE_REQUEST_FAILED = "keySystemServerCertificateRequestFailed",
            t.KEY_SYSTEM_SERVER_CERTIFICATE_UPDATE_FAILED = "keySystemServerCertificateUpdateFailed",
            t.KEY_SYSTEM_SESSION_UPDATE_FAILED = "keySystemSessionUpdateFailed",
            t.KEY_SYSTEM_STATUS_OUTPUT_RESTRICTED = "keySystemStatusOutputRestricted",
            t.KEY_SYSTEM_STATUS_INTERNAL_ERROR = "keySystemStatusInternalError",
            t.MANIFEST_LOAD_ERROR = "manifestLoadError",
            t.MANIFEST_LOAD_TIMEOUT = "manifestLoadTimeOut",
            t.MANIFEST_PARSING_ERROR = "manifestParsingError",
            t.MANIFEST_INCOMPATIBLE_CODECS_ERROR = "manifestIncompatibleCodecsError",
            t.LEVEL_EMPTY_ERROR = "levelEmptyError",
            t.LEVEL_LOAD_ERROR = "levelLoadError",
            t.LEVEL_LOAD_TIMEOUT = "levelLoadTimeOut",
            t.LEVEL_PARSING_ERROR = "levelParsingError",
            t.LEVEL_SWITCH_ERROR = "levelSwitchError",
            t.AUDIO_TRACK_LOAD_ERROR = "audioTrackLoadError",
            t.AUDIO_TRACK_LOAD_TIMEOUT = "audioTrackLoadTimeOut",
            t.SUBTITLE_LOAD_ERROR = "subtitleTrackLoadError",
            t.SUBTITLE_TRACK_LOAD_TIMEOUT = "subtitleTrackLoadTimeOut",
            t.FRAG_LOAD_ERROR = "fragLoadError",
            t.FRAG_LOAD_TIMEOUT = "fragLoadTimeOut",
            t.FRAG_DECRYPT_ERROR = "fragDecryptError",
            t.FRAG_PARSING_ERROR = "fragParsingError",
            t.FRAG_GAP = "fragGap",
            t.REMUX_ALLOC_ERROR = "remuxAllocError",
            t.KEY_LOAD_ERROR = "keyLoadError",
            t.KEY_LOAD_TIMEOUT = "keyLoadTimeOut",
            t.BUFFER_ADD_CODEC_ERROR = "bufferAddCodecError",
            t.BUFFER_INCOMPATIBLE_CODECS_ERROR = "bufferIncompatibleCodecsError",
            t.BUFFER_APPEND_ERROR = "bufferAppendError",
            t.BUFFER_APPENDING_ERROR = "bufferAppendingError",
            t.BUFFER_STALLED_ERROR = "bufferStalledError",
            t.BUFFER_FULL_ERROR = "bufferFullError",
            t.BUFFER_SEEK_OVER_HOLE = "bufferSeekOverHole",
            t.BUFFER_NUDGE_ON_STALL = "bufferNudgeOnStall",
            t.INTERNAL_EXCEPTION = "internalException",
            t.INTERNAL_ABORTED = "aborted",
            t.UNKNOWN = "unknown",
            t
        }({})
          , R = function() {}
          , b = {
            trace: R,
            debug: R,
            log: R,
            warn: R,
            info: R,
            error: R
        }
          , k = b;
        function D(t) {
            for (var e = arguments.length, r = new Array(e > 1 ? e - 1 : 0), i = 1; i < e; i++)
                r[i - 1] = arguments[i];
            r.forEach((function(e) {
                k[e] = t[e] ? t[e].bind(t) : function(t) {
                    var e = self.console[t];
                    return e ? e.bind(self.console, "[" + t + "] >") : R
                }(e)
            }
            ))
        }
        function I(t, e) {
            if ("object" == typeof console && !0 === t || "object" == typeof t) {
                D(t, "debug", "log", "info", "warn", "error");
                try {
                    k.log('Debug logs enabled for "' + e + '" in hls.js version 1.5.17')
                } catch (t) {
                    k = b
                }
            } else
                k = b
        }
        var w = k
          , C = /^(\d+)x(\d+)$/
          , _ = /(.+?)=(".*?"|.*?)(?:,|$)/g
          , x = function() {
            function t(e) {
                "string" == typeof e && (e = t.parseAttrList(e)),
                o(this, e)
            }
            var e = t.prototype;
            return e.decimalInteger = function(t) {
                var e = parseInt(this[t], 10);
                return e > Number.MAX_SAFE_INTEGER ? 1 / 0 : e
            }
            ,
            e.hexadecimalInteger = function(t) {
                if (this[t]) {
                    var e = (this[t] || "0x").slice(2);
                    e = (1 & e.length ? "0" : "") + e;
                    for (var r = new Uint8Array(e.length / 2), i = 0; i < e.length / 2; i++)
                        r[i] = parseInt(e.slice(2 * i, 2 * i + 2), 16);
                    return r
                }
                return null
            }
            ,
            e.hexadecimalIntegerAsNumber = function(t) {
                var e = parseInt(this[t], 16);
                return e > Number.MAX_SAFE_INTEGER ? 1 / 0 : e
            }
            ,
            e.decimalFloatingPoint = function(t) {
                return parseFloat(this[t])
            }
            ,
            e.optionalFloat = function(t, e) {
                var r = this[t];
                return r ? parseFloat(r) : e
            }
            ,
            e.enumeratedString = function(t) {
                return this[t]
            }
            ,
            e.bool = function(t) {
                return "YES" === this[t]
            }
            ,
            e.decimalResolution = function(t) {
                var e = C.exec(this[t]);
                if (null !== e)
                    return {
                        width: parseInt(e[1], 10),
                        height: parseInt(e[2], 10)
                    }
            }
            ,
            t.parseAttrList = function(t) {
                var e, r = {};
                for (_.lastIndex = 0; null !== (e = _.exec(t)); ) {
                    var i = e[2];
                    0 === i.indexOf('"') && i.lastIndexOf('"') === i.length - 1 && (i = i.slice(1, -1)),
                    r[e[1].trim()] = i
                }
                return r
            }
            ,
            s(t, [{
                key: "clientAttrs",
                get: function() {
                    return Object.keys(this).filter((function(t) {
                        return "X-" === t.substring(0, 2)
                    }
                    ))
                }
            }]),
            t
        }();
        function P(t) {
            return "SCTE35-OUT" === t || "SCTE35-IN" === t
        }
        var F = function() {
            function t(t, e) {
                if (this.attr = void 0,
                this._startDate = void 0,
                this._endDate = void 0,
                this._badValueForSameId = void 0,
                e) {
                    var r = e.attr;
                    for (var i in r)
                        if (Object.prototype.hasOwnProperty.call(t, i) && t[i] !== r[i]) {
                            w.warn('DATERANGE tag attribute: "' + i + '" does not match for tags with ID: "' + t.ID + '"'),
                            this._badValueForSameId = i;
                            break
                        }
                    t = o(new x({}), r, t)
                }
                if (this.attr = t,
                this._startDate = new Date(t["START-DATE"]),
                "END-DATE"in this.attr) {
                    var n = new Date(this.attr["END-DATE"]);
                    y(n.getTime()) && (this._endDate = n)
                }
            }
            return s(t, [{
                key: "id",
                get: function() {
                    return this.attr.ID
                }
            }, {
                key: "class",
                get: function() {
                    return this.attr.CLASS
                }
            }, {
                key: "startDate",
                get: function() {
                    return this._startDate
                }
            }, {
                key: "endDate",
                get: function() {
                    if (this._endDate)
                        return this._endDate;
                    var t = this.duration;
                    return null !== t ? new Date(this._startDate.getTime() + 1e3 * t) : null
                }
            }, {
                key: "duration",
                get: function() {
                    if ("DURATION"in this.attr) {
                        var t = this.attr.decimalFloatingPoint("DURATION");
                        if (y(t))
                            return t
                    } else if (this._endDate)
                        return (this._endDate.getTime() - this._startDate.getTime()) / 1e3;
                    return null
                }
            }, {
                key: "plannedDuration",
                get: function() {
                    return "PLANNED-DURATION"in this.attr ? this.attr.decimalFloatingPoint("PLANNED-DURATION") : null
                }
            }, {
                key: "endOnNext",
                get: function() {
                    return this.attr.bool("END-ON-NEXT")
                }
            }, {
                key: "isValid",
                get: function() {
                    return !!this.id && !this._badValueForSameId && y(this.startDate.getTime()) && (null === this.duration || this.duration >= 0) && (!this.endOnNext || !!this.class)
                }
            }]),
            t
        }()
          , M = function() {
            this.aborted = !1,
            this.loaded = 0,
            this.retry = 0,
            this.total = 0,
            this.chunkCount = 0,
            this.bwEstimate = 0,
            this.loading = {
                start: 0,
                first: 0,
                end: 0
            },
            this.parsing = {
                start: 0,
                end: 0
            },
            this.buffering = {
                start: 0,
                first: 0,
                end: 0
            }
        }
          , O = "audio"
          , N = "video"
          , U = "audiovideo"
          , B = function() {
            function t(t) {
                var e;
                this._byteRange = null,
                this._url = null,
                this.baseurl = void 0,
                this.relurl = void 0,
                this.elementaryStreams = ((e = {})[O] = null,
                e[N] = null,
                e[U] = null,
                e),
                this.baseurl = t
            }
            return t.prototype.setByteRange = function(t, e) {
                var r, i = t.split("@", 2);
                r = 1 === i.length ? (null == e ? void 0 : e.byteRangeEndOffset) || 0 : parseInt(i[1]),
                this._byteRange = [r, parseInt(i[0]) + r]
            }
            ,
            s(t, [{
                key: "byteRange",
                get: function() {
                    return this._byteRange ? this._byteRange : []
                }
            }, {
                key: "byteRangeStartOffset",
                get: function() {
                    return this.byteRange[0]
                }
            }, {
                key: "byteRangeEndOffset",
                get: function() {
                    return this.byteRange[1]
                }
            }, {
                key: "url",
                get: function() {
                    return !this._url && this.baseurl && this.relurl && (this._url = p.buildAbsoluteURL(this.baseurl, this.relurl, {
                        alwaysNormalize: !0
                    })),
                    this._url || ""
                },
                set: function(t) {
                    this._url = t
                }
            }]),
            t
        }()
          , G = function(t) {
            function e(e, r) {
                var i;
                return (i = t.call(this, r) || this)._decryptdata = null,
                i.rawProgramDateTime = null,
                i.programDateTime = null,
                i.tagList = [],
                i.duration = 0,
                i.sn = 0,
                i.levelkeys = void 0,
                i.type = void 0,
                i.loader = null,
                i.keyLoader = null,
                i.level = -1,
                i.cc = 0,
                i.startPTS = void 0,
                i.endPTS = void 0,
                i.startDTS = void 0,
                i.endDTS = void 0,
                i.start = 0,
                i.deltaPTS = void 0,
                i.maxStartPTS = void 0,
                i.minEndPTS = void 0,
                i.stats = new M,
                i.data = void 0,
                i.bitrateTest = !1,
                i.title = null,
                i.initSegment = null,
                i.endList = void 0,
                i.gap = void 0,
                i.urlId = 0,
                i.type = e,
                i
            }
            l(e, t);
            var r = e.prototype;
            return r.setKeyFormat = function(t) {
                if (this.levelkeys) {
                    var e = this.levelkeys[t];
                    e && !this._decryptdata && (this._decryptdata = e.getDecryptData(this.sn))
                }
            }
            ,
            r.abortRequests = function() {
                var t, e;
                null == (t = this.loader) || t.abort(),
                null == (e = this.keyLoader) || e.abort()
            }
            ,
            r.setElementaryStreamInfo = function(t, e, r, i, n, a) {
                void 0 === a && (a = !1);
                var s = this.elementaryStreams
                  , o = s[t];
                o ? (o.startPTS = Math.min(o.startPTS, e),
                o.endPTS = Math.max(o.endPTS, r),
                o.startDTS = Math.min(o.startDTS, i),
                o.endDTS = Math.max(o.endDTS, n)) : s[t] = {
                    startPTS: e,
                    endPTS: r,
                    startDTS: i,
                    endDTS: n,
                    partial: a
                }
            }
            ,
            r.clearElementaryStreamInfo = function() {
                var t = this.elementaryStreams;
                t[O] = null,
                t[N] = null,
                t[U] = null
            }
            ,
            s(e, [{
                key: "decryptdata",
                get: function() {
                    if (!this.levelkeys && !this._decryptdata)
                        return null;
                    if (!this._decryptdata && this.levelkeys && !this.levelkeys.NONE) {
                        var t = this.levelkeys.identity;
                        if (t)
                            this._decryptdata = t.getDecryptData(this.sn);
                        else {
                            var e = Object.keys(this.levelkeys);
                            if (1 === e.length)
                                return this._decryptdata = this.levelkeys[e[0]].getDecryptData(this.sn)
                        }
                    }
                    return this._decryptdata
                }
            }, {
                key: "end",
                get: function() {
                    return this.start + this.duration
                }
            }, {
                key: "endProgramDateTime",
                get: function() {
                    if (null === this.programDateTime)
                        return null;
                    if (!y(this.programDateTime))
                        return null;
                    var t = y(this.duration) ? this.duration : 0;
                    return this.programDateTime + 1e3 * t
                }
            }, {
                key: "encrypted",
                get: function() {
                    var t;
                    if (null != (t = this._decryptdata) && t.encrypted)
                        return !0;
                    if (this.levelkeys) {
                        var e = Object.keys(this.levelkeys)
                          , r = e.length;
                        if (r > 1 || 1 === r && this.levelkeys[e[0]].encrypted)
                            return !0
                    }
                    return !1
                }
            }]),
            e
        }(B)
          , K = function(t) {
            function e(e, r, i, n, a) {
                var s;
                (s = t.call(this, i) || this).fragOffset = 0,
                s.duration = 0,
                s.gap = !1,
                s.independent = !1,
                s.relurl = void 0,
                s.fragment = void 0,
                s.index = void 0,
                s.stats = new M,
                s.duration = e.decimalFloatingPoint("DURATION"),
                s.gap = e.bool("GAP"),
                s.independent = e.bool("INDEPENDENT"),
                s.relurl = e.enumeratedString("URI"),
                s.fragment = r,
                s.index = n;
                var o = e.enumeratedString("BYTERANGE");
                return o && s.setByteRange(o, a),
                a && (s.fragOffset = a.fragOffset + a.duration),
                s
            }
            return l(e, t),
            s(e, [{
                key: "start",
                get: function() {
                    return this.fragment.start + this.fragOffset
                }
            }, {
                key: "end",
                get: function() {
                    return this.start + this.duration
                }
            }, {
                key: "loaded",
                get: function() {
                    var t = this.elementaryStreams;
                    return !!(t.audio || t.video || t.audiovideo)
                }
            }]),
            e
        }(B)
          , H = function() {
            function t(t) {
                this.PTSKnown = !1,
                this.alignedSliding = !1,
                this.averagetargetduration = void 0,
                this.endCC = 0,
                this.endSN = 0,
                this.fragments = void 0,
                this.fragmentHint = void 0,
                this.partList = null,
                this.dateRanges = void 0,
                this.live = !0,
                this.ageHeader = 0,
                this.advancedDateTime = void 0,
                this.updated = !0,
                this.advanced = !0,
                this.availabilityDelay = void 0,
                this.misses = 0,
                this.startCC = 0,
                this.startSN = 0,
                this.startTimeOffset = null,
                this.targetduration = 0,
                this.totalduration = 0,
                this.type = null,
                this.url = void 0,
                this.m3u8 = "",
                this.version = null,
                this.canBlockReload = !1,
                this.canSkipUntil = 0,
                this.canSkipDateRanges = !1,
                this.skippedSegments = 0,
                this.recentlyRemovedDateranges = void 0,
                this.partHoldBack = 0,
                this.holdBack = 0,
                this.partTarget = 0,
                this.preloadHint = void 0,
                this.renditionReports = void 0,
                this.tuneInGoal = 0,
                this.deltaUpdateFailed = void 0,
                this.driftStartTime = 0,
                this.driftEndTime = 0,
                this.driftStart = 0,
                this.driftEnd = 0,
                this.encryptedFragments = void 0,
                this.playlistParsingError = null,
                this.variableList = null,
                this.hasVariableRefs = !1,
                this.fragments = [],
                this.encryptedFragments = [],
                this.dateRanges = {},
                this.url = t
            }
            return t.prototype.reloaded = function(t) {
                if (!t)
                    return this.advanced = !0,
                    void (this.updated = !0);
                var e = this.lastPartSn - t.lastPartSn
                  , r = this.lastPartIndex - t.lastPartIndex;
                this.updated = this.endSN !== t.endSN || !!r || !!e || !this.live,
                this.advanced = this.endSN > t.endSN || e > 0 || 0 === e && r > 0,
                this.updated || this.advanced ? this.misses = Math.floor(.6 * t.misses) : this.misses = t.misses + 1,
                this.availabilityDelay = t.availabilityDelay
            }
            ,
            s(t, [{
                key: "hasProgramDateTime",
                get: function() {
                    return !!this.fragments.length && y(this.fragments[this.fragments.length - 1].programDateTime)
                }
            }, {
                key: "levelTargetDuration",
                get: function() {
                    return this.averagetargetduration || this.targetduration || 10
                }
            }, {
                key: "drift",
                get: function() {
                    var t = this.driftEndTime - this.driftStartTime;
                    return t > 0 ? 1e3 * (this.driftEnd - this.driftStart) / t : 1
                }
            }, {
                key: "edge",
                get: function() {
                    return this.partEnd || this.fragmentEnd
                }
            }, {
                key: "partEnd",
                get: function() {
                    var t;
                    return null != (t = this.partList) && t.length ? this.partList[this.partList.length - 1].end : this.fragmentEnd
                }
            }, {
                key: "fragmentEnd",
                get: function() {
                    var t;
                    return null != (t = this.fragments) && t.length ? this.fragments[this.fragments.length - 1].end : 0
                }
            }, {
                key: "age",
                get: function() {
                    return this.advancedDateTime ? Math.max(Date.now() - this.advancedDateTime, 0) / 1e3 : 0
                }
            }, {
                key: "lastPartIndex",
                get: function() {
                    var t;
                    return null != (t = this.partList) && t.length ? this.partList[this.partList.length - 1].index : -1
                }
            }, {
                key: "lastPartSn",
                get: function() {
                    var t;
                    return null != (t = this.partList) && t.length ? this.partList[this.partList.length - 1].fragment.sn : this.endSN
                }
            }]),
            t
        }();
        function V(t) {
            return Uint8Array.from(atob(t), (function(t) {
                return t.charCodeAt(0)
            }
            ))
        }
        function Y(t) {
            var e, r, i = t.split(":"), n = null;
            if ("data" === i[0] && 2 === i.length) {
                var a = i[1].split(";")
                  , s = a[a.length - 1].split(",");
                if (2 === s.length) {
                    var o = "base64" === s[0]
                      , l = s[1];
                    o ? (a.splice(-1, 1),
                    n = V(l)) : (e = W(l).subarray(0, 16),
                    (r = new Uint8Array(16)).set(e, 16 - e.length),
                    n = r)
                }
            }
            return n
        }
        function W(t) {
            return Uint8Array.from(unescape(encodeURIComponent(t)), (function(t) {
                return t.charCodeAt(0)
            }
            ))
        }
        var j = "undefined" != typeof self ? self : void 0
          , q = {
            CLEARKEY: "org.w3.clearkey",
            FAIRPLAY: "com.apple.fps",
            PLAYREADY: "com.microsoft.playready",
            WIDEVINE: "com.widevine.alpha"
        }
          , X = "org.w3.clearkey"
          , z = "com.apple.streamingkeydelivery"
          , Q = "com.microsoft.playready"
          , J = "urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed";
        function $(t) {
            switch (t) {
            case z:
                return q.FAIRPLAY;
            case Q:
                return q.PLAYREADY;
            case J:
                return q.WIDEVINE;
            case X:
                return q.CLEARKEY
            }
        }
        var Z = "1077efecc0b24d02ace33c1e52e2fb4b"
          , tt = "e2719d58a985b3c9781ab030af78d30e"
          , et = "9a04f07998404286ab92e65be0885f95"
          , rt = "edef8ba979d64acea3c827dcd51d21ed";
        function it(t) {
            return t === rt ? q.WIDEVINE : t === et ? q.PLAYREADY : t === Z || t === tt ? q.CLEARKEY : void 0
        }
        function nt(t) {
            switch (t) {
            case q.FAIRPLAY:
                return z;
            case q.PLAYREADY:
                return Q;
            case q.WIDEVINE:
                return J;
            case q.CLEARKEY:
                return X
            }
        }
        function at(t) {
            var e = t.drmSystems
              , r = t.widevineLicenseUrl
              , i = e ? [q.FAIRPLAY, q.WIDEVINE, q.PLAYREADY, q.CLEARKEY].filter((function(t) {
                return !!e[t]
            }
            )) : [];
            return !i[q.WIDEVINE] && r && i.push(q.WIDEVINE),
            i
        }
        var st, ot = null != j && null != (st = j.navigator) && st.requestMediaKeySystemAccess ? self.navigator.requestMediaKeySystemAccess.bind(self.navigator) : null;
        function lt(t, e, r) {
            return Uint8Array.prototype.slice ? t.slice(e, r) : new Uint8Array(Array.prototype.slice.call(t, e, r))
        }
        var ut, ht = function(t, e) {
            return e + 10 <= t.length && 73 === t[e] && 68 === t[e + 1] && 51 === t[e + 2] && t[e + 3] < 255 && t[e + 4] < 255 && t[e + 6] < 128 && t[e + 7] < 128 && t[e + 8] < 128 && t[e + 9] < 128
        }, dt = function(t, e) {
            return e + 10 <= t.length && 51 === t[e] && 68 === t[e + 1] && 73 === t[e + 2] && t[e + 3] < 255 && t[e + 4] < 255 && t[e + 6] < 128 && t[e + 7] < 128 && t[e + 8] < 128 && t[e + 9] < 128
        }, ct = function(t, e) {
            for (var r = e, i = 0; ht(t, e); )
                i += 10,
                i += ft(t, e + 6),
                dt(t, e + 10) && (i += 10),
                e += i;
            if (i > 0)
                return t.subarray(r, r + i)
        }, ft = function(t, e) {
            var r = 0;
            return r = (127 & t[e]) << 21,
            r |= (127 & t[e + 1]) << 14,
            r |= (127 & t[e + 2]) << 7,
            r |= 127 & t[e + 3]
        }, gt = function(t, e) {
            return ht(t, e) && ft(t, e + 6) + 10 <= t.length - e
        }, vt = function(t) {
            for (var e = yt(t), r = 0; r < e.length; r++) {
                var i = e[r];
                if (mt(i))
                    return At(i)
            }
        }, mt = function(t) {
            return t && "PRIV" === t.key && "com.apple.streaming.transportStreamTimestamp" === t.info
        }, pt = function(t) {
            var e = String.fromCharCode(t[0], t[1], t[2], t[3])
              , r = ft(t, 4);
            return {
                type: e,
                size: r,
                data: t.subarray(10, 10 + r)
            }
        }, yt = function(t) {
            for (var e = 0, r = []; ht(t, e); ) {
                for (var i = ft(t, e + 6), n = (e += 10) + i; e + 8 < n; ) {
                    var a = pt(t.subarray(e))
                      , s = Et(a);
                    s && r.push(s),
                    e += a.size + 10
                }
                dt(t, e) && (e += 10)
            }
            return r
        }, Et = function(t) {
            return "PRIV" === t.type ? Tt(t) : "W" === t.type[0] ? Lt(t) : St(t)
        }, Tt = function(t) {
            if (!(t.size < 2)) {
                var e = Rt(t.data, !0)
                  , r = new Uint8Array(t.data.subarray(e.length + 1));
                return {
                    key: t.type,
                    info: e,
                    data: r.buffer
                }
            }
        }, St = function(t) {
            if (!(t.size < 2)) {
                if ("TXXX" === t.type) {
                    var e = 1
                      , r = Rt(t.data.subarray(e), !0);
                    e += r.length + 1;
                    var i = Rt(t.data.subarray(e));
                    return {
                        key: t.type,
                        info: r,
                        data: i
                    }
                }
                var n = Rt(t.data.subarray(1));
                return {
                    key: t.type,
                    data: n
                }
            }
        }, Lt = function(t) {
            if ("WXXX" === t.type) {
                if (t.size < 2)
                    return;
                var e = 1
                  , r = Rt(t.data.subarray(e), !0);
                e += r.length + 1;
                var i = Rt(t.data.subarray(e));
                return {
                    key: t.type,
                    info: r,
                    data: i
                }
            }
            var n = Rt(t.data);
            return {
                key: t.type,
                data: n
            }
        }, At = function(t) {
            if (8 === t.data.byteLength) {
                var e = new Uint8Array(t.data)
                  , r = 1 & e[3]
                  , i = (e[4] << 23) + (e[5] << 15) + (e[6] << 7) + e[7];
                return i /= 45,
                r && (i += 47721858.84),
                Math.round(i)
            }
        }, Rt = function(t, e) {
            void 0 === e && (e = !1);
            var r = bt();
            if (r) {
                var i = r.decode(t);
                if (e) {
                    var n = i.indexOf("\0");
                    return -1 !== n ? i.substring(0, n) : i
                }
                return i.replace(/\0/g, "")
            }
            for (var a, s, o, l = t.length, u = "", h = 0; h < l; ) {
                if (0 === (a = t[h++]) && e)
                    return u;
                if (0 !== a && 3 !== a)
                    switch (a >> 4) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 6:
                    case 7:
                        u += String.fromCharCode(a);
                        break;
                    case 12:
                    case 13:
                        s = t[h++],
                        u += String.fromCharCode((31 & a) << 6 | 63 & s);
                        break;
                    case 14:
                        s = t[h++],
                        o = t[h++],
                        u += String.fromCharCode((15 & a) << 12 | (63 & s) << 6 | (63 & o) << 0)
                    }
            }
            return u
        };
        function bt() {
            if (!navigator.userAgent.includes("PlayStation 4"))
                return ut || void 0 === self.TextDecoder || (ut = new self.TextDecoder("utf-8")),
                ut
        }
        var kt = {
            hexDump: function(t) {
                for (var e = "", r = 0; r < t.length; r++) {
                    var i = t[r].toString(16);
                    i.length < 2 && (i = "0" + i),
                    e += i
                }
                return e
            }
        }
          , Dt = Math.pow(2, 32) - 1
          , It = [].push
          , wt = {
            video: 1,
            audio: 2,
            id3: 3,
            text: 4
        };
        function Ct(t) {
            return String.fromCharCode.apply(null, t)
        }
        function _t(t, e) {
            var r = t[e] << 8 | t[e + 1];
            return r < 0 ? 65536 + r : r
        }
        function xt(t, e) {
            var r = Ft(t, e);
            return r < 0 ? 4294967296 + r : r
        }
        function Pt(t, e) {
            var r = xt(t, e);
            return r *= Math.pow(2, 32),
            r += xt(t, e + 4)
        }
        function Ft(t, e) {
            return t[e] << 24 | t[e + 1] << 16 | t[e + 2] << 8 | t[e + 3]
        }
        function Mt(t, e, r) {
            t[e] = r >> 24,
            t[e + 1] = r >> 16 & 255,
            t[e + 2] = r >> 8 & 255,
            t[e + 3] = 255 & r
        }
        function Ot(t, e) {
            var r = [];
            if (!e.length)
                return r;
            for (var i = t.byteLength, n = 0; n < i; ) {
                var a = xt(t, n)
                  , s = a > 1 ? n + a : i;
                if (Ct(t.subarray(n + 4, n + 8)) === e[0])
                    if (1 === e.length)
                        r.push(t.subarray(n + 8, s));
                    else {
                        var o = Ot(t.subarray(n + 8, s), e.slice(1));
                        o.length && It.apply(r, o)
                    }
                n = s
            }
            return r
        }
        function Nt(t) {
            var e = []
              , r = t[0]
              , i = 8
              , n = xt(t, i);
            i += 4;
            var a = 0
              , s = 0;
            0 === r ? (a = xt(t, i),
            s = xt(t, i + 4),
            i += 8) : (a = Pt(t, i),
            s = Pt(t, i + 8),
            i += 16),
            i += 2;
            var o = t.length + s
              , l = _t(t, i);
            i += 2;
            for (var u = 0; u < l; u++) {
                var h = i
                  , d = xt(t, h);
                h += 4;
                var c = 2147483647 & d;
                if (1 == (2147483648 & d) >>> 31)
                    return w.warn("SIDX has hierarchical references (not supported)"),
                    null;
                var f = xt(t, h);
                h += 4,
                e.push({
                    referenceSize: c,
                    subsegmentDuration: f,
                    info: {
                        duration: f / n,
                        start: o,
                        end: o + c - 1
                    }
                }),
                o += c,
                i = h += 4
            }
            return {
                earliestPresentationTime: a,
                timescale: n,
                version: r,
                referencesCount: l,
                references: e
            }
        }
        function Ut(t) {
            for (var e = [], r = Ot(t, ["moov", "trak"]), n = 0; n < r.length; n++) {
                var a = r[n]
                  , s = Ot(a, ["tkhd"])[0];
                if (s) {
                    var o = s[0]
                      , l = xt(s, 0 === o ? 12 : 20)
                      , u = Ot(a, ["mdia", "mdhd"])[0];
                    if (u) {
                        var h = xt(u, 0 === (o = u[0]) ? 12 : 20)
                          , d = Ot(a, ["mdia", "hdlr"])[0];
                        if (d) {
                            var c = Ct(d.subarray(8, 12))
                              , f = {
                                soun: O,
                                vide: N
                            }[c];
                            if (f) {
                                var g = Bt(Ot(a, ["mdia", "minf", "stbl", "stsd"])[0]);
                                e[l] = {
                                    timescale: h,
                                    type: f
                                },
                                e[f] = i({
                                    timescale: h,
                                    id: l
                                }, g)
                            }
                        }
                    }
                }
            }
            return Ot(t, ["moov", "mvex", "trex"]).forEach((function(t) {
                var r = xt(t, 4)
                  , i = e[r];
                i && (i.default = {
                    duration: xt(t, 12),
                    flags: xt(t, 20)
                })
            }
            )),
            e
        }
        function Bt(t) {
            var e = t.subarray(8)
              , r = e.subarray(86)
              , i = Ct(e.subarray(4, 8))
              , n = i
              , a = "enca" === i || "encv" === i;
            if (a) {
                var s = Ot(e, [i])[0];
                Ot(s.subarray("enca" === i ? 28 : 78), ["sinf"]).forEach((function(t) {
                    var e = Ot(t, ["schm"])[0];
                    if (e) {
                        var r = Ct(e.subarray(4, 8));
                        if ("cbcs" === r || "cenc" === r) {
                            var i = Ot(t, ["frma"])[0];
                            i && (n = Ct(i))
                        }
                    }
                }
                ))
            }
            switch (n) {
            case "avc1":
            case "avc2":
            case "avc3":
            case "avc4":
                var o = Ot(r, ["avcC"])[0];
                n += "." + Kt(o[1]) + Kt(o[2]) + Kt(o[3]);
                break;
            case "mp4a":
                var l = Ot(e, [i])[0]
                  , u = Ot(l.subarray(28), ["esds"])[0];
                if (u && u.length > 12) {
                    var h = 4;
                    if (3 !== u[h++])
                        break;
                    h = Gt(u, h),
                    h += 2;
                    var d = u[h++];
                    if (128 & d && (h += 2),
                    64 & d && (h += u[h++]),
                    4 !== u[h++])
                        break;
                    h = Gt(u, h);
                    var c = u[h++];
                    if (64 !== c)
                        break;
                    if (n += "." + Kt(c),
                    h += 12,
                    5 !== u[h++])
                        break;
                    h = Gt(u, h);
                    var f = u[h++]
                      , g = (248 & f) >> 3;
                    31 === g && (g += 1 + ((7 & f) << 3) + ((224 & u[h]) >> 5)),
                    n += "." + g
                }
                break;
            case "hvc1":
            case "hev1":
                var v = Ot(r, ["hvcC"])[0]
                  , m = v[1]
                  , p = ["", "A", "B", "C"][m >> 6]
                  , y = 31 & m
                  , E = xt(v, 2)
                  , T = (32 & m) >> 5 ? "H" : "L"
                  , S = v[12]
                  , L = v.subarray(6, 12);
                n += "." + p + y,
                n += "." + E.toString(16).toUpperCase(),
                n += "." + T + S;
                for (var A = "", R = L.length; R--; ) {
                    var b = L[R];
                    (b || A) && (A = "." + b.toString(16).toUpperCase() + A)
                }
                n += A;
                break;
            case "dvh1":
            case "dvhe":
                var k = Ot(r, ["dvcC"])[0]
                  , D = k[2] >> 1 & 127
                  , I = k[2] << 5 & 32 | k[3] >> 3 & 31;
                n += "." + Ht(D) + "." + Ht(I);
                break;
            case "vp09":
                var w = Ot(r, ["vpcC"])[0]
                  , C = w[4]
                  , _ = w[5]
                  , x = w[6] >> 4 & 15;
                n += "." + Ht(C) + "." + Ht(_) + "." + Ht(x);
                break;
            case "av01":
                var P = Ot(r, ["av1C"])[0]
                  , F = P[1] >>> 5
                  , M = 31 & P[1]
                  , O = P[2] >>> 7 ? "H" : "M"
                  , N = (64 & P[2]) >> 6
                  , U = (32 & P[2]) >> 5
                  , B = 2 === F && N ? U ? 12 : 10 : N ? 10 : 8
                  , G = (16 & P[2]) >> 4
                  , K = (8 & P[2]) >> 3
                  , H = (4 & P[2]) >> 2
                  , V = 3 & P[2];
                n += "." + F + "." + Ht(M) + O + "." + Ht(B) + "." + G + "." + K + H + V + "." + Ht(1) + "." + Ht(1) + "." + Ht(1) + ".0"
            }
            return {
                codec: n,
                encrypted: a
            }
        }
        function Gt(t, e) {
            for (var r = e + 5; 128 & t[e++] && e < r; )
                ;
            return e
        }
        function Kt(t) {
            return ("0" + t.toString(16).toUpperCase()).slice(-2)
        }
        function Ht(t) {
            return (t < 10 ? "0" : "") + t
        }
        function Vt(t) {
            var e = Ot(t, ["schm"])[0];
            if (e) {
                var r = Ct(e.subarray(4, 8));
                if ("cbcs" === r || "cenc" === r)
                    return Ot(t, ["schi", "tenc"])[0]
            }
            return null
        }
        function Yt(t) {
            var e = xt(t, 0)
              , r = 8;
            1 & e && (r += 4),
            4 & e && (r += 4);
            for (var i = 0, n = xt(t, 4), a = 0; a < n; a++)
                256 & e && (i += xt(t, r),
                r += 4),
                512 & e && (r += 4),
                1024 & e && (r += 4),
                2048 & e && (r += 4);
            return i
        }
        function Wt(t, e) {
            var r = new Uint8Array(t.length + e.length);
            return r.set(t),
            r.set(e, t.length),
            r
        }
        function jt(t, e) {
            var r = []
              , i = e.samples
              , n = e.timescale
              , a = e.id
              , s = !1;
            return Ot(i, ["moof"]).map((function(o) {
                var l = o.byteOffset - 8;
                Ot(o, ["traf"]).map((function(o) {
                    var u = Ot(o, ["tfdt"]).map((function(t) {
                        var e = t[0]
                          , r = xt(t, 4);
                        return 1 === e && (r *= Math.pow(2, 32),
                        r += xt(t, 8)),
                        r / n
                    }
                    ))[0];
                    return void 0 !== u && (t = u),
                    Ot(o, ["tfhd"]).map((function(u) {
                        var h = xt(u, 4)
                          , d = 16777215 & xt(u, 0)
                          , c = 0
                          , f = 0 != (16 & d)
                          , g = 0
                          , v = 0 != (32 & d)
                          , m = 8;
                        h === a && (0 != (1 & d) && (m += 8),
                        0 != (2 & d) && (m += 4),
                        0 != (8 & d) && (c = xt(u, m),
                        m += 4),
                        f && (g = xt(u, m),
                        m += 4),
                        v && (m += 4),
                        "video" === e.type && (s = function(t) {
                            if (!t)
                                return !1;
                            var e = t.indexOf(".")
                              , r = e < 0 ? t : t.substring(0, e);
                            return "hvc1" === r || "hev1" === r || "dvh1" === r || "dvhe" === r
                        }(e.codec)),
                        Ot(o, ["trun"]).map((function(a) {
                            var o = a[0]
                              , u = 16777215 & xt(a, 0)
                              , h = 0 != (1 & u)
                              , d = 0
                              , f = 0 != (4 & u)
                              , v = 0 != (256 & u)
                              , m = 0
                              , p = 0 != (512 & u)
                              , y = 0
                              , E = 0 != (1024 & u)
                              , T = 0 != (2048 & u)
                              , S = 0
                              , L = xt(a, 4)
                              , A = 8;
                            h && (d = xt(a, A),
                            A += 4),
                            f && (A += 4);
                            for (var R = d + l, b = 0; b < L; b++) {
                                if (v ? (m = xt(a, A),
                                A += 4) : m = c,
                                p ? (y = xt(a, A),
                                A += 4) : y = g,
                                E && (A += 4),
                                T && (S = 0 === o ? xt(a, A) : Ft(a, A),
                                A += 4),
                                e.type === N)
                                    for (var k = 0; k < y; ) {
                                        var D = xt(i, R);
                                        qt(s, i[R += 4]) && Xt(i.subarray(R, R + D), s ? 2 : 1, t + S / n, r),
                                        R += D,
                                        k += D + 4
                                    }
                                t += m / n
                            }
                        }
                        )))
                    }
                    ))
                }
                ))
            }
            )),
            r
        }
        function qt(t, e) {
            if (t) {
                var r = e >> 1 & 63;
                return 39 === r || 40 === r
            }
            return 6 == (31 & e)
        }
        function Xt(t, e, r, i) {
            var n = zt(t)
              , a = 0;
            a += e;
            for (var s = 0, o = 0, l = 0; a < n.length; ) {
                s = 0;
                do {
                    if (a >= n.length)
                        break;
                    s += l = n[a++]
                } while (255 === l);
                o = 0;
                do {
                    if (a >= n.length)
                        break;
                    o += l = n[a++]
                } while (255 === l);
                var u = n.length - a
                  , h = a;
                if (o < u)
                    a += o;
                else if (o > u) {
                    w.error("Malformed SEI payload. " + o + " is too small, only " + u + " bytes left to parse.");
                    break
                }
                if (4 === s) {
                    if (181 === n[h++]) {
                        var d = _t(n, h);
                        if (h += 2,
                        49 === d) {
                            var c = xt(n, h);
                            if (h += 4,
                            1195456820 === c) {
                                var f = n[h++];
                                if (3 === f) {
                                    var g = n[h++]
                                      , v = 64 & g
                                      , m = v ? 2 + 3 * (31 & g) : 0
                                      , p = new Uint8Array(m);
                                    if (v) {
                                        p[0] = g;
                                        for (var y = 1; y < m; y++)
                                            p[y] = n[h++]
                                    }
                                    i.push({
                                        type: f,
                                        payloadType: s,
                                        pts: r,
                                        bytes: p
                                    })
                                }
                            }
                        }
                    }
                } else if (5 === s && o > 16) {
                    for (var E = [], T = 0; T < 16; T++) {
                        var S = n[h++].toString(16);
                        E.push(1 == S.length ? "0" + S : S),
                        3 !== T && 5 !== T && 7 !== T && 9 !== T || E.push("-")
                    }
                    for (var L = o - 16, A = new Uint8Array(L), R = 0; R < L; R++)
                        A[R] = n[h++];
                    i.push({
                        payloadType: s,
                        pts: r,
                        uuid: E.join(""),
                        userData: Rt(A),
                        userDataBytes: A
                    })
                }
            }
        }
        function zt(t) {
            for (var e = t.byteLength, r = [], i = 1; i < e - 2; )
                0 === t[i] && 0 === t[i + 1] && 3 === t[i + 2] ? (r.push(i + 2),
                i += 2) : i++;
            if (0 === r.length)
                return t;
            var n = e - r.length
              , a = new Uint8Array(n)
              , s = 0;
            for (i = 0; i < n; s++,
            i++)
                s === r[0] && (s++,
                r.shift()),
                a[i] = t[s];
            return a
        }
        function Qt(t, e, r) {
            if (16 !== t.byteLength)
                throw new RangeError("Invalid system id");
            var i, n, a;
            if (e) {
                i = 1,
                n = new Uint8Array(16 * e.length);
                for (var s = 0; s < e.length; s++) {
                    var o = e[s];
                    if (16 !== o.byteLength)
                        throw new RangeError("Invalid key");
                    n.set(o, 16 * s)
                }
            } else
                i = 0,
                n = new Uint8Array;
            i > 0 ? (a = new Uint8Array(4),
            e.length > 0 && new DataView(a.buffer).setUint32(0, e.length, !1)) : a = new Uint8Array;
            var l = new Uint8Array(4);
            return r && r.byteLength > 0 && new DataView(l.buffer).setUint32(0, r.byteLength, !1),
            function(t) {
                for (var e = arguments.length, r = new Array(e > 1 ? e - 1 : 0), i = 1; i < e; i++)
                    r[i - 1] = arguments[i];
                for (var n = r.length, a = 8, s = n; s--; )
                    a += r[s].byteLength;
                var o = new Uint8Array(a);
                for (o[0] = a >> 24 & 255,
                o[1] = a >> 16 & 255,
                o[2] = a >> 8 & 255,
                o[3] = 255 & a,
                o.set(t, 4),
                s = 0,
                a = 8; s < n; s++)
                    o.set(r[s], a),
                    a += r[s].byteLength;
                return o
            }([112, 115, 115, 104], new Uint8Array([i, 0, 0, 0]), t, a, n, l, r || new Uint8Array)
        }
        function Jt(t) {
            var e = t.getUint32(0)
              , r = t.byteOffset
              , i = t.byteLength;
            if (i < e)
                return {
                    offset: r,
                    size: i
                };
            if (1886614376 !== t.getUint32(4))
                return {
                    offset: r,
                    size: e
                };
            var n = t.getUint32(8) >>> 24;
            if (0 !== n && 1 !== n)
                return {
                    offset: r,
                    size: e
                };
            var a = t.buffer
              , s = kt.hexDump(new Uint8Array(a,r + 12,16))
              , o = t.getUint32(28)
              , l = null
              , u = null;
            if (0 === n) {
                if (e - 32 < o || o < 22)
                    return {
                        offset: r,
                        size: e
                    };
                u = new Uint8Array(a,r + 32,o)
            } else if (1 === n) {
                if (!o || i < r + 32 + 16 * o + 16)
                    return {
                        offset: r,
                        size: e
                    };
                l = [];
                for (var h = 0; h < o; h++)
                    l.push(new Uint8Array(a,r + 32 + 16 * h,16))
            }
            return {
                version: n,
                systemId: s,
                kids: l,
                data: u,
                offset: r,
                size: e
            }
        }
        var $t = {}
          , Zt = function() {
            function t(t, e, r, i, n) {
                void 0 === i && (i = [1]),
                void 0 === n && (n = null),
                this.uri = void 0,
                this.method = void 0,
                this.keyFormat = void 0,
                this.keyFormatVersions = void 0,
                this.encrypted = void 0,
                this.isCommonEncryption = void 0,
                this.iv = null,
                this.key = null,
                this.keyId = null,
                this.pssh = null,
                this.method = t,
                this.uri = e,
                this.keyFormat = r,
                this.keyFormatVersions = i,
                this.iv = n,
                this.encrypted = !!t && "NONE" !== t,
                this.isCommonEncryption = this.encrypted && "AES-128" !== t
            }
            t.clearKeyUriToKeyIdMap = function() {
                $t = {}
            }
            ;
            var e = t.prototype;
            return e.isSupported = function() {
                if (this.method) {
                    if ("AES-128" === this.method || "NONE" === this.method)
                        return !0;
                    if ("identity" === this.keyFormat)
                        return "SAMPLE-AES" === this.method;
                    switch (this.keyFormat) {
                    case z:
                    case J:
                    case Q:
                    case X:
                        return -1 !== ["ISO-23001-7", "SAMPLE-AES", "SAMPLE-AES-CENC", "SAMPLE-AES-CTR"].indexOf(this.method)
                    }
                }
                return !1
            }
            ,
            e.getDecryptData = function(e) {
                if (!this.encrypted || !this.uri)
                    return null;
                if ("AES-128" === this.method && this.uri && !this.iv) {
                    "number" != typeof e && ("AES-128" !== this.method || this.iv || w.warn('missing IV for initialization segment with method="' + this.method + '" - compliance issue'),
                    e = 0);
                    var r = function(t) {
                        for (var e = new Uint8Array(16), r = 12; r < 16; r++)
                            e[r] = t >> 8 * (15 - r) & 255;
                        return e
                    }(e);
                    return new t(this.method,this.uri,"identity",this.keyFormatVersions,r)
                }
                var i = Y(this.uri);
                if (i)
                    switch (this.keyFormat) {
                    case J:
                        this.pssh = i,
                        i.length >= 22 && (this.keyId = i.subarray(i.length - 22, i.length - 6));
                        break;
                    case Q:
                        var n = new Uint8Array([154, 4, 240, 121, 152, 64, 66, 134, 171, 146, 230, 91, 224, 136, 95, 149]);
                        this.pssh = Qt(n, null, i);
                        var a = new Uint16Array(i.buffer,i.byteOffset,i.byteLength / 2)
                          , s = String.fromCharCode.apply(null, Array.from(a))
                          , o = s.substring(s.indexOf("<"), s.length)
                          , l = (new DOMParser).parseFromString(o, "text/xml").getElementsByTagName("KID")[0];
                        if (l) {
                            var u = l.childNodes[0] ? l.childNodes[0].nodeValue : l.getAttribute("VALUE");
                            if (u) {
                                var h = V(u).subarray(0, 16);
                                !function(t) {
                                    var e = function(t, e, r) {
                                        var i = t[e];
                                        t[e] = t[r],
                                        t[r] = i
                                    };
                                    e(t, 0, 3),
                                    e(t, 1, 2),
                                    e(t, 4, 5),
                                    e(t, 6, 7)
                                }(h),
                                this.keyId = h
                            }
                        }
                        break;
                    default:
                        var d = i.subarray(0, 16);
                        if (16 !== d.length) {
                            var c = new Uint8Array(16);
                            c.set(d, 16 - d.length),
                            d = c
                        }
                        this.keyId = d
                    }
                if (!this.keyId || 16 !== this.keyId.byteLength) {
                    var f = $t[this.uri];
                    if (!f) {
                        var g = Object.keys($t).length % Number.MAX_SAFE_INTEGER;
                        f = new Uint8Array(16),
                        new DataView(f.buffer,12,4).setUint32(0, g),
                        $t[this.uri] = f
                    }
                    this.keyId = f
                }
                return this
            }
            ,
            t
        }()
          , te = /\{\$([a-zA-Z0-9-_]+)\}/g;
        function ee(t) {
            return te.test(t)
        }
        function re(t, e, r) {
            if (null !== t.variableList || t.hasVariableRefs)
                for (var i = r.length; i--; ) {
                    var n = r[i]
                      , a = e[n];
                    a && (e[n] = ie(t, a))
                }
        }
        function ie(t, e) {
            if (null !== t.variableList || t.hasVariableRefs) {
                var r = t.variableList;
                return e.replace(te, (function(e) {
                    var i = e.substring(2, e.length - 1)
                      , n = null == r ? void 0 : r[i];
                    return void 0 === n ? (t.playlistParsingError || (t.playlistParsingError = new Error('Missing preceding EXT-X-DEFINE tag for Variable Reference: "' + i + '"')),
                    e) : n
                }
                ))
            }
            return e
        }
        function ne(t, e, r) {
            var i, n, a = t.variableList;
            if (a || (t.variableList = a = {}),
            "QUERYPARAM"in e) {
                i = e.QUERYPARAM;
                try {
                    var s = new self.URL(r).searchParams;
                    if (!s.has(i))
                        throw new Error('"' + i + '" does not match any query parameter in URI: "' + r + '"');
                    n = s.get(i)
                } catch (e) {
                    t.playlistParsingError || (t.playlistParsingError = new Error("EXT-X-DEFINE QUERYPARAM: " + e.message))
                }
            } else
                i = e.NAME,
                n = e.VALUE;
            i in a ? t.playlistParsingError || (t.playlistParsingError = new Error('EXT-X-DEFINE duplicate Variable Name declarations: "' + i + '"')) : a[i] = n || ""
        }
        function ae(t, e, r) {
            var i = e.IMPORT;
            if (r && i in r) {
                var n = t.variableList;
                n || (t.variableList = n = {}),
                n[i] = r[i]
            } else
                t.playlistParsingError || (t.playlistParsingError = new Error('EXT-X-DEFINE IMPORT attribute not found in Multivariant Playlist: "' + i + '"'))
        }
        function se(t) {
            if (void 0 === t && (t = !0),
            "undefined" != typeof self)
                return (t || !self.MediaSource) && self.ManagedMediaSource || self.MediaSource || self.WebKitMediaSource
        }
        var oe = {
            audio: {
                a3ds: 1,
                "ac-3": .95,
                "ac-4": 1,
                alac: .9,
                alaw: 1,
                dra1: 1,
                "dts+": 1,
                "dts-": 1,
                dtsc: 1,
                dtse: 1,
                dtsh: 1,
                "ec-3": .9,
                enca: 1,
                fLaC: .9,
                flac: .9,
                FLAC: .9,
                g719: 1,
                g726: 1,
                m4ae: 1,
                mha1: 1,
                mha2: 1,
                mhm1: 1,
                mhm2: 1,
                mlpa: 1,
                mp4a: 1,
                "raw ": 1,
                Opus: 1,
                opus: 1,
                samr: 1,
                sawb: 1,
                sawp: 1,
                sevc: 1,
                sqcp: 1,
                ssmv: 1,
                twos: 1,
                ulaw: 1
            },
            video: {
                avc1: 1,
                avc2: 1,
                avc3: 1,
                avc4: 1,
                avcp: 1,
                av01: .8,
                drac: 1,
                dva1: 1,
                dvav: 1,
                dvh1: .7,
                dvhe: .7,
                encv: 1,
                hev1: .75,
                hvc1: .75,
                mjp2: 1,
                mp4v: 1,
                mvc1: 1,
                mvc2: 1,
                mvc3: 1,
                mvc4: 1,
                resv: 1,
                rv60: 1,
                s263: 1,
                svc1: 1,
                svc2: 1,
                "vc-1": 1,
                vp08: 1,
                vp09: .9
            },
            text: {
                stpp: 1,
                wvtt: 1
            }
        };
        function le(t, e, r) {
            return void 0 === r && (r = !0),
            !t.split(",").some((function(t) {
                return !ue(t, e, r)
            }
            ))
        }
        function ue(t, e, r) {
            var i;
            void 0 === r && (r = !0);
            var n = se(r);
            return null != (i = null == n ? void 0 : n.isTypeSupported(he(t, e))) && i
        }
        function he(t, e) {
            return e + '/mp4;codecs="' + t + '"'
        }
        function de(t) {
            if (t) {
                var e = t.substring(0, 4);
                return oe.video[e]
            }
            return 2
        }
        function ce(t) {
            return t.split(",").reduce((function(t, e) {
                var r = oe.video[e];
                return r ? (2 * r + t) / (t ? 3 : 2) : (oe.audio[e] + t) / (t ? 2 : 1)
            }
            ), 0)
        }
        var fe = {}
          , ge = /flac|opus/i;
        function ve(t, e) {
            return void 0 === e && (e = !0),
            t.replace(ge, (function(t) {
                return function(t, e) {
                    if (void 0 === e && (e = !0),
                    fe[t])
                        return fe[t];
                    for (var r = {
                        flac: ["flac", "fLaC", "FLAC"],
                        opus: ["opus", "Opus"]
                    }[t], i = 0; i < r.length; i++)
                        if (ue(r[i], "audio", e))
                            return fe[t] = r[i],
                            r[i];
                    return t
                }(t.toLowerCase(), e)
            }
            ))
        }
        function me(t, e) {
            return t && "mp4a" !== t ? t : e ? e.split(",")[0] : e
        }
        var pe = /#EXT-X-STREAM-INF:([^\r\n]*)(?:[\r\n](?:#[^\r\n]*)?)*([^\r\n]+)|#EXT-X-(SESSION-DATA|SESSION-KEY|DEFINE|CONTENT-STEERING|START):([^\r\n]*)[\r\n]+/g
          , ye = /#EXT-X-MEDIA:(.*)/g
          , Ee = /^#EXT(?:INF|-X-TARGETDURATION):/m
          , Te = new RegExp([/#EXTINF:\s*(\d*(?:\.\d+)?)(?:,(.*)\s+)?/.source, /(?!#) *(\S[^\r\n]*)/.source, /#EXT-X-BYTERANGE:*(.+)/.source, /#EXT-X-PROGRAM-DATE-TIME:(.+)/.source, /#.*/.source].join("|"),"g")
          , Se = new RegExp([/#(EXTM3U)/.source, /#EXT-X-(DATERANGE|DEFINE|KEY|MAP|PART|PART-INF|PLAYLIST-TYPE|PRELOAD-HINT|RENDITION-REPORT|SERVER-CONTROL|SKIP|START):(.+)/.source, /#EXT-X-(BITRATE|DISCONTINUITY-SEQUENCE|MEDIA-SEQUENCE|TARGETDURATION|VERSION): *(\d+)/.source, /#EXT-X-(DISCONTINUITY|ENDLIST|GAP|INDEPENDENT-SEGMENTS)/.source, /(#)([^:]*):(.*)/.source, /(#)(.*)(?:.*)\r?\n?/.source].join("|"))
          , Le = function() {
            function t() {}
            return t.findGroup = function(t, e) {
                for (var r = 0; r < t.length; r++) {
                    var i = t[r];
                    if (i.id === e)
                        return i
                }
            }
            ,
            t.resolve = function(t, e) {
                return p.buildAbsoluteURL(e, t, {
                    alwaysNormalize: !0
                })
            }
            ,
            t.isMediaPlaylist = function(t) {
                return Ee.test(t)
            }
            ,
            t.parseMasterPlaylist = function(e, r) {
                var i, n = {
                    contentSteering: null,
                    levels: [],
                    playlistParsingError: null,
                    sessionData: null,
                    sessionKeys: null,
                    startTimeOffset: null,
                    variableList: null,
                    hasVariableRefs: ee(e)
                }, a = [];
                for (pe.lastIndex = 0; null != (i = pe.exec(e)); )
                    if (i[1]) {
                        var s, o = new x(i[1]);
                        re(n, o, ["CODECS", "SUPPLEMENTAL-CODECS", "ALLOWED-CPC", "PATHWAY-ID", "STABLE-VARIANT-ID", "AUDIO", "VIDEO", "SUBTITLES", "CLOSED-CAPTIONS", "NAME"]);
                        var l = ie(n, i[2])
                          , u = {
                            attrs: o,
                            bitrate: o.decimalInteger("BANDWIDTH") || o.decimalInteger("AVERAGE-BANDWIDTH"),
                            name: o.NAME,
                            url: t.resolve(l, r)
                        }
                          , h = o.decimalResolution("RESOLUTION");
                        h && (u.width = h.width,
                        u.height = h.height),
                        be(o.CODECS, u),
                        null != (s = u.unknownCodecs) && s.length || a.push(u),
                        n.levels.push(u)
                    } else if (i[3]) {
                        var d = i[3]
                          , c = i[4];
                        switch (d) {
                        case "SESSION-DATA":
                            var f = new x(c);
                            re(n, f, ["DATA-ID", "LANGUAGE", "VALUE", "URI"]);
                            var g = f["DATA-ID"];
                            g && (null === n.sessionData && (n.sessionData = {}),
                            n.sessionData[g] = f);
                            break;
                        case "SESSION-KEY":
                            var v = Ae(c, r, n);
                            v.encrypted && v.isSupported() ? (null === n.sessionKeys && (n.sessionKeys = []),
                            n.sessionKeys.push(v)) : w.warn('[Keys] Ignoring invalid EXT-X-SESSION-KEY tag: "' + c + '"');
                            break;
                        case "DEFINE":
                            var m = new x(c);
                            re(n, m, ["NAME", "VALUE", "QUERYPARAM"]),
                            ne(n, m, r);
                            break;
                        case "CONTENT-STEERING":
                            var p = new x(c);
                            re(n, p, ["SERVER-URI", "PATHWAY-ID"]),
                            n.contentSteering = {
                                uri: t.resolve(p["SERVER-URI"], r),
                                pathwayId: p["PATHWAY-ID"] || "."
                            };
                            break;
                        case "START":
                            n.startTimeOffset = Re(c)
                        }
                    }
                var y = a.length > 0 && a.length < n.levels.length;
                return n.levels = y ? a : n.levels,
                0 === n.levels.length && (n.playlistParsingError = new Error("no levels found in manifest")),
                n
            }
            ,
            t.parseMasterPlaylistMedia = function(e, r, i) {
                var n, a = {}, s = i.levels, o = {
                    AUDIO: s.map((function(t) {
                        return {
                            id: t.attrs.AUDIO,
                            audioCodec: t.audioCodec
                        }
                    }
                    )),
                    SUBTITLES: s.map((function(t) {
                        return {
                            id: t.attrs.SUBTITLES,
                            textCodec: t.textCodec
                        }
                    }
                    )),
                    "CLOSED-CAPTIONS": []
                }, l = 0;
                for (ye.lastIndex = 0; null !== (n = ye.exec(e)); ) {
                    var u = new x(n[1])
                      , h = u.TYPE;
                    if (h) {
                        var d = o[h]
                          , c = a[h] || [];
                        a[h] = c,
                        re(i, u, ["URI", "GROUP-ID", "LANGUAGE", "ASSOC-LANGUAGE", "STABLE-RENDITION-ID", "NAME", "INSTREAM-ID", "CHARACTERISTICS", "CHANNELS"]);
                        var f = u.LANGUAGE
                          , g = u["ASSOC-LANGUAGE"]
                          , v = u.CHANNELS
                          , m = u.CHARACTERISTICS
                          , p = u["INSTREAM-ID"]
                          , y = {
                            attrs: u,
                            bitrate: 0,
                            id: l++,
                            groupId: u["GROUP-ID"] || "",
                            name: u.NAME || f || "",
                            type: h,
                            default: u.bool("DEFAULT"),
                            autoselect: u.bool("AUTOSELECT"),
                            forced: u.bool("FORCED"),
                            lang: f,
                            url: u.URI ? t.resolve(u.URI, r) : ""
                        };
                        if (g && (y.assocLang = g),
                        v && (y.channels = v),
                        m && (y.characteristics = m),
                        p && (y.instreamId = p),
                        null != d && d.length) {
                            var E = t.findGroup(d, y.groupId) || d[0];
                            ke(y, E, "audioCodec"),
                            ke(y, E, "textCodec")
                        }
                        c.push(y)
                    }
                }
                return a
            }
            ,
            t.parseLevelPlaylist = function(t, e, r, i, n, a) {
                var s, l, u, h = new H(e), d = h.fragments, c = null, f = 0, g = 0, v = 0, m = 0, p = null, E = new G(i,e), T = -1, S = !1, L = null;
                for (Te.lastIndex = 0,
                h.m3u8 = t,
                h.hasVariableRefs = ee(t); null !== (s = Te.exec(t)); ) {
                    S && (S = !1,
                    (E = new G(i,e)).start = v,
                    E.sn = f,
                    E.cc = m,
                    E.level = r,
                    c && (E.initSegment = c,
                    E.rawProgramDateTime = c.rawProgramDateTime,
                    c.rawProgramDateTime = null,
                    L && (E.setByteRange(L),
                    L = null)));
                    var A = s[1];
                    if (A) {
                        E.duration = parseFloat(A);
                        var R = (" " + s[2]).slice(1);
                        E.title = R || null,
                        E.tagList.push(R ? ["INF", A, R] : ["INF", A])
                    } else if (s[3]) {
                        if (y(E.duration)) {
                            E.start = v,
                            u && we(E, u, h),
                            E.sn = f,
                            E.level = r,
                            E.cc = m,
                            d.push(E);
                            var b = (" " + s[3]).slice(1);
                            E.relurl = ie(h, b),
                            De(E, p),
                            p = E,
                            v += E.duration,
                            f++,
                            g = 0,
                            S = !0
                        }
                    } else if (s[4]) {
                        var k = (" " + s[4]).slice(1);
                        p ? E.setByteRange(k, p) : E.setByteRange(k)
                    } else if (s[5])
                        E.rawProgramDateTime = (" " + s[5]).slice(1),
                        E.tagList.push(["PROGRAM-DATE-TIME", E.rawProgramDateTime]),
                        -1 === T && (T = d.length);
                    else {
                        if (!(s = s[0].match(Se))) {
                            w.warn("No matches on slow regex match for level playlist!");
                            continue
                        }
                        for (l = 1; l < s.length && void 0 === s[l]; l++)
                            ;
                        var D = (" " + s[l]).slice(1)
                          , I = (" " + s[l + 1]).slice(1)
                          , C = s[l + 2] ? (" " + s[l + 2]).slice(1) : "";
                        switch (D) {
                        case "PLAYLIST-TYPE":
                            h.type = I.toUpperCase();
                            break;
                        case "MEDIA-SEQUENCE":
                            f = h.startSN = parseInt(I);
                            break;
                        case "SKIP":
                            var _ = new x(I);
                            re(h, _, ["RECENTLY-REMOVED-DATERANGES"]);
                            var P = _.decimalInteger("SKIPPED-SEGMENTS");
                            if (y(P)) {
                                h.skippedSegments = P;
                                for (var M = P; M--; )
                                    d.unshift(null);
                                f += P
                            }
                            var O = _.enumeratedString("RECENTLY-REMOVED-DATERANGES");
                            O && (h.recentlyRemovedDateranges = O.split("\t"));
                            break;
                        case "TARGETDURATION":
                            h.targetduration = Math.max(parseInt(I), 1);
                            break;
                        case "VERSION":
                            h.version = parseInt(I);
                            break;
                        case "INDEPENDENT-SEGMENTS":
                        case "EXTM3U":
                            break;
                        case "ENDLIST":
                            h.live = !1;
                            break;
                        case "#":
                            (I || C) && E.tagList.push(C ? [I, C] : [I]);
                            break;
                        case "DISCONTINUITY":
                            m++,
                            E.tagList.push(["DIS"]);
                            break;
                        case "GAP":
                            E.gap = !0,
                            E.tagList.push([D]);
                            break;
                        case "BITRATE":
                            E.tagList.push([D, I]);
                            break;
                        case "DATERANGE":
                            var N = new x(I);
                            re(h, N, ["ID", "CLASS", "START-DATE", "END-DATE", "SCTE35-CMD", "SCTE35-OUT", "SCTE35-IN"]),
                            re(h, N, N.clientAttrs);
                            var U = new F(N,h.dateRanges[N.ID]);
                            U.isValid || h.skippedSegments ? h.dateRanges[U.id] = U : w.warn('Ignoring invalid DATERANGE tag: "' + I + '"'),
                            E.tagList.push(["EXT-X-DATERANGE", I]);
                            break;
                        case "DEFINE":
                            var B = new x(I);
                            re(h, B, ["NAME", "VALUE", "IMPORT", "QUERYPARAM"]),
                            "IMPORT"in B ? ae(h, B, a) : ne(h, B, e);
                            break;
                        case "DISCONTINUITY-SEQUENCE":
                            m = parseInt(I);
                            break;
                        case "KEY":
                            var V = Ae(I, e, h);
                            if (V.isSupported()) {
                                if ("NONE" === V.method) {
                                    u = void 0;
                                    break
                                }
                                u || (u = {}),
                                u[V.keyFormat] && (u = o({}, u)),
                                u[V.keyFormat] = V
                            } else
                                w.warn('[Keys] Ignoring invalid EXT-X-KEY tag: "' + I + '"');
                            break;
                        case "START":
                            h.startTimeOffset = Re(I);
                            break;
                        case "MAP":
                            var Y = new x(I);
                            if (re(h, Y, ["BYTERANGE", "URI"]),
                            E.duration) {
                                var W = new G(i,e);
                                Ie(W, Y, r, u),
                                c = W,
                                E.initSegment = c,
                                c.rawProgramDateTime && !E.rawProgramDateTime && (E.rawProgramDateTime = c.rawProgramDateTime)
                            } else {
                                var j = E.byteRangeEndOffset;
                                if (j) {
                                    var q = E.byteRangeStartOffset;
                                    L = j - q + "@" + q
                                } else
                                    L = null;
                                Ie(E, Y, r, u),
                                c = E,
                                S = !0
                            }
                            break;
                        case "SERVER-CONTROL":
                            var X = new x(I);
                            h.canBlockReload = X.bool("CAN-BLOCK-RELOAD"),
                            h.canSkipUntil = X.optionalFloat("CAN-SKIP-UNTIL", 0),
                            h.canSkipDateRanges = h.canSkipUntil > 0 && X.bool("CAN-SKIP-DATERANGES"),
                            h.partHoldBack = X.optionalFloat("PART-HOLD-BACK", 0),
                            h.holdBack = X.optionalFloat("HOLD-BACK", 0);
                            break;
                        case "PART-INF":
                            var z = new x(I);
                            h.partTarget = z.decimalFloatingPoint("PART-TARGET");
                            break;
                        case "PART":
                            var Q = h.partList;
                            Q || (Q = h.partList = []);
                            var J = g > 0 ? Q[Q.length - 1] : void 0
                              , $ = g++
                              , Z = new x(I);
                            re(h, Z, ["BYTERANGE", "URI"]);
                            var tt = new K(Z,E,e,$,J);
                            Q.push(tt),
                            E.duration += tt.duration;
                            break;
                        case "PRELOAD-HINT":
                            var et = new x(I);
                            re(h, et, ["URI"]),
                            h.preloadHint = et;
                            break;
                        case "RENDITION-REPORT":
                            var rt = new x(I);
                            re(h, rt, ["URI"]),
                            h.renditionReports = h.renditionReports || [],
                            h.renditionReports.push(rt);
                            break;
                        default:
                            w.warn("line parsed but not handled: " + s)
                        }
                    }
                }
                p && !p.relurl ? (d.pop(),
                v -= p.duration,
                h.partList && (h.fragmentHint = p)) : h.partList && (De(E, p),
                E.cc = m,
                h.fragmentHint = E,
                u && we(E, u, h));
                var it = d.length
                  , nt = d[0]
                  , at = d[it - 1];
                if ((v += h.skippedSegments * h.targetduration) > 0 && it && at) {
                    h.averagetargetduration = v / it;
                    var st = at.sn;
                    h.endSN = "initSegment" !== st ? st : 0,
                    h.live || (at.endList = !0),
                    nt && (h.startCC = nt.cc)
                } else
                    h.endSN = 0,
                    h.startCC = 0;
                return h.fragmentHint && (v += h.fragmentHint.duration),
                h.totalduration = v,
                h.endCC = m,
                T > 0 && function(t, e) {
                    for (var r = t[e], i = e; i--; ) {
                        var n = t[i];
                        if (!n)
                            return;
                        n.programDateTime = r.programDateTime - 1e3 * n.duration,
                        r = n
                    }
                }(d, T),
                h
            }
            ,
            t
        }();
        function Ae(t, e, r) {
            var i, n, a = new x(t);
            re(r, a, ["KEYFORMAT", "KEYFORMATVERSIONS", "URI", "IV", "URI"]);
            var s = null != (i = a.METHOD) ? i : ""
              , o = a.URI
              , l = a.hexadecimalInteger("IV")
              , u = a.KEYFORMATVERSIONS
              , h = null != (n = a.KEYFORMAT) ? n : "identity";
            o && a.IV && !l && w.error("Invalid IV: " + a.IV);
            var d = o ? Le.resolve(o, e) : ""
              , c = (u || "1").split("/").map(Number).filter(Number.isFinite);
            return new Zt(s,d,h,c,l)
        }
        function Re(t) {
            var e = new x(t).decimalFloatingPoint("TIME-OFFSET");
            return y(e) ? e : null
        }
        function be(t, e) {
            var r = (t || "").split(/[ ,]+/).filter((function(t) {
                return t
            }
            ));
            ["video", "audio", "text"].forEach((function(t) {
                var i = r.filter((function(e) {
                    return function(t, e) {
                        var r = oe[e];
                        return !!r && !!r[t.slice(0, 4)]
                    }(e, t)
                }
                ));
                i.length && (e[t + "Codec"] = i.join(","),
                r = r.filter((function(t) {
                    return -1 === i.indexOf(t)
                }
                )))
            }
            )),
            e.unknownCodecs = r
        }
        function ke(t, e, r) {
            var i = e[r];
            i && (t[r] = i)
        }
        function De(t, e) {
            t.rawProgramDateTime ? t.programDateTime = Date.parse(t.rawProgramDateTime) : null != e && e.programDateTime && (t.programDateTime = e.endProgramDateTime),
            y(t.programDateTime) || (t.programDateTime = null,
            t.rawProgramDateTime = null)
        }
        function Ie(t, e, r, i) {
            t.relurl = e.URI,
            e.BYTERANGE && t.setByteRange(e.BYTERANGE),
            t.level = r,
            t.sn = "initSegment",
            i && (t.levelkeys = i),
            t.initSegment = null
        }
        function we(t, e, r) {
            t.levelkeys = e;
            var i = r.encryptedFragments;
            i.length && i[i.length - 1].levelkeys === e || !Object.keys(e).some((function(t) {
                return e[t].isCommonEncryption
            }
            )) || i.push(t)
        }
        var Ce = "manifest"
          , _e = "level"
          , xe = "audioTrack"
          , Pe = "subtitleTrack"
          , Fe = "main"
          , Me = "audio"
          , Oe = "subtitle";
        function Ne(t) {
            switch (t.type) {
            case xe:
                return Me;
            case Pe:
                return Oe;
            default:
                return Fe
            }
        }
        function Ue(t, e) {
            var r = t.url;
            return void 0 !== r && 0 !== r.indexOf("data:") || (r = e.url),
            r
        }
        var Be = function() {
            function t(t) {
                this.hls = void 0,
                this.loaders = Object.create(null),
                this.variableList = null,
                this.hls = t,
                this.registerListeners()
            }
            var e = t.prototype;
            return e.startLoad = function(t) {}
            ,
            e.stopLoad = function() {
                this.destroyInternalLoaders()
            }
            ,
            e.registerListeners = function() {
                var t = this.hls;
                t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.LEVEL_LOADING, this.onLevelLoading, this),
                t.on(S.AUDIO_TRACK_LOADING, this.onAudioTrackLoading, this),
                t.on(S.SUBTITLE_TRACK_LOADING, this.onSubtitleTrackLoading, this)
            }
            ,
            e.unregisterListeners = function() {
                var t = this.hls;
                t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.LEVEL_LOADING, this.onLevelLoading, this),
                t.off(S.AUDIO_TRACK_LOADING, this.onAudioTrackLoading, this),
                t.off(S.SUBTITLE_TRACK_LOADING, this.onSubtitleTrackLoading, this)
            }
            ,
            e.createInternalLoader = function(t) {
                var e = this.hls.config
                  , r = e.pLoader
                  , i = e.loader
                  , n = new (r || i)(e);
                return this.loaders[t.type] = n,
                n
            }
            ,
            e.getInternalLoader = function(t) {
                return this.loaders[t.type]
            }
            ,
            e.resetInternalLoader = function(t) {
                this.loaders[t] && delete this.loaders[t]
            }
            ,
            e.destroyInternalLoaders = function() {
                for (var t in this.loaders) {
                    var e = this.loaders[t];
                    e && e.destroy(),
                    this.resetInternalLoader(t)
                }
            }
            ,
            e.destroy = function() {
                this.variableList = null,
                this.unregisterListeners(),
                this.destroyInternalLoaders()
            }
            ,
            e.onManifestLoading = function(t, e) {
                var r = e.url;
                this.variableList = null,
                this.load({
                    id: null,
                    level: 0,
                    responseType: "text",
                    type: Ce,
                    url: r,
                    deliveryDirectives: null
                })
            }
            ,
            e.onLevelLoading = function(t, e) {
                var r = e.id
                  , i = e.level
                  , n = e.pathwayId
                  , a = e.url
                  , s = e.deliveryDirectives;
                this.load({
                    id: r,
                    level: i,
                    pathwayId: n,
                    responseType: "text",
                    type: _e,
                    url: a,
                    deliveryDirectives: s
                })
            }
            ,
            e.onAudioTrackLoading = function(t, e) {
                var r = e.id
                  , i = e.groupId
                  , n = e.url
                  , a = e.deliveryDirectives;
                this.load({
                    id: r,
                    groupId: i,
                    level: null,
                    responseType: "text",
                    type: xe,
                    url: n,
                    deliveryDirectives: a
                })
            }
            ,
            e.onSubtitleTrackLoading = function(t, e) {
                var r = e.id
                  , i = e.groupId
                  , n = e.url
                  , a = e.deliveryDirectives;
                this.load({
                    id: r,
                    groupId: i,
                    level: null,
                    responseType: "text",
                    type: Pe,
                    url: n,
                    deliveryDirectives: a
                })
            }
            ,
            e.load = function(t) {
                var e, r, i, n = this, a = this.hls.config, s = this.getInternalLoader(t);
                if (s) {
                    var l = s.context;
                    if (l && l.url === t.url && l.level === t.level)
                        return void w.trace("[playlist-loader]: playlist request ongoing");
                    w.log("[playlist-loader]: aborting previous loader for type: " + t.type),
                    s.abort()
                }
                if (r = t.type === Ce ? a.manifestLoadPolicy.default : o({}, a.playlistLoadPolicy.default, {
                    timeoutRetry: null,
                    errorRetry: null
                }),
                s = this.createInternalLoader(t),
                y(null == (e = t.deliveryDirectives) ? void 0 : e.part) && (t.type === _e && null !== t.level ? i = this.hls.levels[t.level].details : t.type === xe && null !== t.id ? i = this.hls.audioTracks[t.id].details : t.type === Pe && null !== t.id && (i = this.hls.subtitleTracks[t.id].details),
                i)) {
                    var u = i.partTarget
                      , h = i.targetduration;
                    if (u && h) {
                        var d = 1e3 * Math.max(3 * u, .8 * h);
                        r = o({}, r, {
                            maxTimeToFirstByteMs: Math.min(d, r.maxTimeToFirstByteMs),
                            maxLoadTimeMs: Math.min(d, r.maxTimeToFirstByteMs)
                        })
                    }
                }
                var c = r.errorRetry || r.timeoutRetry || {}
                  , f = {
                    loadPolicy: r,
                    timeout: r.maxLoadTimeMs,
                    maxRetry: c.maxNumRetry || 0,
                    retryDelay: c.retryDelayMs || 0,
                    maxRetryDelay: c.maxRetryDelayMs || 0
                }
                  , g = {
                    onSuccess: function(t, e, r, i) {
                        var a = n.getInternalLoader(r);
                        n.resetInternalLoader(r.type);
                        var s = t.data;
                        0 === s.indexOf("#EXTM3U") ? (e.parsing.start = performance.now(),
                        Le.isMediaPlaylist(s) ? n.handleTrackOrLevelPlaylist(t, e, r, i || null, a) : n.handleMasterPlaylist(t, e, r, i)) : n.handleManifestParsingError(t, r, new Error("no EXTM3U delimiter"), i || null, e)
                    },
                    onError: function(t, e, r, i) {
                        n.handleNetworkError(e, r, !1, t, i)
                    },
                    onTimeout: function(t, e, r) {
                        n.handleNetworkError(e, r, !0, void 0, t)
                    }
                };
                s.load(t, f, g)
            }
            ,
            e.handleMasterPlaylist = function(t, e, r, i) {
                var n = this.hls
                  , a = t.data
                  , s = Ue(t, r)
                  , o = Le.parseMasterPlaylist(a, s);
                if (o.playlistParsingError)
                    this.handleManifestParsingError(t, r, o.playlistParsingError, i, e);
                else {
                    var l = o.contentSteering
                      , u = o.levels
                      , h = o.sessionData
                      , d = o.sessionKeys
                      , c = o.startTimeOffset
                      , f = o.variableList;
                    this.variableList = f;
                    var g = Le.parseMasterPlaylistMedia(a, s, o)
                      , v = g.AUDIO
                      , m = void 0 === v ? [] : v
                      , p = g.SUBTITLES
                      , y = g["CLOSED-CAPTIONS"];
                    m.length && (m.some((function(t) {
                        return !t.url
                    }
                    )) || !u[0].audioCodec || u[0].attrs.AUDIO || (w.log("[playlist-loader]: audio codec signaled in quality level, but no embedded audio track signaled, create one"),
                    m.unshift({
                        type: "main",
                        name: "main",
                        groupId: "main",
                        default: !1,
                        autoselect: !1,
                        forced: !1,
                        id: -1,
                        attrs: new x({}),
                        bitrate: 0,
                        url: ""
                    }))),
                    n.trigger(S.MANIFEST_LOADED, {
                        levels: u,
                        audioTracks: m,
                        subtitles: p,
                        captions: y,
                        contentSteering: l,
                        url: s,
                        stats: e,
                        networkDetails: i,
                        sessionData: h,
                        sessionKeys: d,
                        startTimeOffset: c,
                        variableList: f
                    })
                }
            }
            ,
            e.handleTrackOrLevelPlaylist = function(t, e, r, i, n) {
                var a = this.hls
                  , s = r.id
                  , o = r.level
                  , l = r.type
                  , u = Ue(t, r)
                  , h = y(o) ? o : y(s) ? s : 0
                  , d = Ne(r)
                  , c = Le.parseLevelPlaylist(t.data, u, h, d, 0, this.variableList);
                if (l === Ce) {
                    var f = {
                        attrs: new x({}),
                        bitrate: 0,
                        details: c,
                        name: "",
                        url: u
                    };
                    a.trigger(S.MANIFEST_LOADED, {
                        levels: [f],
                        audioTracks: [],
                        url: u,
                        stats: e,
                        networkDetails: i,
                        sessionData: null,
                        sessionKeys: null,
                        contentSteering: null,
                        startTimeOffset: null,
                        variableList: null
                    })
                }
                e.parsing.end = performance.now(),
                r.levelDetails = c,
                this.handlePlaylistLoaded(c, t, e, r, i, n)
            }
            ,
            e.handleManifestParsingError = function(t, e, r, i, n) {
                this.hls.trigger(S.ERROR, {
                    type: L.NETWORK_ERROR,
                    details: A.MANIFEST_PARSING_ERROR,
                    fatal: e.type === Ce,
                    url: t.url,
                    err: r,
                    error: r,
                    reason: r.message,
                    response: t,
                    context: e,
                    networkDetails: i,
                    stats: n
                })
            }
            ,
            e.handleNetworkError = function(t, e, r, n, a) {
                void 0 === r && (r = !1);
                var s = "A network " + (r ? "timeout" : "error" + (n ? " (status " + n.code + ")" : "")) + " occurred while loading " + t.type;
                t.type === _e ? s += ": " + t.level + " id: " + t.id : t.type !== xe && t.type !== Pe || (s += " id: " + t.id + ' group-id: "' + t.groupId + '"');
                var o = new Error(s);
                w.warn("[playlist-loader]: " + s);
                var l = A.UNKNOWN
                  , u = !1
                  , h = this.getInternalLoader(t);
                switch (t.type) {
                case Ce:
                    l = r ? A.MANIFEST_LOAD_TIMEOUT : A.MANIFEST_LOAD_ERROR,
                    u = !0;
                    break;
                case _e:
                    l = r ? A.LEVEL_LOAD_TIMEOUT : A.LEVEL_LOAD_ERROR,
                    u = !1;
                    break;
                case xe:
                    l = r ? A.AUDIO_TRACK_LOAD_TIMEOUT : A.AUDIO_TRACK_LOAD_ERROR,
                    u = !1;
                    break;
                case Pe:
                    l = r ? A.SUBTITLE_TRACK_LOAD_TIMEOUT : A.SUBTITLE_LOAD_ERROR,
                    u = !1
                }
                h && this.resetInternalLoader(t.type);
                var d = {
                    type: L.NETWORK_ERROR,
                    details: l,
                    fatal: u,
                    url: t.url,
                    loader: h,
                    context: t,
                    error: o,
                    networkDetails: e,
                    stats: a
                };
                if (n) {
                    var c = (null == e ? void 0 : e.url) || t.url;
                    d.response = i({
                        url: c,
                        data: void 0
                    }, n)
                }
                this.hls.trigger(S.ERROR, d)
            }
            ,
            e.handlePlaylistLoaded = function(t, e, r, i, n, a) {
                var s = this.hls
                  , o = i.type
                  , l = i.level
                  , u = i.id
                  , h = i.groupId
                  , d = i.deliveryDirectives
                  , c = Ue(e, i)
                  , f = Ne(i)
                  , g = "number" == typeof i.level && f === Fe ? l : void 0;
                if (t.fragments.length) {
                    t.targetduration || (t.playlistParsingError = new Error("Missing Target Duration"));
                    var v = t.playlistParsingError;
                    if (v)
                        s.trigger(S.ERROR, {
                            type: L.NETWORK_ERROR,
                            details: A.LEVEL_PARSING_ERROR,
                            fatal: !1,
                            url: c,
                            error: v,
                            reason: v.message,
                            response: e,
                            context: i,
                            level: g,
                            parent: f,
                            networkDetails: n,
                            stats: r
                        });
                    else
                        switch (t.live && a && (a.getCacheAge && (t.ageHeader = a.getCacheAge() || 0),
                        a.getCacheAge && !isNaN(t.ageHeader) || (t.ageHeader = 0)),
                        o) {
                        case Ce:
                        case _e:
                            s.trigger(S.LEVEL_LOADED, {
                                details: t,
                                level: g || 0,
                                id: u || 0,
                                stats: r,
                                networkDetails: n,
                                deliveryDirectives: d
                            });
                            break;
                        case xe:
                            s.trigger(S.AUDIO_TRACK_LOADED, {
                                details: t,
                                id: u || 0,
                                groupId: h || "",
                                stats: r,
                                networkDetails: n,
                                deliveryDirectives: d
                            });
                            break;
                        case Pe:
                            s.trigger(S.SUBTITLE_TRACK_LOADED, {
                                details: t,
                                id: u || 0,
                                groupId: h || "",
                                stats: r,
                                networkDetails: n,
                                deliveryDirectives: d
                            })
                        }
                } else {
                    var m = new Error("No Segments found in Playlist");
                    s.trigger(S.ERROR, {
                        type: L.NETWORK_ERROR,
                        details: A.LEVEL_EMPTY_ERROR,
                        fatal: !1,
                        url: c,
                        error: m,
                        reason: m.message,
                        response: e,
                        context: i,
                        level: g,
                        parent: f,
                        networkDetails: n,
                        stats: r
                    })
                }
            }
            ,
            t
        }();
        function Ge(t, e) {
            var r;
            try {
                r = new Event("addtrack")
            } catch (t) {
                (r = document.createEvent("Event")).initEvent("addtrack", !1, !1)
            }
            r.track = t,
            e.dispatchEvent(r)
        }
        function Ke(t, e) {
            var r = t.mode;
            if ("disabled" === r && (t.mode = "hidden"),
            t.cues && !t.cues.getCueById(e.id))
                try {
                    if (t.addCue(e),
                    !t.cues.getCueById(e.id))
                        throw new Error("addCue is failed for: " + e)
                } catch (r) {
                    w.debug("[texttrack-utils]: " + r);
                    try {
                        var i = new self.TextTrackCue(e.startTime,e.endTime,e.text);
                        i.id = e.id,
                        t.addCue(i)
                    } catch (t) {
                        w.debug("[texttrack-utils]: Legacy TextTrackCue fallback failed: " + t)
                    }
                }
            "disabled" === r && (t.mode = r)
        }
        function He(t) {
            var e = t.mode;
            if ("disabled" === e && (t.mode = "hidden"),
            t.cues)
                for (var r = t.cues.length; r--; )
                    t.removeCue(t.cues[r]);
            "disabled" === e && (t.mode = e)
        }
        function Ve(t, e, r, i) {
            var n = t.mode;
            if ("disabled" === n && (t.mode = "hidden"),
            t.cues && t.cues.length > 0)
                for (var a = function(t, e, r) {
                    var i = []
                      , n = function(t, e) {
                        if (e < t[0].startTime)
                            return 0;
                        var r = t.length - 1;
                        if (e > t[r].endTime)
                            return -1;
                        for (var i = 0, n = r; i <= n; ) {
                            var a = Math.floor((n + i) / 2);
                            if (e < t[a].startTime)
                                n = a - 1;
                            else {
                                if (!(e > t[a].startTime && i < r))
                                    return a;
                                i = a + 1
                            }
                        }
                        return t[i].startTime - e < e - t[n].startTime ? i : n
                    }(t, e);
                    if (n > -1)
                        for (var a = n, s = t.length; a < s; a++) {
                            var o = t[a];
                            if (o.startTime >= e && o.endTime <= r)
                                i.push(o);
                            else if (o.startTime > r)
                                return i
                        }
                    return i
                }(t.cues, e, r), s = 0; s < a.length; s++)
                    i && !i(a[s]) || t.removeCue(a[s]);
            "disabled" === n && (t.mode = n)
        }
        function Ye(t) {
            for (var e = [], r = 0; r < t.length; r++) {
                var i = t[r];
                "subtitles" !== i.kind && "captions" !== i.kind || !i.label || e.push(t[r])
            }
            return e
        }
        var We = "org.id3"
          , je = "com.apple.quicktime.HLS"
          , qe = "https://aomedia.org/emsg/ID3";
        function Xe() {
            if ("undefined" != typeof self)
                return self.VTTCue || self.TextTrackCue
        }
        function ze(t, e, r, n, a) {
            var s = new t(e,r,"");
            try {
                s.value = n,
                a && (s.type = a)
            } catch (o) {
                s = new t(e,r,JSON.stringify(a ? i({
                    type: a
                }, n) : n))
            }
            return s
        }
        var Qe = function() {
            var t = Xe();
            try {
                t && new t(0,Number.POSITIVE_INFINITY,"")
            } catch (t) {
                return Number.MAX_VALUE
            }
            return Number.POSITIVE_INFINITY
        }();
        function Je(t, e) {
            return t.getTime() / 1e3 - e
        }
        var $e = function() {
            function t(t) {
                this.hls = void 0,
                this.id3Track = null,
                this.media = null,
                this.dateRangeCuesAppended = {},
                this.hls = t,
                this._registerListeners()
            }
            var e = t.prototype;
            return e.destroy = function() {
                this._unregisterListeners(),
                this.id3Track = null,
                this.media = null,
                this.dateRangeCuesAppended = {},
                this.hls = null
            }
            ,
            e._registerListeners = function() {
                var t = this.hls;
                t.on(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.on(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.FRAG_PARSING_METADATA, this.onFragParsingMetadata, this),
                t.on(S.BUFFER_FLUSHING, this.onBufferFlushing, this),
                t.on(S.LEVEL_UPDATED, this.onLevelUpdated, this)
            }
            ,
            e._unregisterListeners = function() {
                var t = this.hls;
                t.off(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.off(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.FRAG_PARSING_METADATA, this.onFragParsingMetadata, this),
                t.off(S.BUFFER_FLUSHING, this.onBufferFlushing, this),
                t.off(S.LEVEL_UPDATED, this.onLevelUpdated, this)
            }
            ,
            e.onMediaAttached = function(t, e) {
                this.media = e.media
            }
            ,
            e.onMediaDetaching = function() {
                this.id3Track && (He(this.id3Track),
                this.id3Track = null,
                this.media = null,
                this.dateRangeCuesAppended = {})
            }
            ,
            e.onManifestLoading = function() {
                this.dateRangeCuesAppended = {}
            }
            ,
            e.createTrack = function(t) {
                var e = this.getID3Track(t.textTracks);
                return e.mode = "hidden",
                e
            }
            ,
            e.getID3Track = function(t) {
                if (this.media) {
                    for (var e = 0; e < t.length; e++) {
                        var r = t[e];
                        if ("metadata" === r.kind && "id3" === r.label)
                            return Ge(r, this.media),
                            r
                    }
                    return this.media.addTextTrack("metadata", "id3")
                }
            }
            ,
            e.onFragParsingMetadata = function(t, e) {
                if (this.media) {
                    var r = this.hls.config
                      , i = r.enableEmsgMetadataCues
                      , n = r.enableID3MetadataCues;
                    if (i || n) {
                        var a = e.samples;
                        this.id3Track || (this.id3Track = this.createTrack(this.media));
                        var s = Xe();
                        if (s)
                            for (var o = 0; o < a.length; o++) {
                                var l = a[o].type;
                                if ((l !== qe || i) && n) {
                                    var u = yt(a[o].data);
                                    if (u) {
                                        var h = a[o].pts
                                          , d = h + a[o].duration;
                                        d > Qe && (d = Qe),
                                        d - h <= 0 && (d = h + .25);
                                        for (var c = 0; c < u.length; c++) {
                                            var f = u[c];
                                            if (!mt(f)) {
                                                this.updateId3CueEnds(h, l);
                                                var g = ze(s, h, d, f, l);
                                                g && this.id3Track.addCue(g)
                                            }
                                        }
                                    }
                                }
                            }
                    }
                }
            }
            ,
            e.updateId3CueEnds = function(t, e) {
                var r, i = null == (r = this.id3Track) ? void 0 : r.cues;
                if (i)
                    for (var n = i.length; n--; ) {
                        var a = i[n];
                        a.type === e && a.startTime < t && a.endTime === Qe && (a.endTime = t)
                    }
            }
            ,
            e.onBufferFlushing = function(t, e) {
                var r = e.startOffset
                  , i = e.endOffset
                  , n = e.type
                  , a = this.id3Track
                  , s = this.hls;
                if (s) {
                    var o = s.config
                      , l = o.enableEmsgMetadataCues
                      , u = o.enableID3MetadataCues;
                    a && (l || u) && Ve(a, r, i, "audio" === n ? function(t) {
                        return t.type === We && u
                    }
                    : "video" === n ? function(t) {
                        return t.type === qe && l
                    }
                    : function(t) {
                        return t.type === We && u || t.type === qe && l
                    }
                    )
                }
            }
            ,
            e.onLevelUpdated = function(t, e) {
                var r = this
                  , i = e.details;
                if (this.media && i.hasProgramDateTime && this.hls.config.enableDateRangeMetadataCues) {
                    var n = this.dateRangeCuesAppended
                      , a = this.id3Track
                      , s = i.dateRanges
                      , o = Object.keys(s);
                    if (a)
                        for (var l = Object.keys(n).filter((function(t) {
                            return !o.includes(t)
                        }
                        )), u = function() {
                            var t = l[h];
                            Object.keys(n[t].cues).forEach((function(e) {
                                a.removeCue(n[t].cues[e])
                            }
                            )),
                            delete n[t]
                        }, h = l.length; h--; )
                            u();
                    var d = i.fragments[i.fragments.length - 1];
                    if (0 !== o.length && y(null == d ? void 0 : d.programDateTime)) {
                        this.id3Track || (this.id3Track = this.createTrack(this.media));
                        for (var c = d.programDateTime / 1e3 - d.start, f = Xe(), g = function() {
                            var t = o[v]
                              , e = s[t]
                              , i = Je(e.startDate, c)
                              , a = n[t]
                              , l = (null == a ? void 0 : a.cues) || {}
                              , u = (null == a ? void 0 : a.durationKnown) || !1
                              , h = Qe
                              , d = e.endDate;
                            if (d)
                                h = Je(d, c),
                                u = !0;
                            else if (e.endOnNext && !u) {
                                var g = o.reduce((function(t, r) {
                                    if (r !== e.id) {
                                        var i = s[r];
                                        if (i.class === e.class && i.startDate > e.startDate && (!t || e.startDate < t.startDate))
                                            return i
                                    }
                                    return t
                                }
                                ), null);
                                g && (h = Je(g.startDate, c),
                                u = !0)
                            }
                            for (var m, p, y = Object.keys(e.attr), E = 0; E < y.length; E++) {
                                var T = y[E];
                                if ("ID" !== (p = T) && "CLASS" !== p && "START-DATE" !== p && "DURATION" !== p && "END-DATE" !== p && "END-ON-NEXT" !== p) {
                                    var S = l[T];
                                    if (S)
                                        u && !a.durationKnown && (S.endTime = h);
                                    else if (f) {
                                        var L = e.attr[T];
                                        P(T) && (m = L,
                                        L = Uint8Array.from(m.replace(/^0x/, "").replace(/([\da-fA-F]{2}) ?/g, "0x$1 ").replace(/ +$/, "").split(" ")).buffer);
                                        var A = ze(f, i, h, {
                                            key: T,
                                            data: L
                                        }, je);
                                        A && (A.id = t,
                                        r.id3Track.addCue(A),
                                        l[T] = A)
                                    }
                                }
                            }
                            n[t] = {
                                cues: l,
                                dateRange: e,
                                durationKnown: u
                            }
                        }, v = 0; v < o.length; v++)
                            g()
                    }
                }
            }
            ,
            t
        }()
          , Ze = function() {
            function t(t) {
                var e = this;
                this.hls = void 0,
                this.config = void 0,
                this.media = null,
                this.levelDetails = null,
                this.currentTime = 0,
                this.stallCount = 0,
                this._latency = null,
                this.timeupdateHandler = function() {
                    return e.timeupdate()
                }
                ,
                this.hls = t,
                this.config = t.config,
                this.registerListeners()
            }
            var e = t.prototype;
            return e.destroy = function() {
                this.unregisterListeners(),
                this.onMediaDetaching(),
                this.levelDetails = null,
                this.hls = this.timeupdateHandler = null
            }
            ,
            e.registerListeners = function() {
                this.hls.on(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                this.hls.on(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                this.hls.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                this.hls.on(S.LEVEL_UPDATED, this.onLevelUpdated, this),
                this.hls.on(S.ERROR, this.onError, this)
            }
            ,
            e.unregisterListeners = function() {
                this.hls.off(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                this.hls.off(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                this.hls.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                this.hls.off(S.LEVEL_UPDATED, this.onLevelUpdated, this),
                this.hls.off(S.ERROR, this.onError, this)
            }
            ,
            e.onMediaAttached = function(t, e) {
                this.media = e.media,
                this.media.addEventListener("timeupdate", this.timeupdateHandler)
            }
            ,
            e.onMediaDetaching = function() {
                this.media && (this.media.removeEventListener("timeupdate", this.timeupdateHandler),
                this.media = null)
            }
            ,
            e.onManifestLoading = function() {
                this.levelDetails = null,
                this._latency = null,
                this.stallCount = 0
            }
            ,
            e.onLevelUpdated = function(t, e) {
                var r = e.details;
                this.levelDetails = r,
                r.advanced && this.timeupdate(),
                !r.live && this.media && this.media.removeEventListener("timeupdate", this.timeupdateHandler)
            }
            ,
            e.onError = function(t, e) {
                var r;
                e.details === A.BUFFER_STALLED_ERROR && (this.stallCount++,
                null != (r = this.levelDetails) && r.live && w.warn("[playback-rate-controller]: Stall detected, adjusting target latency"))
            }
            ,
            e.timeupdate = function() {
                var t = this.media
                  , e = this.levelDetails;
                if (t && e) {
                    this.currentTime = t.currentTime;
                    var r = this.computeLatency();
                    if (null !== r) {
                        this._latency = r;
                        var i = this.config
                          , n = i.lowLatencyMode
                          , a = i.maxLiveSyncPlaybackRate;
                        if (n && 1 !== a && e.live) {
                            var s = this.targetLatency;
                            if (null !== s) {
                                var o = r - s;
                                if (o < Math.min(this.maxLatency, s + e.targetduration) && o > .05 && this.forwardBufferLength > 1) {
                                    var l = Math.min(2, Math.max(1, a))
                                      , u = Math.round(2 / (1 + Math.exp(-.75 * o - this.edgeStalled)) * 20) / 20;
                                    t.playbackRate = Math.min(l, Math.max(1, u))
                                } else
                                    1 !== t.playbackRate && 0 !== t.playbackRate && (t.playbackRate = 1)
                            }
                        }
                    }
                }
            }
            ,
            e.estimateLiveEdge = function() {
                var t = this.levelDetails;
                return null === t ? null : t.edge + t.age
            }
            ,
            e.computeLatency = function() {
                var t = this.estimateLiveEdge();
                return null === t ? null : t - this.currentTime
            }
            ,
            s(t, [{
                key: "latency",
                get: function() {
                    return this._latency || 0
                }
            }, {
                key: "maxLatency",
                get: function() {
                    var t = this.config
                      , e = this.levelDetails;
                    return void 0 !== t.liveMaxLatencyDuration ? t.liveMaxLatencyDuration : e ? t.liveMaxLatencyDurationCount * e.targetduration : 0
                }
            }, {
                key: "targetLatency",
                get: function() {
                    var t = this.levelDetails;
                    if (null === t)
                        return null;
                    var e = t.holdBack
                      , r = t.partHoldBack
                      , i = t.targetduration
                      , n = this.config
                      , a = n.liveSyncDuration
                      , s = n.liveSyncDurationCount
                      , o = n.lowLatencyMode
                      , l = this.hls.userConfig
                      , u = o && r || e;
                    (l.liveSyncDuration || l.liveSyncDurationCount || 0 === u) && (u = void 0 !== a ? a : s * i);
                    var h = i;
                    return u + Math.min(1 * this.stallCount, h)
                }
            }, {
                key: "liveSyncPosition",
                get: function() {
                    var t = this.estimateLiveEdge()
                      , e = this.targetLatency
                      , r = this.levelDetails;
                    if (null === t || null === e || null === r)
                        return null;
                    var i = r.edge
                      , n = t - e - this.edgeStalled
                      , a = i - r.totalduration
                      , s = i - (this.config.lowLatencyMode && r.partTarget || r.targetduration);
                    return Math.min(Math.max(a, n), s)
                }
            }, {
                key: "drift",
                get: function() {
                    var t = this.levelDetails;
                    return null === t ? 1 : t.drift
                }
            }, {
                key: "edgeStalled",
                get: function() {
                    var t = this.levelDetails;
                    if (null === t)
                        return 0;
                    var e = 3 * (this.config.lowLatencyMode && t.partTarget || t.targetduration);
                    return Math.max(t.age - e, 0)
                }
            }, {
                key: "forwardBufferLength",
                get: function() {
                    var t = this.media
                      , e = this.levelDetails;
                    if (!t || !e)
                        return 0;
                    var r = t.buffered.length;
                    return (r ? t.buffered.end(r - 1) : e.edge) - this.currentTime
                }
            }]),
            t
        }()
          , tr = ["NONE", "TYPE-0", "TYPE-1", null]
          , er = ["SDR", "PQ", "HLG"]
          , rr = ""
          , ir = "YES"
          , nr = "v2";
        function ar(t) {
            var e = t.canSkipUntil
              , r = t.canSkipDateRanges
              , i = t.age;
            return e && i < e / 2 ? r ? nr : ir : rr
        }
        var sr = function() {
            function t(t, e, r) {
                this.msn = void 0,
                this.part = void 0,
                this.skip = void 0,
                this.msn = t,
                this.part = e,
                this.skip = r
            }
            return t.prototype.addDirectives = function(t) {
                var e = new self.URL(t);
                return void 0 !== this.msn && e.searchParams.set("_HLS_msn", this.msn.toString()),
                void 0 !== this.part && e.searchParams.set("_HLS_part", this.part.toString()),
                this.skip && e.searchParams.set("_HLS_skip", this.skip),
                e.href
            }
            ,
            t
        }()
          , or = function() {
            function t(t) {
                this._attrs = void 0,
                this.audioCodec = void 0,
                this.bitrate = void 0,
                this.codecSet = void 0,
                this.url = void 0,
                this.frameRate = void 0,
                this.height = void 0,
                this.id = void 0,
                this.name = void 0,
                this.videoCodec = void 0,
                this.width = void 0,
                this.details = void 0,
                this.fragmentError = 0,
                this.loadError = 0,
                this.loaded = void 0,
                this.realBitrate = 0,
                this.supportedPromise = void 0,
                this.supportedResult = void 0,
                this._avgBitrate = 0,
                this._audioGroups = void 0,
                this._subtitleGroups = void 0,
                this._urlId = 0,
                this.url = [t.url],
                this._attrs = [t.attrs],
                this.bitrate = t.bitrate,
                t.details && (this.details = t.details),
                this.id = t.id || 0,
                this.name = t.name,
                this.width = t.width || 0,
                this.height = t.height || 0,
                this.frameRate = t.attrs.optionalFloat("FRAME-RATE", 0),
                this._avgBitrate = t.attrs.decimalInteger("AVERAGE-BANDWIDTH"),
                this.audioCodec = t.audioCodec,
                this.videoCodec = t.videoCodec,
                this.codecSet = [t.videoCodec, t.audioCodec].filter((function(t) {
                    return !!t
                }
                )).map((function(t) {
                    return t.substring(0, 4)
                }
                )).join(","),
                this.addGroupId("audio", t.attrs.AUDIO),
                this.addGroupId("text", t.attrs.SUBTITLES)
            }
            var e = t.prototype;
            return e.hasAudioGroup = function(t) {
                return lr(this._audioGroups, t)
            }
            ,
            e.hasSubtitleGroup = function(t) {
                return lr(this._subtitleGroups, t)
            }
            ,
            e.addGroupId = function(t, e) {
                if (e)
                    if ("audio" === t) {
                        var r = this._audioGroups;
                        r || (r = this._audioGroups = []),
                        -1 === r.indexOf(e) && r.push(e)
                    } else if ("text" === t) {
                        var i = this._subtitleGroups;
                        i || (i = this._subtitleGroups = []),
                        -1 === i.indexOf(e) && i.push(e)
                    }
            }
            ,
            e.addFallback = function() {}
            ,
            s(t, [{
                key: "maxBitrate",
                get: function() {
                    return Math.max(this.realBitrate, this.bitrate)
                }
            }, {
                key: "averageBitrate",
                get: function() {
                    return this._avgBitrate || this.realBitrate || this.bitrate
                }
            }, {
                key: "attrs",
                get: function() {
                    return this._attrs[0]
                }
            }, {
                key: "codecs",
                get: function() {
                    return this.attrs.CODECS || ""
                }
            }, {
                key: "pathwayId",
                get: function() {
                    return this.attrs["PATHWAY-ID"] || "."
                }
            }, {
                key: "videoRange",
                get: function() {
                    return this.attrs["VIDEO-RANGE"] || "SDR"
                }
            }, {
                key: "score",
                get: function() {
                    return this.attrs.optionalFloat("SCORE", 0)
                }
            }, {
                key: "uri",
                get: function() {
                    return this.url[0] || ""
                }
            }, {
                key: "audioGroups",
                get: function() {
                    return this._audioGroups
                }
            }, {
                key: "subtitleGroups",
                get: function() {
                    return this._subtitleGroups
                }
            }, {
                key: "urlId",
                get: function() {
                    return 0
                },
                set: function(t) {}
            }, {
                key: "audioGroupIds",
                get: function() {
                    return this.audioGroups ? [this.audioGroupId] : void 0
                }
            }, {
                key: "textGroupIds",
                get: function() {
                    return this.subtitleGroups ? [this.textGroupId] : void 0
                }
            }, {
                key: "audioGroupId",
                get: function() {
                    var t;
                    return null == (t = this.audioGroups) ? void 0 : t[0]
                }
            }, {
                key: "textGroupId",
                get: function() {
                    var t;
                    return null == (t = this.subtitleGroups) ? void 0 : t[0]
                }
            }]),
            t
        }();
        function lr(t, e) {
            return !(!e || !t) && -1 !== t.indexOf(e)
        }
        function ur(t, e) {
            var r = e.startPTS;
            if (y(r)) {
                var i, n = 0;
                e.sn > t.sn ? (n = r - t.start,
                i = t) : (n = t.start - r,
                i = e),
                i.duration !== n && (i.duration = n)
            } else
                e.sn > t.sn ? t.cc === e.cc && t.minEndPTS ? e.start = t.start + (t.minEndPTS - t.start) : e.start = t.start + t.duration : e.start = Math.max(t.start - e.duration, 0)
        }
        function hr(t, e, r, i, n, a) {
            i - r <= 0 && (w.warn("Fragment should have a positive duration", e),
            i = r + e.duration,
            a = n + e.duration);
            var s = r
              , o = i
              , l = e.startPTS
              , u = e.endPTS;
            if (y(l)) {
                var h = Math.abs(l - r);
                y(e.deltaPTS) ? e.deltaPTS = Math.max(h, e.deltaPTS) : e.deltaPTS = h,
                s = Math.max(r, l),
                r = Math.min(r, l),
                n = Math.min(n, e.startDTS),
                o = Math.min(i, u),
                i = Math.max(i, u),
                a = Math.max(a, e.endDTS)
            }
            var d = r - e.start;
            0 !== e.start && (e.start = r),
            e.duration = i - e.start,
            e.startPTS = r,
            e.maxStartPTS = s,
            e.startDTS = n,
            e.endPTS = i,
            e.minEndPTS = o,
            e.endDTS = a;
            var c, f = e.sn;
            if (!t || f < t.startSN || f > t.endSN)
                return 0;
            var g = f - t.startSN
              , v = t.fragments;
            for (v[g] = e,
            c = g; c > 0; c--)
                ur(v[c], v[c - 1]);
            for (c = g; c < v.length - 1; c++)
                ur(v[c], v[c + 1]);
            return t.fragmentHint && ur(v[v.length - 1], t.fragmentHint),
            t.PTSKnown = t.alignedSliding = !0,
            d
        }
        function dr(t, e) {
            for (var r = null, i = t.fragments, n = i.length - 1; n >= 0; n--) {
                var a = i[n].initSegment;
                if (a) {
                    r = a;
                    break
                }
            }
            t.fragmentHint && delete t.fragmentHint.endPTS;
            var s, l, u, h, d, c = 0;
            if (function(t, e, r) {
                for (var i = e.skippedSegments, n = Math.max(t.startSN, e.startSN) - e.startSN, a = (t.fragmentHint ? 1 : 0) + (i ? e.endSN : Math.min(t.endSN, e.endSN)) - e.startSN, s = e.startSN - t.startSN, o = e.fragmentHint ? e.fragments.concat(e.fragmentHint) : e.fragments, l = t.fragmentHint ? t.fragments.concat(t.fragmentHint) : t.fragments, u = n; u <= a; u++) {
                    var h = l[s + u]
                      , d = o[u];
                    i && !d && u < i && (d = e.fragments[u] = h),
                    h && d && r(h, d)
                }
            }(t, e, (function(t, i) {
                t.relurl && (c = t.cc - i.cc),
                y(t.startPTS) && y(t.endPTS) && (i.start = i.startPTS = t.startPTS,
                i.startDTS = t.startDTS,
                i.maxStartPTS = t.maxStartPTS,
                i.endPTS = t.endPTS,
                i.endDTS = t.endDTS,
                i.minEndPTS = t.minEndPTS,
                i.duration = t.endPTS - t.startPTS,
                i.duration && (s = i),
                e.PTSKnown = e.alignedSliding = !0),
                i.elementaryStreams = t.elementaryStreams,
                i.loader = t.loader,
                i.stats = t.stats,
                t.initSegment && (i.initSegment = t.initSegment,
                r = t.initSegment)
            }
            )),
            r && (e.fragmentHint ? e.fragments.concat(e.fragmentHint) : e.fragments).forEach((function(t) {
                var e;
                !t || t.initSegment && t.initSegment.relurl !== (null == (e = r) ? void 0 : e.relurl) || (t.initSegment = r)
            }
            )),
            e.skippedSegments)
                if (e.deltaUpdateFailed = e.fragments.some((function(t) {
                    return !t
                }
                )),
                e.deltaUpdateFailed) {
                    w.warn("[level-helper] Previous playlist missing segments skipped in delta playlist");
                    for (var f = e.skippedSegments; f--; )
                        e.fragments.shift();
                    e.startSN = e.fragments[0].sn,
                    e.startCC = e.fragments[0].cc
                } else
                    e.canSkipDateRanges && (e.dateRanges = (l = t.dateRanges,
                    u = e.dateRanges,
                    h = e.recentlyRemovedDateranges,
                    d = o({}, l),
                    h && h.forEach((function(t) {
                        delete d[t]
                    }
                    )),
                    Object.keys(u).forEach((function(t) {
                        var e = new F(u[t].attr,d[t]);
                        e.isValid ? d[t] = e : w.warn('Ignoring invalid Playlist Delta Update DATERANGE tag: "' + JSON.stringify(u[t].attr) + '"')
                    }
                    )),
                    d));
            var g = e.fragments;
            if (c) {
                w.warn("discontinuity sliding from playlist, take drift into account");
                for (var v = 0; v < g.length; v++)
                    g[v].cc += c
            }
            e.skippedSegments && (e.startCC = e.fragments[0].cc),
            function(t, e, r) {
                if (t && e)
                    for (var i = 0, n = 0, a = t.length; n <= a; n++) {
                        var s = t[n]
                          , o = e[n + i];
                        s && o && s.index === o.index && s.fragment.sn === o.fragment.sn ? r(s, o) : i--
                    }
            }(t.partList, e.partList, (function(t, e) {
                e.elementaryStreams = t.elementaryStreams,
                e.stats = t.stats
            }
            )),
            s ? hr(e, s, s.startPTS, s.endPTS, s.startDTS, s.endDTS) : cr(t, e),
            g.length && (e.totalduration = e.edge - g[0].start),
            e.driftStartTime = t.driftStartTime,
            e.driftStart = t.driftStart;
            var m = e.advancedDateTime;
            if (e.advanced && m) {
                var p = e.edge;
                e.driftStart || (e.driftStartTime = m,
                e.driftStart = p),
                e.driftEndTime = m,
                e.driftEnd = p
            } else
                e.driftEndTime = t.driftEndTime,
                e.driftEnd = t.driftEnd,
                e.advancedDateTime = t.advancedDateTime
        }
        function cr(t, e) {
            var r = e.startSN + e.skippedSegments - t.startSN
              , i = t.fragments;
            r < 0 || r >= i.length || fr(e, i[r].start)
        }
        function fr(t, e) {
            if (e) {
                for (var r = t.fragments, i = t.skippedSegments; i < r.length; i++)
                    r[i].start += e;
                t.fragmentHint && (t.fragmentHint.start += e)
            }
        }
        function gr(t, e, r) {
            var i;
            return null != t && t.details ? vr(null == (i = t.details) ? void 0 : i.partList, e, r) : null
        }
        function vr(t, e, r) {
            if (t)
                for (var i = t.length; i--; ) {
                    var n = t[i];
                    if (n.index === r && n.fragment.sn === e)
                        return n
                }
            return null
        }
        function mr(t) {
            t.forEach((function(t, e) {
                var r = t.details;
                null != r && r.fragments && r.fragments.forEach((function(t) {
                    t.level = e
                }
                ))
            }
            ))
        }
        function pr(t) {
            switch (t.details) {
            case A.FRAG_LOAD_TIMEOUT:
            case A.KEY_LOAD_TIMEOUT:
            case A.LEVEL_LOAD_TIMEOUT:
            case A.MANIFEST_LOAD_TIMEOUT:
                return !0
            }
            return !1
        }
        function yr(t, e) {
            var r = pr(e);
            return t.default[(r ? "timeout" : "error") + "Retry"]
        }
        function Er(t, e) {
            var r = "linear" === t.backoff ? 1 : Math.pow(2, e);
            return Math.min(r * t.retryDelayMs, t.maxRetryDelayMs)
        }
        function Tr(t) {
            return i(i({}, t), {
                errorRetry: null,
                timeoutRetry: null
            })
        }
        function Sr(t, e, r, i) {
            if (!t)
                return !1;
            var n = null == i ? void 0 : i.code
              , a = e < t.maxNumRetry && (function(t) {
                return 0 === t && !1 === navigator.onLine || !!t && (t < 400 || t > 499)
            }(n) || !!r);
            return t.shouldRetry ? t.shouldRetry(t, e, r, i, a) : a
        }
        var Lr = function(t, e) {
            for (var r = 0, i = t.length - 1, n = null, a = null; r <= i; ) {
                var s = e(a = t[n = (r + i) / 2 | 0]);
                if (s > 0)
                    r = n + 1;
                else {
                    if (!(s < 0))
                        return a;
                    i = n - 1
                }
            }
            return null
        };
        function Ar(t, e, r, i, n) {
            void 0 === r && (r = 0),
            void 0 === i && (i = 0),
            void 0 === n && (n = .005);
            var a = null;
            if (t) {
                a = e[t.sn - e[0].sn + 1] || null;
                var s = t.endDTS - r;
                s > 0 && s < 15e-7 && (r += 15e-7)
            } else
                0 === r && 0 === e[0].start && (a = e[0]);
            if (a && ((!t || t.level === a.level) && 0 === Rr(r, i, a) || function(t, e, r) {
                if (e && 0 === e.start && e.level < t.level && (e.endPTS || 0) > 0) {
                    var i = e.tagList.reduce((function(t, e) {
                        return "INF" === e[0] && (t += parseFloat(e[1])),
                        t
                    }
                    ), r);
                    return t.start <= i
                }
                return !1
            }(a, t, Math.min(n, i))))
                return a;
            var o = Lr(e, Rr.bind(null, r, i));
            return !o || o === t && a ? a : o
        }
        function Rr(t, e, r) {
            if (void 0 === t && (t = 0),
            void 0 === e && (e = 0),
            r.start <= t && r.start + r.duration > t)
                return 0;
            var i = Math.min(e, r.duration + (r.deltaPTS ? r.deltaPTS : 0));
            return r.start + r.duration - i <= t ? 1 : r.start - i > t && r.start ? -1 : 0
        }
        function br(t, e, r) {
            var i = 1e3 * Math.min(e, r.duration + (r.deltaPTS ? r.deltaPTS : 0));
            return (r.endProgramDateTime || 0) - i > t
        }
        var kr = 0
          , Dr = 2
          , Ir = 3
          , wr = 5
          , Cr = 0
          , _r = 1
          , xr = 2
          , Pr = function() {
            function t(t) {
                this.hls = void 0,
                this.playlistError = 0,
                this.penalizedRenditions = {},
                this.log = void 0,
                this.warn = void 0,
                this.error = void 0,
                this.hls = t,
                this.log = w.log.bind(w, "[info]:"),
                this.warn = w.warn.bind(w, "[warning]:"),
                this.error = w.error.bind(w, "[error]:"),
                this.registerListeners()
            }
            var e = t.prototype;
            return e.registerListeners = function() {
                var t = this.hls;
                t.on(S.ERROR, this.onError, this),
                t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.LEVEL_UPDATED, this.onLevelUpdated, this)
            }
            ,
            e.unregisterListeners = function() {
                var t = this.hls;
                t && (t.off(S.ERROR, this.onError, this),
                t.off(S.ERROR, this.onErrorOut, this),
                t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.LEVEL_UPDATED, this.onLevelUpdated, this))
            }
            ,
            e.destroy = function() {
                this.unregisterListeners(),
                this.hls = null,
                this.penalizedRenditions = {}
            }
            ,
            e.startLoad = function(t) {}
            ,
            e.stopLoad = function() {
                this.playlistError = 0
            }
            ,
            e.getVariantLevelIndex = function(t) {
                return (null == t ? void 0 : t.type) === Fe ? t.level : this.hls.loadLevel
            }
            ,
            e.onManifestLoading = function() {
                this.playlistError = 0,
                this.penalizedRenditions = {}
            }
            ,
            e.onLevelUpdated = function() {
                this.playlistError = 0
            }
            ,
            e.onError = function(t, e) {
                var r, i;
                if (!e.fatal) {
                    var n = this.hls
                      , a = e.context;
                    switch (e.details) {
                    case A.FRAG_LOAD_ERROR:
                    case A.FRAG_LOAD_TIMEOUT:
                    case A.KEY_LOAD_ERROR:
                    case A.KEY_LOAD_TIMEOUT:
                        return void (e.errorAction = this.getFragRetryOrSwitchAction(e));
                    case A.FRAG_PARSING_ERROR:
                        if (null != (r = e.frag) && r.gap)
                            return void (e.errorAction = {
                                action: kr,
                                flags: Cr
                            });
                    case A.FRAG_GAP:
                    case A.FRAG_DECRYPT_ERROR:
                        return e.errorAction = this.getFragRetryOrSwitchAction(e),
                        void (e.errorAction.action = Dr);
                    case A.LEVEL_EMPTY_ERROR:
                    case A.LEVEL_PARSING_ERROR:
                        var s, o, l = e.parent === Fe ? e.level : n.loadLevel;
                        return void (e.details === A.LEVEL_EMPTY_ERROR && null != (s = e.context) && null != (o = s.levelDetails) && o.live ? e.errorAction = this.getPlaylistRetryOrSwitchAction(e, l) : (e.levelRetry = !1,
                        e.errorAction = this.getLevelSwitchAction(e, l)));
                    case A.LEVEL_LOAD_ERROR:
                    case A.LEVEL_LOAD_TIMEOUT:
                        return void ("number" == typeof (null == a ? void 0 : a.level) && (e.errorAction = this.getPlaylistRetryOrSwitchAction(e, a.level)));
                    case A.AUDIO_TRACK_LOAD_ERROR:
                    case A.AUDIO_TRACK_LOAD_TIMEOUT:
                    case A.SUBTITLE_LOAD_ERROR:
                    case A.SUBTITLE_TRACK_LOAD_TIMEOUT:
                        if (a) {
                            var u = n.levels[n.loadLevel];
                            if (u && (a.type === xe && u.hasAudioGroup(a.groupId) || a.type === Pe && u.hasSubtitleGroup(a.groupId)))
                                return e.errorAction = this.getPlaylistRetryOrSwitchAction(e, n.loadLevel),
                                e.errorAction.action = Dr,
                                void (e.errorAction.flags = _r)
                        }
                        return;
                    case A.KEY_SYSTEM_STATUS_OUTPUT_RESTRICTED:
                        var h = n.levels[n.loadLevel]
                          , d = null == h ? void 0 : h.attrs["HDCP-LEVEL"];
                        return void (d ? e.errorAction = {
                            action: Dr,
                            flags: xr,
                            hdcpLevel: d
                        } : this.keySystemError(e));
                    case A.BUFFER_ADD_CODEC_ERROR:
                    case A.REMUX_ALLOC_ERROR:
                    case A.BUFFER_APPEND_ERROR:
                        return void (e.errorAction = this.getLevelSwitchAction(e, null != (i = e.level) ? i : n.loadLevel));
                    case A.INTERNAL_EXCEPTION:
                    case A.BUFFER_APPENDING_ERROR:
                    case A.BUFFER_FULL_ERROR:
                    case A.LEVEL_SWITCH_ERROR:
                    case A.BUFFER_STALLED_ERROR:
                    case A.BUFFER_SEEK_OVER_HOLE:
                    case A.BUFFER_NUDGE_ON_STALL:
                        return void (e.errorAction = {
                            action: kr,
                            flags: Cr
                        })
                    }
                    e.type === L.KEY_SYSTEM_ERROR && this.keySystemError(e)
                }
            }
            ,
            e.keySystemError = function(t) {
                var e = this.getVariantLevelIndex(t.frag);
                t.levelRetry = !1,
                t.errorAction = this.getLevelSwitchAction(t, e)
            }
            ,
            e.getPlaylistRetryOrSwitchAction = function(t, e) {
                var r = yr(this.hls.config.playlistLoadPolicy, t)
                  , i = this.playlistError++;
                if (Sr(r, i, pr(t), t.response))
                    return {
                        action: wr,
                        flags: Cr,
                        retryConfig: r,
                        retryCount: i
                    };
                var n = this.getLevelSwitchAction(t, e);
                return r && (n.retryConfig = r,
                n.retryCount = i),
                n
            }
            ,
            e.getFragRetryOrSwitchAction = function(t) {
                var e = this.hls
                  , r = this.getVariantLevelIndex(t.frag)
                  , i = e.levels[r]
                  , n = e.config
                  , a = n.fragLoadPolicy
                  , s = n.keyLoadPolicy
                  , o = yr(t.details.startsWith("key") ? s : a, t)
                  , l = e.levels.reduce((function(t, e) {
                    return t + e.fragmentError
                }
                ), 0);
                if (i && (t.details !== A.FRAG_GAP && i.fragmentError++,
                Sr(o, l, pr(t), t.response)))
                    return {
                        action: wr,
                        flags: Cr,
                        retryConfig: o,
                        retryCount: l
                    };
                var u = this.getLevelSwitchAction(t, r);
                return o && (u.retryConfig = o,
                u.retryCount = l),
                u
            }
            ,
            e.getLevelSwitchAction = function(t, e) {
                var r = this.hls;
                null == e && (e = r.loadLevel);
                var i = this.hls.levels[e];
                if (i) {
                    var n, a, s = t.details;
                    i.loadError++,
                    s === A.BUFFER_APPEND_ERROR && i.fragmentError++;
                    var o = -1
                      , l = r.levels
                      , u = r.loadLevel
                      , h = r.minAutoLevel
                      , d = r.maxAutoLevel;
                    r.autoLevelEnabled || (r.loadLevel = -1);
                    for (var c, f = null == (n = t.frag) ? void 0 : n.type, g = (f === Me && s === A.FRAG_PARSING_ERROR || "audio" === t.sourceBufferName && (s === A.BUFFER_ADD_CODEC_ERROR || s === A.BUFFER_APPEND_ERROR)) && l.some((function(t) {
                        var e = t.audioCodec;
                        return i.audioCodec !== e
                    }
                    )), v = "video" === t.sourceBufferName && (s === A.BUFFER_ADD_CODEC_ERROR || s === A.BUFFER_APPEND_ERROR) && l.some((function(t) {
                        var e = t.codecSet
                          , r = t.audioCodec;
                        return i.codecSet !== e && i.audioCodec === r
                    }
                    )), m = null != (a = t.context) ? a : {}, p = m.type, y = m.groupId, E = function() {
                        var e = (T + u) % l.length;
                        if (e !== u && e >= h && e <= d && 0 === l[e].loadError) {
                            var r, n, a = l[e];
                            if (s === A.FRAG_GAP && f === Fe && t.frag) {
                                var c = l[e].details;
                                if (c) {
                                    var m = Ar(t.frag, c.fragments, t.frag.start);
                                    if (null != m && m.gap)
                                        return 0
                                }
                            } else {
                                if (p === xe && a.hasAudioGroup(y) || p === Pe && a.hasSubtitleGroup(y))
                                    return 0;
                                if (f === Me && null != (r = i.audioGroups) && r.some((function(t) {
                                    return a.hasAudioGroup(t)
                                }
                                )) || f === Oe && null != (n = i.subtitleGroups) && n.some((function(t) {
                                    return a.hasSubtitleGroup(t)
                                }
                                )) || g && i.audioCodec === a.audioCodec || !g && i.audioCodec !== a.audioCodec || v && i.codecSet === a.codecSet)
                                    return 0
                            }
                            return o = e,
                            1
                        }
                    }, T = l.length; T-- && (0 === (c = E()) || 1 !== c); )
                        ;
                    if (o > -1 && r.loadLevel !== o)
                        return t.levelRetry = !0,
                        this.playlistError = 0,
                        {
                            action: Dr,
                            flags: Cr,
                            nextAutoLevel: o
                        }
                }
                return {
                    action: Dr,
                    flags: _r
                }
            }
            ,
            e.onErrorOut = function(t, e) {
                var r;
                switch (null == (r = e.errorAction) ? void 0 : r.action) {
                case kr:
                    break;
                case Dr:
                    this.sendAlternateToPenaltyBox(e),
                    e.errorAction.resolved || e.details === A.FRAG_GAP ? /MediaSource readyState: ended/.test(e.error.message) && (this.warn('MediaSource ended after "' + e.sourceBufferName + '" sourceBuffer append error. Attempting to recover from media error.'),
                    this.hls.recoverMediaError()) : e.fatal = !0
                }
                e.fatal && this.hls.stopLoad()
            }
            ,
            e.sendAlternateToPenaltyBox = function(t) {
                var e = this.hls
                  , r = t.errorAction;
                if (r) {
                    var i = r.flags
                      , n = r.hdcpLevel
                      , a = r.nextAutoLevel;
                    switch (i) {
                    case Cr:
                        this.switchLevel(t, a);
                        break;
                    case xr:
                        n && (e.maxHdcpLevel = tr[tr.indexOf(n) - 1],
                        r.resolved = !0),
                        this.warn('Restricting playback to HDCP-LEVEL of "' + e.maxHdcpLevel + '" or lower')
                    }
                    r.resolved || this.switchLevel(t, a)
                }
            }
            ,
            e.switchLevel = function(t, e) {
                void 0 !== e && t.errorAction && (this.warn("switching to level " + e + " after " + t.details),
                this.hls.nextAutoLevel = e,
                t.errorAction.resolved = !0,
                this.hls.nextLoadLevel = this.hls.nextAutoLevel)
            }
            ,
            t
        }()
          , Fr = function() {
            function t(t, e) {
                this.hls = void 0,
                this.timer = -1,
                this.requestScheduled = -1,
                this.canLoad = !1,
                this.log = void 0,
                this.warn = void 0,
                this.log = w.log.bind(w, e + ":"),
                this.warn = w.warn.bind(w, e + ":"),
                this.hls = t
            }
            var e = t.prototype;
            return e.destroy = function() {
                this.clearTimer(),
                this.hls = this.log = this.warn = null
            }
            ,
            e.clearTimer = function() {
                -1 !== this.timer && (self.clearTimeout(this.timer),
                this.timer = -1)
            }
            ,
            e.startLoad = function() {
                this.canLoad = !0,
                this.requestScheduled = -1,
                this.loadPlaylist()
            }
            ,
            e.stopLoad = function() {
                this.canLoad = !1,
                this.clearTimer()
            }
            ,
            e.switchParams = function(t, e, r) {
                var i = null == e ? void 0 : e.renditionReports;
                if (i) {
                    for (var n = -1, a = 0; a < i.length; a++) {
                        var s = i[a]
                          , o = void 0;
                        try {
                            o = new self.URL(s.URI,e.url).href
                        } catch (t) {
                            w.warn("Could not construct new URL for Rendition Report: " + t),
                            o = s.URI || ""
                        }
                        if (o === t) {
                            n = a;
                            break
                        }
                        o === t.substring(0, o.length) && (n = a)
                    }
                    if (-1 !== n) {
                        var l = i[n]
                          , u = parseInt(l["LAST-MSN"]) || (null == e ? void 0 : e.lastPartSn)
                          , h = parseInt(l["LAST-PART"]) || (null == e ? void 0 : e.lastPartIndex);
                        if (this.hls.config.lowLatencyMode) {
                            var d = Math.min(e.age - e.partTarget, e.targetduration);
                            h >= 0 && d > e.partTarget && (h += 1)
                        }
                        var c = r && ar(r);
                        return new sr(u,h >= 0 ? h : void 0,c)
                    }
                }
            }
            ,
            e.loadPlaylist = function(t) {
                -1 === this.requestScheduled && (this.requestScheduled = self.performance.now())
            }
            ,
            e.shouldLoadPlaylist = function(t) {
                return this.canLoad && !!t && !!t.url && (!t.details || t.details.live)
            }
            ,
            e.shouldReloadPlaylist = function(t) {
                return -1 === this.timer && -1 === this.requestScheduled && this.shouldLoadPlaylist(t)
            }
            ,
            e.playlistLoaded = function(t, e, r) {
                var i = this
                  , n = e.details
                  , a = e.stats
                  , s = self.performance.now()
                  , o = a.loading.first ? Math.max(0, s - a.loading.first) : 0;
                if (n.advancedDateTime = Date.now() - o,
                n.live || null != r && r.live) {
                    if (n.reloaded(r),
                    r && this.log("live playlist " + t + " " + (n.advanced ? "REFRESHED " + n.lastPartSn + "-" + n.lastPartIndex : n.updated ? "UPDATED" : "MISSED")),
                    r && n.fragments.length > 0 && dr(r, n),
                    !this.canLoad || !n.live)
                        return;
                    var l, u = void 0, h = void 0;
                    if (n.canBlockReload && n.endSN && n.advanced) {
                        var d = this.hls.config.lowLatencyMode
                          , c = n.lastPartSn
                          , f = n.endSN
                          , g = n.lastPartIndex
                          , v = c === f;
                        -1 !== g ? (u = v ? f + 1 : c,
                        h = v ? d ? 0 : g : g + 1) : u = f + 1;
                        var m = n.age
                          , p = m + n.ageHeader
                          , y = Math.min(p - n.partTarget, 1.5 * n.targetduration);
                        if (y > 0) {
                            if (r && y > r.tuneInGoal)
                                this.warn("CDN Tune-in goal increased from: " + r.tuneInGoal + " to: " + y + " with playlist age: " + n.age),
                                y = 0;
                            else {
                                var E = Math.floor(y / n.targetduration);
                                u += E,
                                void 0 !== h && (h += Math.round(y % n.targetduration / n.partTarget)),
                                this.log("CDN Tune-in age: " + n.ageHeader + "s last advanced " + m.toFixed(2) + "s goal: " + y + " skip sn " + E + " to part " + h)
                            }
                            n.tuneInGoal = y
                        }
                        if (l = this.getDeliveryDirectives(n, e.deliveryDirectives, u, h),
                        d || !v)
                            return void this.loadPlaylist(l)
                    } else
                        (n.canBlockReload || n.canSkipUntil) && (l = this.getDeliveryDirectives(n, e.deliveryDirectives, u, h));
                    var T = this.hls.mainForwardBufferInfo
                      , S = T ? T.end - T.len : 0
                      , L = function(t, e) {
                        void 0 === e && (e = 1 / 0);
                        var r = 1e3 * t.targetduration;
                        if (t.updated) {
                            var i = t.fragments;
                            if (i.length && 4 * r > e) {
                                var n = 1e3 * i[i.length - 1].duration;
                                n < r && (r = n)
                            }
                        } else
                            r /= 2;
                        return Math.round(r)
                    }(n, 1e3 * (n.edge - S));
                    n.updated && s > this.requestScheduled + L && (this.requestScheduled = a.loading.start),
                    void 0 !== u && n.canBlockReload ? this.requestScheduled = a.loading.first + L - (1e3 * n.partTarget || 1e3) : -1 === this.requestScheduled || this.requestScheduled + L < s ? this.requestScheduled = s : this.requestScheduled - s <= 0 && (this.requestScheduled += L);
                    var A = this.requestScheduled - s;
                    A = Math.max(0, A),
                    this.log("reload live playlist " + t + " in " + Math.round(A) + " ms"),
                    this.timer = self.setTimeout((function() {
                        return i.loadPlaylist(l)
                    }
                    ), A)
                } else
                    this.clearTimer()
            }
            ,
            e.getDeliveryDirectives = function(t, e, r, i) {
                var n = ar(t);
                return null != e && e.skip && t.deltaUpdateFailed && (r = e.msn,
                i = e.part,
                n = rr),
                new sr(r,i,n)
            }
            ,
            e.checkRetry = function(t) {
                var e = this
                  , r = t.details
                  , i = pr(t)
                  , n = t.errorAction
                  , a = n || {}
                  , s = a.action
                  , o = a.retryCount
                  , l = void 0 === o ? 0 : o
                  , u = a.retryConfig
                  , h = !!n && !!u && (s === wr || !n.resolved && s === Dr);
                if (h) {
                    var d;
                    if (this.requestScheduled = -1,
                    l >= u.maxNumRetry)
                        return !1;
                    if (i && null != (d = t.context) && d.deliveryDirectives)
                        this.warn("Retrying playlist loading " + (l + 1) + "/" + u.maxNumRetry + ' after "' + r + '" without delivery-directives'),
                        this.loadPlaylist();
                    else {
                        var c = Er(u, l);
                        this.timer = self.setTimeout((function() {
                            return e.loadPlaylist()
                        }
                        ), c),
                        this.warn("Retrying playlist loading " + (l + 1) + "/" + u.maxNumRetry + ' after "' + r + '" in ' + c + "ms")
                    }
                    t.levelRetry = !0,
                    n.resolved = !0
                }
                return h
            }
            ,
            t
        }()
          , Mr = function() {
            function t(t, e, r) {
                void 0 === e && (e = 0),
                void 0 === r && (r = 0),
                this.halfLife = void 0,
                this.alpha_ = void 0,
                this.estimate_ = void 0,
                this.totalWeight_ = void 0,
                this.halfLife = t,
                this.alpha_ = t ? Math.exp(Math.log(.5) / t) : 0,
                this.estimate_ = e,
                this.totalWeight_ = r
            }
            var e = t.prototype;
            return e.sample = function(t, e) {
                var r = Math.pow(this.alpha_, t);
                this.estimate_ = e * (1 - r) + r * this.estimate_,
                this.totalWeight_ += t
            }
            ,
            e.getTotalWeight = function() {
                return this.totalWeight_
            }
            ,
            e.getEstimate = function() {
                if (this.alpha_) {
                    var t = 1 - Math.pow(this.alpha_, this.totalWeight_);
                    if (t)
                        return this.estimate_ / t
                }
                return this.estimate_
            }
            ,
            t
        }()
          , Or = function() {
            function t(t, e, r, i) {
                void 0 === i && (i = 100),
                this.defaultEstimate_ = void 0,
                this.minWeight_ = void 0,
                this.minDelayMs_ = void 0,
                this.slow_ = void 0,
                this.fast_ = void 0,
                this.defaultTTFB_ = void 0,
                this.ttfb_ = void 0,
                this.defaultEstimate_ = r,
                this.minWeight_ = .001,
                this.minDelayMs_ = 50,
                this.slow_ = new Mr(t),
                this.fast_ = new Mr(e),
                this.defaultTTFB_ = i,
                this.ttfb_ = new Mr(t)
            }
            var e = t.prototype;
            return e.update = function(t, e) {
                var r = this.slow_
                  , i = this.fast_
                  , n = this.ttfb_;
                r.halfLife !== t && (this.slow_ = new Mr(t,r.getEstimate(),r.getTotalWeight())),
                i.halfLife !== e && (this.fast_ = new Mr(e,i.getEstimate(),i.getTotalWeight())),
                n.halfLife !== t && (this.ttfb_ = new Mr(t,n.getEstimate(),n.getTotalWeight()))
            }
            ,
            e.sample = function(t, e) {
                var r = (t = Math.max(t, this.minDelayMs_)) / 1e3
                  , i = 8 * e / r;
                this.fast_.sample(r, i),
                this.slow_.sample(r, i)
            }
            ,
            e.sampleTTFB = function(t) {
                var e = t / 1e3
                  , r = Math.sqrt(2) * Math.exp(-Math.pow(e, 2) / 2);
                this.ttfb_.sample(r, Math.max(t, 5))
            }
            ,
            e.canEstimate = function() {
                return this.fast_.getTotalWeight() >= this.minWeight_
            }
            ,
            e.getEstimate = function() {
                return this.canEstimate() ? Math.min(this.fast_.getEstimate(), this.slow_.getEstimate()) : this.defaultEstimate_
            }
            ,
            e.getEstimateTTFB = function() {
                return this.ttfb_.getTotalWeight() >= this.minWeight_ ? this.ttfb_.getEstimate() : this.defaultTTFB_
            }
            ,
            e.destroy = function() {}
            ,
            t
        }()
          , Nr = {
            supported: !0,
            configurations: [],
            decodingInfoResults: [{
                supported: !0,
                powerEfficient: !0,
                smooth: !0
            }]
        }
          , Ur = {};
        function Br(t, e, r) {
            var n = t.videoCodec
              , a = t.audioCodec;
            if (!n || !a || !r)
                return Promise.resolve(Nr);
            var s = {
                width: t.width,
                height: t.height,
                bitrate: Math.ceil(Math.max(.9 * t.bitrate, t.averageBitrate)),
                framerate: t.frameRate || 30
            }
              , o = t.videoRange;
            "SDR" !== o && (s.transferFunction = o.toLowerCase());
            var l = n.split(",").map((function(t) {
                return {
                    type: "media-source",
                    video: i(i({}, s), {}, {
                        contentType: he(t, "video")
                    })
                }
            }
            ));
            return a && t.audioGroups && t.audioGroups.forEach((function(t) {
                var r;
                t && (null == (r = e.groups[t]) || r.tracks.forEach((function(e) {
                    if (e.groupId === t) {
                        var r = e.channels || ""
                          , i = parseFloat(r);
                        y(i) && i > 2 && l.push.apply(l, a.split(",").map((function(t) {
                            return {
                                type: "media-source",
                                audio: {
                                    contentType: he(t, "audio"),
                                    channels: "" + i
                                }
                            }
                        }
                        )))
                    }
                }
                )))
            }
            )),
            Promise.all(l.map((function(t) {
                var e = function(t) {
                    var e = t.audio
                      , r = t.video
                      , i = r || e;
                    if (i) {
                        var n = i.contentType.split('"')[1];
                        if (r)
                            return "r" + r.height + "x" + r.width + "f" + Math.ceil(r.framerate) + (r.transferFunction || "sd") + "_" + n + "_" + Math.ceil(r.bitrate / 1e5);
                        if (e)
                            return "c" + e.channels + (e.spatialRendering ? "s" : "n") + "_" + n
                    }
                    return ""
                }(t);
                return Ur[e] || (Ur[e] = r.decodingInfo(t))
            }
            ))).then((function(t) {
                return {
                    supported: !t.some((function(t) {
                        return !t.supported
                    }
                    )),
                    configurations: l,
                    decodingInfoResults: t
                }
            }
            )).catch((function(t) {
                return {
                    supported: !1,
                    configurations: l,
                    decodingInfoResults: [],
                    error: t
                }
            }
            ))
        }
        function Gr(t, e) {
            var r = !1
              , i = [];
            return t && (r = "SDR" !== t,
            i = [t]),
            e && (i = e.allowedVideoRanges || er.slice(0),
            i = (r = void 0 !== e.preferHDR ? e.preferHDR : function() {
                if ("function" == typeof matchMedia) {
                    var t = matchMedia("(dynamic-range: high)")
                      , e = matchMedia("bad query");
                    if (t.media !== e.media)
                        return !0 === t.matches
                }
                return !1
            }()) ? i.filter((function(t) {
                return "SDR" !== t
            }
            )) : ["SDR"]),
            {
                preferHDR: r,
                allowedVideoRanges: i
            }
        }
        function Kr(t, e) {
            w.log('[abr] start candidates with "' + t + '" ignored because ' + e)
        }
        function Hr(t, e, r) {
            if ("attrs"in t) {
                var i = e.indexOf(t);
                if (-1 !== i)
                    return i
            }
            for (var n = 0; n < e.length; n++)
                if (Vr(t, e[n], r))
                    return n;
            return -1
        }
        function Vr(t, e, r) {
            var i = t.groupId
              , n = t.name
              , a = t.lang
              , s = t.assocLang
              , o = t.characteristics
              , l = t.default
              , u = t.forced;
            return (void 0 === i || e.groupId === i) && (void 0 === n || e.name === n) && (void 0 === a || e.lang === a) && (void 0 === a || e.assocLang === s) && (void 0 === l || e.default === l) && (void 0 === u || e.forced === u) && (void 0 === o || function(t, e) {
                void 0 === e && (e = "");
                var r = t.split(",")
                  , i = e.split(",");
                return r.length === i.length && !r.some((function(t) {
                    return -1 === i.indexOf(t)
                }
                ))
            }(o, e.characteristics)) && (void 0 === r || r(t, e))
        }
        function Yr(t, e) {
            var r = t.audioCodec
              , i = t.channels;
            return !(void 0 !== r && (e.audioCodec || "").substring(0, 4) !== r.substring(0, 4) || void 0 !== i && i !== (e.channels || "2"))
        }
        function Wr(t, e, r) {
            for (var i = e; i > -1; i--)
                if (r(t[i]))
                    return i;
            for (var n = e + 1; n < t.length; n++)
                if (r(t[n]))
                    return n;
            return -1
        }
        var jr = function() {
            function t(t) {
                var e = this;
                this.hls = void 0,
                this.lastLevelLoadSec = 0,
                this.lastLoadedFragLevel = -1,
                this.firstSelection = -1,
                this._nextAutoLevel = -1,
                this.nextAutoLevelKey = "",
                this.audioTracksByGroup = null,
                this.codecTiers = null,
                this.timer = -1,
                this.fragCurrent = null,
                this.partCurrent = null,
                this.bitrateTestDelay = 0,
                this.bwEstimator = void 0,
                this._abandonRulesCheck = function() {
                    var t = e.fragCurrent
                      , r = e.partCurrent
                      , i = e.hls
                      , n = i.autoLevelEnabled
                      , a = i.media;
                    if (t && a) {
                        var s = performance.now()
                          , o = r ? r.stats : t.stats
                          , l = r ? r.duration : t.duration
                          , u = s - o.loading.start
                          , h = i.minAutoLevel;
                        if (o.aborted || o.loaded && o.loaded === o.total || t.level <= h)
                            return e.clearTimer(),
                            void (e._nextAutoLevel = -1);
                        if (n && !a.paused && a.playbackRate && a.readyState) {
                            var d = i.mainForwardBufferInfo;
                            if (null !== d) {
                                var c = e.bwEstimator.getEstimateTTFB()
                                  , f = Math.abs(a.playbackRate);
                                if (!(u <= Math.max(c, l / (2 * f) * 1e3))) {
                                    var g = d.len / f
                                      , v = o.loading.first ? o.loading.first - o.loading.start : -1
                                      , m = o.loaded && v > -1
                                      , p = e.getBwEstimate()
                                      , E = i.levels
                                      , T = E[t.level]
                                      , L = o.total || Math.max(o.loaded, Math.round(l * T.averageBitrate / 8))
                                      , A = m ? u - v : u;
                                    A < 1 && m && (A = Math.min(u, 8 * o.loaded / p));
                                    var R = m ? 1e3 * o.loaded / A : 0
                                      , b = R ? (L - o.loaded) / R : 8 * L / p + c / 1e3;
                                    if (!(b <= g)) {
                                        var k, D = R ? 8 * R : p, I = Number.POSITIVE_INFINITY;
                                        for (k = t.level - 1; k > h; k--) {
                                            var C = E[k].maxBitrate;
                                            if ((I = e.getTimeToLoadFrag(c / 1e3, D, l * C, !E[k].details)) < g)
                                                break
                                        }
                                        if (!(I >= b || I > 10 * l)) {
                                            i.nextLoadLevel = i.nextAutoLevel = k,
                                            m ? e.bwEstimator.sample(u - Math.min(c, v), o.loaded) : e.bwEstimator.sampleTTFB(u);
                                            var _ = E[k].maxBitrate;
                                            e.getBwEstimate() * e.hls.config.abrBandWidthUpFactor > _ && e.resetEstimator(_),
                                            e.clearTimer(),
                                            w.warn("[abr] Fragment " + t.sn + (r ? " part " + r.index : "") + " of level " + t.level + " is loading too slowly;\n      Time to underbuffer: " + g.toFixed(3) + " s\n      Estimated load time for current fragment: " + b.toFixed(3) + " s\n      Estimated load time for down switch fragment: " + I.toFixed(3) + " s\n      TTFB estimate: " + (0 | v) + " ms\n      Current BW estimate: " + (y(p) ? 0 | p : "Unknown") + " bps\n      New BW estimate: " + (0 | e.getBwEstimate()) + " bps\n      Switching to level " + k + " @ " + (0 | _) + " bps"),
                                            i.trigger(S.FRAG_LOAD_EMERGENCY_ABORTED, {
                                                frag: t,
                                                part: r,
                                                stats: o
                                            })
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                ,
                this.hls = t,
                this.bwEstimator = this.initEstimator(),
                this.registerListeners()
            }
            var e = t.prototype;
            return e.resetEstimator = function(t) {
                t && (w.log("setting initial bwe to " + t),
                this.hls.config.abrEwmaDefaultEstimate = t),
                this.firstSelection = -1,
                this.bwEstimator = this.initEstimator()
            }
            ,
            e.initEstimator = function() {
                var t = this.hls.config;
                return new Or(t.abrEwmaSlowVoD,t.abrEwmaFastVoD,t.abrEwmaDefaultEstimate)
            }
            ,
            e.registerListeners = function() {
                var t = this.hls;
                t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.FRAG_LOADING, this.onFragLoading, this),
                t.on(S.FRAG_LOADED, this.onFragLoaded, this),
                t.on(S.FRAG_BUFFERED, this.onFragBuffered, this),
                t.on(S.LEVEL_SWITCHING, this.onLevelSwitching, this),
                t.on(S.LEVEL_LOADED, this.onLevelLoaded, this),
                t.on(S.LEVELS_UPDATED, this.onLevelsUpdated, this),
                t.on(S.MAX_AUTO_LEVEL_UPDATED, this.onMaxAutoLevelUpdated, this),
                t.on(S.ERROR, this.onError, this)
            }
            ,
            e.unregisterListeners = function() {
                var t = this.hls;
                t && (t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.FRAG_LOADING, this.onFragLoading, this),
                t.off(S.FRAG_LOADED, this.onFragLoaded, this),
                t.off(S.FRAG_BUFFERED, this.onFragBuffered, this),
                t.off(S.LEVEL_SWITCHING, this.onLevelSwitching, this),
                t.off(S.LEVEL_LOADED, this.onLevelLoaded, this),
                t.off(S.LEVELS_UPDATED, this.onLevelsUpdated, this),
                t.off(S.MAX_AUTO_LEVEL_UPDATED, this.onMaxAutoLevelUpdated, this),
                t.off(S.ERROR, this.onError, this))
            }
            ,
            e.destroy = function() {
                this.unregisterListeners(),
                this.clearTimer(),
                this.hls = this._abandonRulesCheck = null,
                this.fragCurrent = this.partCurrent = null
            }
            ,
            e.onManifestLoading = function(t, e) {
                this.lastLoadedFragLevel = -1,
                this.firstSelection = -1,
                this.lastLevelLoadSec = 0,
                this.fragCurrent = this.partCurrent = null,
                this.onLevelsUpdated(),
                this.clearTimer()
            }
            ,
            e.onLevelsUpdated = function() {
                this.lastLoadedFragLevel > -1 && this.fragCurrent && (this.lastLoadedFragLevel = this.fragCurrent.level),
                this._nextAutoLevel = -1,
                this.onMaxAutoLevelUpdated(),
                this.codecTiers = null,
                this.audioTracksByGroup = null
            }
            ,
            e.onMaxAutoLevelUpdated = function() {
                this.firstSelection = -1,
                this.nextAutoLevelKey = ""
            }
            ,
            e.onFragLoading = function(t, e) {
                var r, i = e.frag;
                this.ignoreFragment(i) || (i.bitrateTest || (this.fragCurrent = i,
                this.partCurrent = null != (r = e.part) ? r : null),
                this.clearTimer(),
                this.timer = self.setInterval(this._abandonRulesCheck, 100))
            }
            ,
            e.onLevelSwitching = function(t, e) {
                this.clearTimer()
            }
            ,
            e.onError = function(t, e) {
                if (!e.fatal)
                    switch (e.details) {
                    case A.BUFFER_ADD_CODEC_ERROR:
                    case A.BUFFER_APPEND_ERROR:
                        this.lastLoadedFragLevel = -1,
                        this.firstSelection = -1;
                        break;
                    case A.FRAG_LOAD_TIMEOUT:
                        var r = e.frag
                          , i = this.fragCurrent
                          , n = this.partCurrent;
                        if (r && i && r.sn === i.sn && r.level === i.level) {
                            var a = performance.now()
                              , s = n ? n.stats : r.stats
                              , o = a - s.loading.start
                              , l = s.loading.first ? s.loading.first - s.loading.start : -1;
                            if (s.loaded && l > -1) {
                                var u = this.bwEstimator.getEstimateTTFB();
                                this.bwEstimator.sample(o - Math.min(u, l), s.loaded)
                            } else
                                this.bwEstimator.sampleTTFB(o)
                        }
                    }
            }
            ,
            e.getTimeToLoadFrag = function(t, e, r, i) {
                return t + r / e + (i ? this.lastLevelLoadSec : 0)
            }
            ,
            e.onLevelLoaded = function(t, e) {
                var r = this.hls.config
                  , i = e.stats.loading
                  , n = i.end - i.start;
                y(n) && (this.lastLevelLoadSec = n / 1e3),
                e.details.live ? this.bwEstimator.update(r.abrEwmaSlowLive, r.abrEwmaFastLive) : this.bwEstimator.update(r.abrEwmaSlowVoD, r.abrEwmaFastVoD)
            }
            ,
            e.onFragLoaded = function(t, e) {
                var r = e.frag
                  , i = e.part
                  , n = i ? i.stats : r.stats;
                if (r.type === Fe && this.bwEstimator.sampleTTFB(n.loading.first - n.loading.start),
                !this.ignoreFragment(r)) {
                    if (this.clearTimer(),
                    r.level === this._nextAutoLevel && (this._nextAutoLevel = -1),
                    this.firstSelection = -1,
                    this.hls.config.abrMaxWithRealBitrate) {
                        var a = i ? i.duration : r.duration
                          , s = this.hls.levels[r.level]
                          , o = (s.loaded ? s.loaded.bytes : 0) + n.loaded
                          , l = (s.loaded ? s.loaded.duration : 0) + a;
                        s.loaded = {
                            bytes: o,
                            duration: l
                        },
                        s.realBitrate = Math.round(8 * o / l)
                    }
                    if (r.bitrateTest) {
                        var u = {
                            stats: n,
                            frag: r,
                            part: i,
                            id: r.type
                        };
                        this.onFragBuffered(S.FRAG_BUFFERED, u),
                        r.bitrateTest = !1
                    } else
                        this.lastLoadedFragLevel = r.level
                }
            }
            ,
            e.onFragBuffered = function(t, e) {
                var r = e.frag
                  , i = e.part
                  , n = null != i && i.stats.loaded ? i.stats : r.stats;
                if (!n.aborted && !this.ignoreFragment(r)) {
                    var a = n.parsing.end - n.loading.start - Math.min(n.loading.first - n.loading.start, this.bwEstimator.getEstimateTTFB());
                    this.bwEstimator.sample(a, n.loaded),
                    n.bwEstimate = this.getBwEstimate(),
                    r.bitrateTest ? this.bitrateTestDelay = a / 1e3 : this.bitrateTestDelay = 0
                }
            }
            ,
            e.ignoreFragment = function(t) {
                return t.type !== Fe || "initSegment" === t.sn
            }
            ,
            e.clearTimer = function() {
                this.timer > -1 && (self.clearInterval(this.timer),
                this.timer = -1)
            }
            ,
            e.getAutoLevelKey = function() {
                return this.getBwEstimate() + "_" + this.getStarvationDelay().toFixed(2)
            }
            ,
            e.getNextABRAutoLevel = function() {
                var t = this.fragCurrent
                  , e = this.partCurrent
                  , r = this.hls
                  , i = r.maxAutoLevel
                  , n = r.config
                  , a = r.minAutoLevel
                  , s = e ? e.duration : t ? t.duration : 0
                  , o = this.getBwEstimate()
                  , l = this.getStarvationDelay()
                  , u = n.abrBandWidthFactor
                  , h = n.abrBandWidthUpFactor;
                if (l) {
                    var d = this.findBestLevel(o, a, i, l, 0, u, h);
                    if (d >= 0)
                        return d
                }
                var c = s ? Math.min(s, n.maxStarvationDelay) : n.maxStarvationDelay;
                if (!l) {
                    var f = this.bitrateTestDelay;
                    f && (c = (s ? Math.min(s, n.maxLoadingDelay) : n.maxLoadingDelay) - f,
                    w.info("[abr] bitrate test took " + Math.round(1e3 * f) + "ms, set first fragment max fetchDuration to " + Math.round(1e3 * c) + " ms"),
                    u = h = 1)
                }
                var g = this.findBestLevel(o, a, i, l, c, u, h);
                if (w.info("[abr] " + (l ? "rebuffering expected" : "buffer is empty") + ", optimal quality level " + g),
                g > -1)
                    return g;
                var v = r.levels[a]
                  , m = r.levels[r.loadLevel];
                return (null == v ? void 0 : v.bitrate) < (null == m ? void 0 : m.bitrate) ? a : r.loadLevel
            }
            ,
            e.getStarvationDelay = function() {
                var t = this.hls
                  , e = t.media;
                if (!e)
                    return 1 / 0;
                var r = e && 0 !== e.playbackRate ? Math.abs(e.playbackRate) : 1
                  , i = t.mainForwardBufferInfo;
                return (i ? i.len : 0) / r
            }
            ,
            e.getBwEstimate = function() {
                return this.bwEstimator.canEstimate() ? this.bwEstimator.getEstimate() : this.hls.config.abrEwmaDefaultEstimate
            }
            ,
            e.findBestLevel = function(t, e, r, i, n, a, s) {
                var o, l = this, u = i + n, h = this.lastLoadedFragLevel, d = -1 === h ? this.hls.firstLevel : h, c = this.fragCurrent, f = this.partCurrent, g = this.hls, v = g.levels, m = g.allAudioTracks, p = g.loadLevel, E = g.config;
                if (1 === v.length)
                    return 0;
                var T, S = v[d], L = !(null == S || null == (o = S.details) || !o.live), A = -1 === p || -1 === h, R = "SDR", b = (null == S ? void 0 : S.frameRate) || 0, k = E.audioPreference, D = E.videoPreference, I = this.audioTracksByGroup || (this.audioTracksByGroup = function(t) {
                    return t.reduce((function(t, e) {
                        var r = t.groups[e.groupId];
                        r || (r = t.groups[e.groupId] = {
                            tracks: [],
                            channels: {
                                2: 0
                            },
                            hasDefault: !1,
                            hasAutoSelect: !1
                        }),
                        r.tracks.push(e);
                        var i = e.channels || "2";
                        return r.channels[i] = (r.channels[i] || 0) + 1,
                        r.hasDefault = r.hasDefault || e.default,
                        r.hasAutoSelect = r.hasAutoSelect || e.autoselect,
                        r.hasDefault && (t.hasDefaultAudio = !0),
                        r.hasAutoSelect && (t.hasAutoSelectAudio = !0),
                        t
                    }
                    ), {
                        hasDefaultAudio: !1,
                        hasAutoSelectAudio: !1,
                        groups: {}
                    })
                }(m));
                if (A) {
                    if (-1 !== this.firstSelection)
                        return this.firstSelection;
                    var C = this.codecTiers || (this.codecTiers = function(t, e, r, i) {
                        return t.slice(r, i + 1).reduce((function(t, r) {
                            if (!r.codecSet)
                                return t;
                            var i = r.audioGroups
                              , n = t[r.codecSet];
                            n || (t[r.codecSet] = n = {
                                minBitrate: 1 / 0,
                                minHeight: 1 / 0,
                                minFramerate: 1 / 0,
                                maxScore: 0,
                                videoRanges: {
                                    SDR: 0
                                },
                                channels: {
                                    2: 0
                                },
                                hasDefaultAudio: !i,
                                fragmentError: 0
                            }),
                            n.minBitrate = Math.min(n.minBitrate, r.bitrate);
                            var a = Math.min(r.height, r.width);
                            return n.minHeight = Math.min(n.minHeight, a),
                            n.minFramerate = Math.min(n.minFramerate, r.frameRate),
                            n.maxScore = Math.max(n.maxScore, r.score),
                            n.fragmentError += r.fragmentError,
                            n.videoRanges[r.videoRange] = (n.videoRanges[r.videoRange] || 0) + 1,
                            i && i.forEach((function(t) {
                                if (t) {
                                    var r = e.groups[t];
                                    r && (n.hasDefaultAudio = n.hasDefaultAudio || e.hasDefaultAudio ? r.hasDefault : r.hasAutoSelect || !e.hasDefaultAudio && !e.hasAutoSelectAudio,
                                    Object.keys(r.channels).forEach((function(t) {
                                        n.channels[t] = (n.channels[t] || 0) + r.channels[t]
                                    }
                                    )))
                                }
                            }
                            )),
                            t
                        }
                        ), {})
                    }(v, I, e, r))
                      , _ = function(t, e, r, i, n) {
                        for (var a = Object.keys(t), s = null == i ? void 0 : i.channels, o = null == i ? void 0 : i.audioCodec, l = s && 2 === parseInt(s), u = !0, h = !1, d = 1 / 0, c = 1 / 0, f = 1 / 0, g = 0, v = [], m = Gr(e, n), p = m.preferHDR, E = m.allowedVideoRanges, T = function() {
                            var e = t[a[S]];
                            u = e.channels[2] > 0,
                            d = Math.min(d, e.minHeight),
                            c = Math.min(c, e.minFramerate),
                            f = Math.min(f, e.minBitrate);
                            var r = E.filter((function(t) {
                                return e.videoRanges[t] > 0
                            }
                            ));
                            r.length > 0 && (h = !0,
                            v = r)
                        }, S = a.length; S--; )
                            T();
                        d = y(d) ? d : 0,
                        c = y(c) ? c : 0;
                        var L = Math.max(1080, d)
                          , A = Math.max(30, c);
                        return f = y(f) ? f : r,
                        r = Math.max(f, r),
                        h || (e = void 0,
                        v = []),
                        {
                            codecSet: a.reduce((function(e, i) {
                                var n = t[i];
                                if (i === e)
                                    return e;
                                if (n.minBitrate > r)
                                    return Kr(i, "min bitrate of " + n.minBitrate + " > current estimate of " + r),
                                    e;
                                if (!n.hasDefaultAudio)
                                    return Kr(i, "no renditions with default or auto-select sound found"),
                                    e;
                                if (o && i.indexOf(o.substring(0, 4)) % 5 != 0)
                                    return Kr(i, 'audio codec preference "' + o + '" not found'),
                                    e;
                                if (s && !l) {
                                    if (!n.channels[s])
                                        return Kr(i, "no renditions with " + s + " channel sound found (channels options: " + Object.keys(n.channels) + ")"),
                                        e
                                } else if ((!o || l) && u && 0 === n.channels[2])
                                    return Kr(i, "no renditions with stereo sound found"),
                                    e;
                                return n.minHeight > L ? (Kr(i, "min resolution of " + n.minHeight + " > maximum of " + L),
                                e) : n.minFramerate > A ? (Kr(i, "min framerate of " + n.minFramerate + " > maximum of " + A),
                                e) : v.some((function(t) {
                                    return n.videoRanges[t] > 0
                                }
                                )) ? n.maxScore < g ? (Kr(i, "max score of " + n.maxScore + " < selected max of " + g),
                                e) : e && (ce(i) >= ce(e) || n.fragmentError > t[e].fragmentError) ? e : (g = n.maxScore,
                                i) : (Kr(i, "no variants with VIDEO-RANGE of " + JSON.stringify(v) + " found"),
                                e)
                            }
                            ), void 0),
                            videoRanges: v,
                            preferHDR: p,
                            minFramerate: c,
                            minBitrate: f
                        }
                    }(C, R, t, k, D)
                      , x = _.codecSet
                      , P = _.videoRanges
                      , F = _.minFramerate
                      , M = _.minBitrate
                      , O = _.preferHDR;
                    T = x,
                    R = O ? P[P.length - 1] : P[0],
                    b = F,
                    t = Math.max(t, M),
                    w.log("[abr] picked start tier " + JSON.stringify(_))
                } else
                    T = null == S ? void 0 : S.codecSet,
                    R = null == S ? void 0 : S.videoRange;
                for (var N, U = f ? f.duration : c ? c.duration : 0, B = this.bwEstimator.getEstimateTTFB() / 1e3, G = [], K = function() {
                    var e, o = v[H], c = H > d;
                    if (!o)
                        return 0;
                    if (E.useMediaCapabilities && !o.supportedResult && !o.supportedPromise) {
                        var g = navigator.mediaCapabilities;
                        "function" == typeof (null == g ? void 0 : g.decodingInfo) && function(t, e, r, i, n, a) {
                            var s = t.audioCodec ? t.audioGroups : null
                              , o = null == a ? void 0 : a.audioCodec
                              , l = null == a ? void 0 : a.channels
                              , u = l ? parseInt(l) : o ? 1 / 0 : 2
                              , h = null;
                            if (null != s && s.length)
                                try {
                                    h = 1 === s.length && s[0] ? e.groups[s[0]].channels : s.reduce((function(t, r) {
                                        if (r) {
                                            var i = e.groups[r];
                                            if (!i)
                                                throw new Error("Audio track group " + r + " not found");
                                            Object.keys(i.channels).forEach((function(e) {
                                                t[e] = (t[e] || 0) + i.channels[e]
                                            }
                                            ))
                                        }
                                        return t
                                    }
                                    ), {
                                        2: 0
                                    })
                                } catch (t) {
                                    return !0
                                }
                            return void 0 !== t.videoCodec && (t.width > 1920 && t.height > 1088 || t.height > 1920 && t.width > 1088 || t.frameRate > Math.max(i, 30) || "SDR" !== t.videoRange && t.videoRange !== r || t.bitrate > Math.max(n, 8e6)) || !!h && y(u) && Object.keys(h).some((function(t) {
                                return parseInt(t) > u
                            }
                            ))
                        }(o, I, R, b, t, k) ? (o.supportedPromise = Br(o, I, g),
                        o.supportedPromise.then((function(t) {
                            if (l.hls) {
                                o.supportedResult = t;
                                var e = l.hls.levels
                                  , r = e.indexOf(o);
                                t.error ? w.warn('[abr] MediaCapabilities decodingInfo error: "' + t.error + '" for level ' + r + " " + JSON.stringify(t)) : t.supported || (w.warn("[abr] Unsupported MediaCapabilities decodingInfo result for level " + r + " " + JSON.stringify(t)),
                                r > -1 && e.length > 1 && (w.log("[abr] Removing unsupported level " + r),
                                l.hls.removeLevel(r)))
                            }
                        }
                        ))) : o.supportedResult = Nr
                    }
                    if (T && o.codecSet !== T || R && o.videoRange !== R || c && b > o.frameRate || !c && b > 0 && b < o.frameRate || o.supportedResult && (null == (e = o.supportedResult.decodingInfoResults) || !e[0].smooth))
                        return G.push(H),
                        0;
                    var m, D = o.details, C = (f ? null == D ? void 0 : D.partTarget : null == D ? void 0 : D.averagetargetduration) || U;
                    m = c ? s * t : a * t;
                    var _ = U && i >= 2 * U && 0 === n ? v[H].averageBitrate : v[H].maxBitrate
                      , x = l.getTimeToLoadFrag(B, m, _ * C, void 0 === D);
                    if (m >= _ && (H === h || 0 === o.loadError && 0 === o.fragmentError) && (x <= B || !y(x) || L && !l.bitrateTestDelay || x < u)) {
                        var P = l.forcedAutoLevel;
                        return H === p || -1 !== P && P === p || (G.length && w.trace("[abr] Skipped level(s) " + G.join(",") + " of " + r + ' max with CODECS and VIDEO-RANGE:"' + v[G[0]].codecs + '" ' + v[G[0]].videoRange + '; not compatible with "' + S.codecs + '" ' + R),
                        w.info("[abr] switch candidate:" + d + "->" + H + " adjustedbw(" + Math.round(m) + ")-bitrate=" + Math.round(m - _) + " ttfb:" + B.toFixed(1) + " avgDuration:" + C.toFixed(1) + " maxFetchDuration:" + u.toFixed(1) + " fetchDuration:" + x.toFixed(1) + " firstSelection:" + A + " codecSet:" + T + " videoRange:" + R + " hls.loadLevel:" + p)),
                        A && (l.firstSelection = H),
                        {
                            v: H
                        }
                    }
                }, H = r; H >= e; H--)
                    if (0 !== (N = K()) && N)
                        return N.v;
                return -1
            }
            ,
            s(t, [{
                key: "firstAutoLevel",
                get: function() {
                    var t = this.hls
                      , e = t.maxAutoLevel
                      , r = t.minAutoLevel
                      , i = this.getBwEstimate()
                      , n = this.hls.config.maxStarvationDelay
                      , a = this.findBestLevel(i, r, e, 0, n, 1, 1);
                    if (a > -1)
                        return a;
                    var s = this.hls.firstLevel
                      , o = Math.min(Math.max(s, r), e);
                    return w.warn("[abr] Could not find best starting auto level. Defaulting to first in playlist " + s + " clamped to " + o),
                    o
                }
            }, {
                key: "forcedAutoLevel",
                get: function() {
                    return this.nextAutoLevelKey ? -1 : this._nextAutoLevel
                }
            }, {
                key: "nextAutoLevel",
                get: function() {
                    var t = this.forcedAutoLevel
                      , e = this.bwEstimator.canEstimate()
                      , r = this.lastLoadedFragLevel > -1;
                    if (!(-1 === t || e && r && this.nextAutoLevelKey !== this.getAutoLevelKey()))
                        return t;
                    var i = e && r ? this.getNextABRAutoLevel() : this.firstAutoLevel;
                    if (-1 !== t) {
                        var n = this.hls.levels;
                        if (n.length > Math.max(t, i) && n[t].loadError <= n[i].loadError)
                            return t
                    }
                    return this._nextAutoLevel = i,
                    this.nextAutoLevelKey = this.getAutoLevelKey(),
                    i
                },
                set: function(t) {
                    var e = this.hls
                      , r = e.maxAutoLevel
                      , i = e.minAutoLevel
                      , n = Math.min(Math.max(t, i), r);
                    this._nextAutoLevel !== n && (this.nextAutoLevelKey = "",
                    this._nextAutoLevel = n)
                }
            }]),
            t
        }()
          , qr = function() {
            function t() {
                this._boundTick = void 0,
                this._tickTimer = null,
                this._tickInterval = null,
                this._tickCallCount = 0,
                this._boundTick = this.tick.bind(this)
            }
            var e = t.prototype;
            return e.destroy = function() {
                this.onHandlerDestroying(),
                this.onHandlerDestroyed()
            }
            ,
            e.onHandlerDestroying = function() {
                this.clearNextTick(),
                this.clearInterval()
            }
            ,
            e.onHandlerDestroyed = function() {}
            ,
            e.hasInterval = function() {
                return !!this._tickInterval
            }
            ,
            e.hasNextTick = function() {
                return !!this._tickTimer
            }
            ,
            e.setInterval = function(t) {
                return !this._tickInterval && (this._tickCallCount = 0,
                this._tickInterval = self.setInterval(this._boundTick, t),
                !0)
            }
            ,
            e.clearInterval = function() {
                return !!this._tickInterval && (self.clearInterval(this._tickInterval),
                this._tickInterval = null,
                !0)
            }
            ,
            e.clearNextTick = function() {
                return !!this._tickTimer && (self.clearTimeout(this._tickTimer),
                this._tickTimer = null,
                !0)
            }
            ,
            e.tick = function() {
                this._tickCallCount++,
                1 === this._tickCallCount && (this.doTick(),
                this._tickCallCount > 1 && this.tickImmediate(),
                this._tickCallCount = 0)
            }
            ,
            e.tickImmediate = function() {
                this.clearNextTick(),
                this._tickTimer = self.setTimeout(this._boundTick, 0)
            }
            ,
            e.doTick = function() {}
            ,
            t
        }()
          , Xr = "NOT_LOADED"
          , zr = "APPENDING"
          , Qr = "PARTIAL"
          , Jr = "OK"
          , $r = function() {
            function t(t) {
                this.activePartLists = Object.create(null),
                this.endListFragments = Object.create(null),
                this.fragments = Object.create(null),
                this.timeRanges = Object.create(null),
                this.bufferPadding = .2,
                this.hls = void 0,
                this.hasGaps = !1,
                this.hls = t,
                this._registerListeners()
            }
            var e = t.prototype;
            return e._registerListeners = function() {
                var t = this.hls;
                t.on(S.BUFFER_APPENDED, this.onBufferAppended, this),
                t.on(S.FRAG_BUFFERED, this.onFragBuffered, this),
                t.on(S.FRAG_LOADED, this.onFragLoaded, this)
            }
            ,
            e._unregisterListeners = function() {
                var t = this.hls;
                t.off(S.BUFFER_APPENDED, this.onBufferAppended, this),
                t.off(S.FRAG_BUFFERED, this.onFragBuffered, this),
                t.off(S.FRAG_LOADED, this.onFragLoaded, this)
            }
            ,
            e.destroy = function() {
                this._unregisterListeners(),
                this.fragments = this.activePartLists = this.endListFragments = this.timeRanges = null
            }
            ,
            e.getAppendedFrag = function(t, e) {
                var r = this.activePartLists[e];
                if (r)
                    for (var i = r.length; i--; ) {
                        var n = r[i];
                        if (!n)
                            break;
                        var a = n.end;
                        if (n.start <= t && null !== a && t <= a)
                            return n
                    }
                return this.getBufferedFrag(t, e)
            }
            ,
            e.getBufferedFrag = function(t, e) {
                for (var r = this.fragments, i = Object.keys(r), n = i.length; n--; ) {
                    var a = r[i[n]];
                    if ((null == a ? void 0 : a.body.type) === e && a.buffered) {
                        var s = a.body;
                        if (s.start <= t && t <= s.end)
                            return s
                    }
                }
                return null
            }
            ,
            e.detectEvictedFragments = function(t, e, r, i) {
                var n = this;
                this.timeRanges && (this.timeRanges[t] = e);
                var a = (null == i ? void 0 : i.fragment.sn) || -1;
                Object.keys(this.fragments).forEach((function(i) {
                    var s = n.fragments[i];
                    if (s && !(a >= s.body.sn))
                        if (s.buffered || s.loaded) {
                            var o = s.range[t];
                            o && o.time.some((function(t) {
                                var r = !n.isTimeBuffered(t.startPTS, t.endPTS, e);
                                return r && n.removeFragment(s.body),
                                r
                            }
                            ))
                        } else
                            s.body.type === r && n.removeFragment(s.body)
                }
                ))
            }
            ,
            e.detectPartialFragments = function(t) {
                var e = this
                  , r = this.timeRanges
                  , i = t.frag
                  , n = t.part;
                if (r && "initSegment" !== i.sn) {
                    var a = ti(i)
                      , s = this.fragments[a];
                    if (!(!s || s.buffered && i.gap)) {
                        var o = !i.relurl;
                        Object.keys(r).forEach((function(t) {
                            var a = i.elementaryStreams[t];
                            if (a) {
                                var l = r[t]
                                  , u = o || !0 === a.partial;
                                s.range[t] = e.getBufferedTimes(i, n, u, l)
                            }
                        }
                        )),
                        s.loaded = null,
                        Object.keys(s.range).length ? (s.buffered = !0,
                        (s.body.endList = i.endList || s.body.endList) && (this.endListFragments[s.body.type] = s),
                        Zr(s) || this.removeParts(i.sn - 1, i.type)) : this.removeFragment(s.body)
                    }
                }
            }
            ,
            e.removeParts = function(t, e) {
                var r = this.activePartLists[e];
                r && (this.activePartLists[e] = r.filter((function(e) {
                    return e.fragment.sn >= t
                }
                )))
            }
            ,
            e.fragBuffered = function(t, e) {
                var r = ti(t)
                  , i = this.fragments[r];
                !i && e && (i = this.fragments[r] = {
                    body: t,
                    appendedPTS: null,
                    loaded: null,
                    buffered: !1,
                    range: Object.create(null)
                },
                t.gap && (this.hasGaps = !0)),
                i && (i.loaded = null,
                i.buffered = !0)
            }
            ,
            e.getBufferedTimes = function(t, e, r, i) {
                for (var n = {
                    time: [],
                    partial: r
                }, a = t.start, s = t.end, o = t.minEndPTS || s, l = t.maxStartPTS || a, u = 0; u < i.length; u++) {
                    var h = i.start(u) - this.bufferPadding
                      , d = i.end(u) + this.bufferPadding;
                    if (l >= h && o <= d) {
                        n.time.push({
                            startPTS: Math.max(a, i.start(u)),
                            endPTS: Math.min(s, i.end(u))
                        });
                        break
                    }
                    if (a < d && s > h) {
                        var c = Math.max(a, i.start(u))
                          , f = Math.min(s, i.end(u));
                        f > c && (n.partial = !0,
                        n.time.push({
                            startPTS: c,
                            endPTS: f
                        }))
                    } else if (s <= h)
                        break
                }
                return n
            }
            ,
            e.getPartialFragment = function(t) {
                var e, r, i, n = null, a = 0, s = this.bufferPadding, o = this.fragments;
                return Object.keys(o).forEach((function(l) {
                    var u = o[l];
                    u && Zr(u) && (r = u.body.start - s,
                    i = u.body.end + s,
                    t >= r && t <= i && (e = Math.min(t - r, i - t),
                    a <= e && (n = u.body,
                    a = e)))
                }
                )),
                n
            }
            ,
            e.isEndListAppended = function(t) {
                var e = this.endListFragments[t];
                return void 0 !== e && (e.buffered || Zr(e))
            }
            ,
            e.getState = function(t) {
                var e = ti(t)
                  , r = this.fragments[e];
                return r ? r.buffered ? Zr(r) ? Qr : Jr : zr : Xr
            }
            ,
            e.isTimeBuffered = function(t, e, r) {
                for (var i, n, a = 0; a < r.length; a++) {
                    if (i = r.start(a) - this.bufferPadding,
                    n = r.end(a) + this.bufferPadding,
                    t >= i && e <= n)
                        return !0;
                    if (e <= i)
                        return !1
                }
                return !1
            }
            ,
            e.onFragLoaded = function(t, e) {
                var r = e.frag
                  , i = e.part;
                if ("initSegment" !== r.sn && !r.bitrateTest) {
                    var n = i ? null : e
                      , a = ti(r);
                    this.fragments[a] = {
                        body: r,
                        appendedPTS: null,
                        loaded: n,
                        buffered: !1,
                        range: Object.create(null)
                    }
                }
            }
            ,
            e.onBufferAppended = function(t, e) {
                var r = this
                  , i = e.frag
                  , n = e.part
                  , a = e.timeRanges;
                if ("initSegment" !== i.sn) {
                    var s = i.type;
                    if (n) {
                        var o = this.activePartLists[s];
                        o || (this.activePartLists[s] = o = []),
                        o.push(n)
                    }
                    this.timeRanges = a,
                    Object.keys(a).forEach((function(t) {
                        var e = a[t];
                        r.detectEvictedFragments(t, e, s, n)
                    }
                    ))
                }
            }
            ,
            e.onFragBuffered = function(t, e) {
                this.detectPartialFragments(e)
            }
            ,
            e.hasFragment = function(t) {
                var e = ti(t);
                return !!this.fragments[e]
            }
            ,
            e.hasParts = function(t) {
                var e;
                return !(null == (e = this.activePartLists[t]) || !e.length)
            }
            ,
            e.removeFragmentsInRange = function(t, e, r, i, n) {
                var a = this;
                i && !this.hasGaps || Object.keys(this.fragments).forEach((function(s) {
                    var o = a.fragments[s];
                    if (o) {
                        var l = o.body;
                        l.type !== r || i && !l.gap || l.start < e && l.end > t && (o.buffered || n) && a.removeFragment(l)
                    }
                }
                ))
            }
            ,
            e.removeFragment = function(t) {
                var e = ti(t);
                t.stats.loaded = 0,
                t.clearElementaryStreamInfo();
                var r = this.activePartLists[t.type];
                if (r) {
                    var i = t.sn;
                    this.activePartLists[t.type] = r.filter((function(t) {
                        return t.fragment.sn !== i
                    }
                    ))
                }
                delete this.fragments[e],
                t.endList && delete this.endListFragments[t.type]
            }
            ,
            e.removeAllFragments = function() {
                this.fragments = Object.create(null),
                this.endListFragments = Object.create(null),
                this.activePartLists = Object.create(null),
                this.hasGaps = !1
            }
            ,
            t
        }();
        function Zr(t) {
            var e, r, i;
            return t.buffered && (t.body.gap || (null == (e = t.range.video) ? void 0 : e.partial) || (null == (r = t.range.audio) ? void 0 : r.partial) || (null == (i = t.range.audiovideo) ? void 0 : i.partial))
        }
        function ti(t) {
            return t.type + "_" + t.level + "_" + t.sn
        }
        var ei = {
            length: 0,
            start: function() {
                return 0
            },
            end: function() {
                return 0
            }
        }
          , ri = function() {
            function t() {}
            return t.isBuffered = function(e, r) {
                try {
                    if (e)
                        for (var i = t.getBuffered(e), n = 0; n < i.length; n++)
                            if (r >= i.start(n) && r <= i.end(n))
                                return !0
                } catch (t) {}
                return !1
            }
            ,
            t.bufferInfo = function(e, r, i) {
                try {
                    if (e) {
                        var n, a = t.getBuffered(e), s = [];
                        for (n = 0; n < a.length; n++)
                            s.push({
                                start: a.start(n),
                                end: a.end(n)
                            });
                        return this.bufferedInfo(s, r, i)
                    }
                } catch (t) {}
                return {
                    len: 0,
                    start: r,
                    end: r,
                    nextStart: void 0
                }
            }
            ,
            t.bufferedInfo = function(t, e, r) {
                e = Math.max(0, e),
                t.sort((function(t, e) {
                    var r = t.start - e.start;
                    return r || e.end - t.end
                }
                ));
                var i = [];
                if (r)
                    for (var n = 0; n < t.length; n++) {
                        var a = i.length;
                        if (a) {
                            var s = i[a - 1].end;
                            t[n].start - s < r ? t[n].end > s && (i[a - 1].end = t[n].end) : i.push(t[n])
                        } else
                            i.push(t[n])
                    }
                else
                    i = t;
                for (var o, l = 0, u = e, h = e, d = 0; d < i.length; d++) {
                    var c = i[d].start
                      , f = i[d].end;
                    if (e + r >= c && e < f)
                        u = c,
                        l = (h = f) - e;
                    else if (e + r < c) {
                        o = c;
                        break
                    }
                }
                return {
                    len: l,
                    start: u || 0,
                    end: h || 0,
                    nextStart: o
                }
            }
            ,
            t.getBuffered = function(t) {
                try {
                    return t.buffered
                } catch (t) {
                    return w.log("failed to get media.buffered", t),
                    ei
                }
            }
            ,
            t
        }()
          , ii = function(t, e, r, i, n, a) {
            void 0 === i && (i = 0),
            void 0 === n && (n = -1),
            void 0 === a && (a = !1),
            this.level = void 0,
            this.sn = void 0,
            this.part = void 0,
            this.id = void 0,
            this.size = void 0,
            this.partial = void 0,
            this.transmuxing = {
                start: 0,
                executeStart: 0,
                executeEnd: 0,
                end: 0
            },
            this.buffering = {
                audio: {
                    start: 0,
                    executeStart: 0,
                    executeEnd: 0,
                    end: 0
                },
                video: {
                    start: 0,
                    executeStart: 0,
                    executeEnd: 0,
                    end: 0
                },
                audiovideo: {
                    start: 0,
                    executeStart: 0,
                    executeEnd: 0,
                    end: 0
                }
            },
            this.level = t,
            this.sn = e,
            this.id = r,
            this.size = i,
            this.part = n,
            this.partial = a
        };
        function ni(t, e) {
            for (var r = 0, i = t.length; r < i; r++) {
                var n;
                if ((null == (n = t[r]) ? void 0 : n.cc) === e)
                    return t[r]
            }
            return null
        }
        function ai(t, e) {
            if (t) {
                var r = t.start + e;
                t.start = t.startPTS = r,
                t.endPTS = r + t.duration
            }
        }
        function si(t, e) {
            for (var r = e.fragments, i = 0, n = r.length; i < n; i++)
                ai(r[i], t);
            e.fragmentHint && ai(e.fragmentHint, t),
            e.alignedSliding = !0
        }
        function oi(t, e, r) {
            e && (function(t, e, r) {
                if (function(t, e, r) {
                    return !(!e || !(r.endCC > r.startCC || t && t.cc < r.startCC))
                }(t, r, e)) {
                    var i = function(t, e) {
                        var r = t.fragments
                          , i = e.fragments;
                        if (i.length && r.length) {
                            var n = ni(r, i[0].cc);
                            if (n && (!n || n.startPTS))
                                return n;
                            w.log("No frag in previous level to align on")
                        } else
                            w.log("No fragments to align")
                    }(r, e);
                    i && y(i.start) && (w.log("Adjusting PTS using last level due to CC increase within current level " + e.url),
                    si(i.start, e))
                }
            }(t, r, e),
            !r.alignedSliding && e && li(r, e),
            r.alignedSliding || !e || r.skippedSegments || cr(e, r))
        }
        function li(t, e) {
            if (t.hasProgramDateTime && e.hasProgramDateTime) {
                var r = t.fragments
                  , i = e.fragments;
                if (r.length && i.length) {
                    var n, a, s = Math.min(e.endCC, t.endCC);
                    e.startCC < s && t.startCC < s && (n = ni(i, s),
                    a = ni(r, s)),
                    n && a || (a = ni(r, (n = i[Math.floor(i.length / 2)]).cc) || r[Math.floor(r.length / 2)]);
                    var o = n.programDateTime
                      , l = a.programDateTime;
                    o && l && si((l - o) / 1e3 - (a.start - n.start), t)
                }
            }
        }
        var ui = Math.pow(2, 17)
          , hi = function() {
            function t(t) {
                this.config = void 0,
                this.loader = null,
                this.partLoadTimeout = -1,
                this.config = t
            }
            var e = t.prototype;
            return e.destroy = function() {
                this.loader && (this.loader.destroy(),
                this.loader = null)
            }
            ,
            e.abort = function() {
                this.loader && this.loader.abort()
            }
            ,
            e.load = function(t, e) {
                var r = this
                  , n = t.url;
                if (!n)
                    return Promise.reject(new fi({
                        type: L.NETWORK_ERROR,
                        details: A.FRAG_LOAD_ERROR,
                        fatal: !1,
                        frag: t,
                        error: new Error("Fragment does not have a " + (n ? "part list" : "url")),
                        networkDetails: null
                    }));
                this.abort();
                var a = this.config
                  , s = a.fLoader
                  , o = a.loader;
                return new Promise((function(l, u) {
                    if (r.loader && r.loader.destroy(),
                    t.gap) {
                        if (t.tagList.some((function(t) {
                            return "GAP" === t[0]
                        }
                        )))
                            return void u(ci(t));
                        t.gap = !1
                    }
                    var h = r.loader = t.loader = s ? new s(a) : new o(a)
                      , d = di(t)
                      , c = Tr(a.fragLoadPolicy.default)
                      , f = {
                        loadPolicy: c,
                        timeout: c.maxLoadTimeMs,
                        maxRetry: 0,
                        retryDelay: 0,
                        maxRetryDelay: 0,
                        highWaterMark: "initSegment" === t.sn ? 1 / 0 : ui
                    };
                    t.stats = h.stats,
                    h.load(d, f, {
                        onSuccess: function(e, i, n, a) {
                            r.resetLoader(t, h);
                            var s = e.data;
                            n.resetIV && t.decryptdata && (t.decryptdata.iv = new Uint8Array(s.slice(0, 16)),
                            s = s.slice(16)),
                            l({
                                frag: t,
                                part: null,
                                payload: s,
                                networkDetails: a
                            })
                        },
                        onError: function(e, a, s, o) {
                            r.resetLoader(t, h),
                            u(new fi({
                                type: L.NETWORK_ERROR,
                                details: A.FRAG_LOAD_ERROR,
                                fatal: !1,
                                frag: t,
                                response: i({
                                    url: n,
                                    data: void 0
                                }, e),
                                error: new Error("HTTP Error " + e.code + " " + e.text),
                                networkDetails: s,
                                stats: o
                            }))
                        },
                        onAbort: function(e, i, n) {
                            r.resetLoader(t, h),
                            u(new fi({
                                type: L.NETWORK_ERROR,
                                details: A.INTERNAL_ABORTED,
                                fatal: !1,
                                frag: t,
                                error: new Error("Aborted"),
                                networkDetails: n,
                                stats: e
                            }))
                        },
                        onTimeout: function(e, i, n) {
                            r.resetLoader(t, h),
                            u(new fi({
                                type: L.NETWORK_ERROR,
                                details: A.FRAG_LOAD_TIMEOUT,
                                fatal: !1,
                                frag: t,
                                error: new Error("Timeout after " + f.timeout + "ms"),
                                networkDetails: n,
                                stats: e
                            }))
                        },
                        onProgress: function(r, i, n, a) {
                            e && e({
                                frag: t,
                                part: null,
                                payload: n,
                                networkDetails: a
                            })
                        }
                    })
                }
                ))
            }
            ,
            e.loadPart = function(t, e, r) {
                var n = this;
                this.abort();
                var a = this.config
                  , s = a.fLoader
                  , o = a.loader;
                return new Promise((function(l, u) {
                    if (n.loader && n.loader.destroy(),
                    t.gap || e.gap)
                        u(ci(t, e));
                    else {
                        var h = n.loader = t.loader = s ? new s(a) : new o(a)
                          , d = di(t, e)
                          , c = Tr(a.fragLoadPolicy.default)
                          , f = {
                            loadPolicy: c,
                            timeout: c.maxLoadTimeMs,
                            maxRetry: 0,
                            retryDelay: 0,
                            maxRetryDelay: 0,
                            highWaterMark: ui
                        };
                        e.stats = h.stats,
                        h.load(d, f, {
                            onSuccess: function(i, a, s, o) {
                                n.resetLoader(t, h),
                                n.updateStatsFromPart(t, e);
                                var u = {
                                    frag: t,
                                    part: e,
                                    payload: i.data,
                                    networkDetails: o
                                };
                                r(u),
                                l(u)
                            },
                            onError: function(r, a, s, o) {
                                n.resetLoader(t, h),
                                u(new fi({
                                    type: L.NETWORK_ERROR,
                                    details: A.FRAG_LOAD_ERROR,
                                    fatal: !1,
                                    frag: t,
                                    part: e,
                                    response: i({
                                        url: d.url,
                                        data: void 0
                                    }, r),
                                    error: new Error("HTTP Error " + r.code + " " + r.text),
                                    networkDetails: s,
                                    stats: o
                                }))
                            },
                            onAbort: function(r, i, a) {
                                t.stats.aborted = e.stats.aborted,
                                n.resetLoader(t, h),
                                u(new fi({
                                    type: L.NETWORK_ERROR,
                                    details: A.INTERNAL_ABORTED,
                                    fatal: !1,
                                    frag: t,
                                    part: e,
                                    error: new Error("Aborted"),
                                    networkDetails: a,
                                    stats: r
                                }))
                            },
                            onTimeout: function(r, i, a) {
                                n.resetLoader(t, h),
                                u(new fi({
                                    type: L.NETWORK_ERROR,
                                    details: A.FRAG_LOAD_TIMEOUT,
                                    fatal: !1,
                                    frag: t,
                                    part: e,
                                    error: new Error("Timeout after " + f.timeout + "ms"),
                                    networkDetails: a,
                                    stats: r
                                }))
                            }
                        })
                    }
                }
                ))
            }
            ,
            e.updateStatsFromPart = function(t, e) {
                var r = t.stats
                  , i = e.stats
                  , n = i.total;
                if (r.loaded += i.loaded,
                n) {
                    var a = Math.round(t.duration / e.duration)
                      , s = Math.min(Math.round(r.loaded / n), a)
                      , o = (a - s) * Math.round(r.loaded / s);
                    r.total = r.loaded + o
                } else
                    r.total = Math.max(r.loaded, r.total);
                var l = r.loading
                  , u = i.loading;
                l.start ? l.first += u.first - u.start : (l.start = u.start,
                l.first = u.first),
                l.end = u.end
            }
            ,
            e.resetLoader = function(t, e) {
                t.loader = null,
                this.loader === e && (self.clearTimeout(this.partLoadTimeout),
                this.loader = null),
                e.destroy()
            }
            ,
            t
        }();
        function di(t, e) {
            void 0 === e && (e = null);
            var r = e || t
              , i = {
                frag: t,
                part: e,
                responseType: "arraybuffer",
                url: r.url,
                headers: {},
                rangeStart: 0,
                rangeEnd: 0
            }
              , n = r.byteRangeStartOffset
              , a = r.byteRangeEndOffset;
            if (y(n) && y(a)) {
                var s, o = n, l = a;
                if ("initSegment" === t.sn && "AES-128" === (null == (s = t.decryptdata) ? void 0 : s.method)) {
                    var u = a - n;
                    u % 16 && (l = a + (16 - u % 16)),
                    0 !== n && (i.resetIV = !0,
                    o = n - 16)
                }
                i.rangeStart = o,
                i.rangeEnd = l
            }
            return i
        }
        function ci(t, e) {
            var r = new Error("GAP " + (t.gap ? "tag" : "attribute") + " found")
              , i = {
                type: L.MEDIA_ERROR,
                details: A.FRAG_GAP,
                fatal: !1,
                frag: t,
                error: r,
                networkDetails: null
            };
            return e && (i.part = e),
            (e || t).stats.aborted = !0,
            new fi(i)
        }
        var fi = function(t) {
            function e(e) {
                var r;
                return (r = t.call(this, e.error.message) || this).data = void 0,
                r.data = e,
                r
            }
            return l(e, t),
            e
        }(c(Error))
          , gi = function() {
            function t(t, e) {
                this.subtle = void 0,
                this.aesIV = void 0,
                this.subtle = t,
                this.aesIV = e
            }
            return t.prototype.decrypt = function(t, e) {
                return this.subtle.decrypt({
                    name: "AES-CBC",
                    iv: this.aesIV
                }, e, t)
            }
            ,
            t
        }()
          , vi = function() {
            function t(t, e) {
                this.subtle = void 0,
                this.key = void 0,
                this.subtle = t,
                this.key = e
            }
            return t.prototype.expandKey = function() {
                return this.subtle.importKey("raw", this.key, {
                    name: "AES-CBC"
                }, !1, ["encrypt", "decrypt"])
            }
            ,
            t
        }()
          , mi = function() {
            function t() {
                this.rcon = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54],
                this.subMix = [new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256)],
                this.invSubMix = [new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256)],
                this.sBox = new Uint32Array(256),
                this.invSBox = new Uint32Array(256),
                this.key = new Uint32Array(0),
                this.ksRows = 0,
                this.keySize = 0,
                this.keySchedule = void 0,
                this.invKeySchedule = void 0,
                this.initTable()
            }
            var e = t.prototype;
            return e.uint8ArrayToUint32Array_ = function(t) {
                for (var e = new DataView(t), r = new Uint32Array(4), i = 0; i < 4; i++)
                    r[i] = e.getUint32(4 * i);
                return r
            }
            ,
            e.initTable = function() {
                var t = this.sBox
                  , e = this.invSBox
                  , r = this.subMix
                  , i = r[0]
                  , n = r[1]
                  , a = r[2]
                  , s = r[3]
                  , o = this.invSubMix
                  , l = o[0]
                  , u = o[1]
                  , h = o[2]
                  , d = o[3]
                  , c = new Uint32Array(256)
                  , f = 0
                  , g = 0
                  , v = 0;
                for (v = 0; v < 256; v++)
                    c[v] = v < 128 ? v << 1 : v << 1 ^ 283;
                for (v = 0; v < 256; v++) {
                    var m = g ^ g << 1 ^ g << 2 ^ g << 3 ^ g << 4;
                    m = m >>> 8 ^ 255 & m ^ 99,
                    t[f] = m,
                    e[m] = f;
                    var p = c[f]
                      , y = c[p]
                      , E = c[y]
                      , T = 257 * c[m] ^ 16843008 * m;
                    i[f] = T << 24 | T >>> 8,
                    n[f] = T << 16 | T >>> 16,
                    a[f] = T << 8 | T >>> 24,
                    s[f] = T,
                    T = 16843009 * E ^ 65537 * y ^ 257 * p ^ 16843008 * f,
                    l[m] = T << 24 | T >>> 8,
                    u[m] = T << 16 | T >>> 16,
                    h[m] = T << 8 | T >>> 24,
                    d[m] = T,
                    f ? (f = p ^ c[c[c[E ^ p]]],
                    g ^= c[c[g]]) : f = g = 1
                }
            }
            ,
            e.expandKey = function(t) {
                for (var e = this.uint8ArrayToUint32Array_(t), r = !0, i = 0; i < e.length && r; )
                    r = e[i] === this.key[i],
                    i++;
                if (!r) {
                    this.key = e;
                    var n = this.keySize = e.length;
                    if (4 !== n && 6 !== n && 8 !== n)
                        throw new Error("Invalid aes key size=" + n);
                    var a, s, o, l, u = this.ksRows = 4 * (n + 6 + 1), h = this.keySchedule = new Uint32Array(u), d = this.invKeySchedule = new Uint32Array(u), c = this.sBox, f = this.rcon, g = this.invSubMix, v = g[0], m = g[1], p = g[2], y = g[3];
                    for (a = 0; a < u; a++)
                        a < n ? o = h[a] = e[a] : (l = o,
                        a % n == 0 ? (l = c[(l = l << 8 | l >>> 24) >>> 24] << 24 | c[l >>> 16 & 255] << 16 | c[l >>> 8 & 255] << 8 | c[255 & l],
                        l ^= f[a / n | 0] << 24) : n > 6 && a % n == 4 && (l = c[l >>> 24] << 24 | c[l >>> 16 & 255] << 16 | c[l >>> 8 & 255] << 8 | c[255 & l]),
                        h[a] = o = (h[a - n] ^ l) >>> 0);
                    for (s = 0; s < u; s++)
                        a = u - s,
                        l = 3 & s ? h[a] : h[a - 4],
                        d[s] = s < 4 || a <= 4 ? l : v[c[l >>> 24]] ^ m[c[l >>> 16 & 255]] ^ p[c[l >>> 8 & 255]] ^ y[c[255 & l]],
                        d[s] = d[s] >>> 0
                }
            }
            ,
            e.networkToHostOrderSwap = function(t) {
                return t << 24 | (65280 & t) << 8 | (16711680 & t) >> 8 | t >>> 24
            }
            ,
            e.decrypt = function(t, e, r) {
                for (var i, n, a, s, o, l, u, h, d, c, f, g, v, m, p = this.keySize + 6, y = this.invKeySchedule, E = this.invSBox, T = this.invSubMix, S = T[0], L = T[1], A = T[2], R = T[3], b = this.uint8ArrayToUint32Array_(r), k = b[0], D = b[1], I = b[2], w = b[3], C = new Int32Array(t), _ = new Int32Array(C.length), x = this.networkToHostOrderSwap; e < C.length; ) {
                    for (d = x(C[e]),
                    c = x(C[e + 1]),
                    f = x(C[e + 2]),
                    g = x(C[e + 3]),
                    o = d ^ y[0],
                    l = g ^ y[1],
                    u = f ^ y[2],
                    h = c ^ y[3],
                    v = 4,
                    m = 1; m < p; m++)
                        i = S[o >>> 24] ^ L[l >> 16 & 255] ^ A[u >> 8 & 255] ^ R[255 & h] ^ y[v],
                        n = S[l >>> 24] ^ L[u >> 16 & 255] ^ A[h >> 8 & 255] ^ R[255 & o] ^ y[v + 1],
                        a = S[u >>> 24] ^ L[h >> 16 & 255] ^ A[o >> 8 & 255] ^ R[255 & l] ^ y[v + 2],
                        s = S[h >>> 24] ^ L[o >> 16 & 255] ^ A[l >> 8 & 255] ^ R[255 & u] ^ y[v + 3],
                        o = i,
                        l = n,
                        u = a,
                        h = s,
                        v += 4;
                    i = E[o >>> 24] << 24 ^ E[l >> 16 & 255] << 16 ^ E[u >> 8 & 255] << 8 ^ E[255 & h] ^ y[v],
                    n = E[l >>> 24] << 24 ^ E[u >> 16 & 255] << 16 ^ E[h >> 8 & 255] << 8 ^ E[255 & o] ^ y[v + 1],
                    a = E[u >>> 24] << 24 ^ E[h >> 16 & 255] << 16 ^ E[o >> 8 & 255] << 8 ^ E[255 & l] ^ y[v + 2],
                    s = E[h >>> 24] << 24 ^ E[o >> 16 & 255] << 16 ^ E[l >> 8 & 255] << 8 ^ E[255 & u] ^ y[v + 3],
                    _[e] = x(i ^ k),
                    _[e + 1] = x(s ^ D),
                    _[e + 2] = x(a ^ I),
                    _[e + 3] = x(n ^ w),
                    k = d,
                    D = c,
                    I = f,
                    w = g,
                    e += 4
                }
                return _.buffer
            }
            ,
            t
        }()
          , pi = function() {
            function t(t, e) {
                var r = (void 0 === e ? {} : e).removePKCS7Padding
                  , i = void 0 === r || r;
                if (this.logEnabled = !0,
                this.removePKCS7Padding = void 0,
                this.subtle = null,
                this.softwareDecrypter = null,
                this.key = null,
                this.fastAesKey = null,
                this.remainderData = null,
                this.currentIV = null,
                this.currentResult = null,
                this.useSoftware = void 0,
                this.useSoftware = t.enableSoftwareAES,
                this.removePKCS7Padding = i,
                i)
                    try {
                        var n = self.crypto;
                        n && (this.subtle = n.subtle || n.webkitSubtle)
                    } catch (t) {}
                this.useSoftware = !this.subtle
            }
            var e = t.prototype;
            return e.destroy = function() {
                this.subtle = null,
                this.softwareDecrypter = null,
                this.key = null,
                this.fastAesKey = null,
                this.remainderData = null,
                this.currentIV = null,
                this.currentResult = null
            }
            ,
            e.isSync = function() {
                return this.useSoftware
            }
            ,
            e.flush = function() {
                var t = this.currentResult
                  , e = this.remainderData;
                if (!t || e)
                    return this.reset(),
                    null;
                var r, i, n, a = new Uint8Array(t);
                return this.reset(),
                this.removePKCS7Padding ? (i = (r = a).byteLength,
                (n = i && new DataView(r.buffer).getUint8(i - 1)) ? lt(r, 0, i - n) : r) : a
            }
            ,
            e.reset = function() {
                this.currentResult = null,
                this.currentIV = null,
                this.remainderData = null,
                this.softwareDecrypter && (this.softwareDecrypter = null)
            }
            ,
            e.decrypt = function(t, e, r) {
                var i = this;
                return this.useSoftware ? new Promise((function(n, a) {
                    i.softwareDecrypt(new Uint8Array(t), e, r);
                    var s = i.flush();
                    s ? n(s.buffer) : a(new Error("[softwareDecrypt] Failed to decrypt data"))
                }
                )) : this.webCryptoDecrypt(new Uint8Array(t), e, r)
            }
            ,
            e.softwareDecrypt = function(t, e, r) {
                var i = this.currentIV
                  , n = this.currentResult
                  , a = this.remainderData;
                this.logOnce("JS AES decrypt"),
                a && (t = Wt(a, t),
                this.remainderData = null);
                var s = this.getValidChunk(t);
                if (!s.length)
                    return null;
                i && (r = i);
                var o = this.softwareDecrypter;
                o || (o = this.softwareDecrypter = new mi),
                o.expandKey(e);
                var l = n;
                return this.currentResult = o.decrypt(s.buffer, 0, r),
                this.currentIV = lt(s, -16).buffer,
                l || null
            }
            ,
            e.webCryptoDecrypt = function(t, e, r) {
                var i = this;
                if (this.key !== e || !this.fastAesKey) {
                    if (!this.subtle)
                        return Promise.resolve(this.onWebCryptoError(t, e, r));
                    this.key = e,
                    this.fastAesKey = new vi(this.subtle,e)
                }
                return this.fastAesKey.expandKey().then((function(e) {
                    return i.subtle ? (i.logOnce("WebCrypto AES decrypt"),
                    new gi(i.subtle,new Uint8Array(r)).decrypt(t.buffer, e)) : Promise.reject(new Error("web crypto not initialized"))
                }
                )).catch((function(n) {
                    return w.warn("[decrypter]: WebCrypto Error, disable WebCrypto API, " + n.name + ": " + n.message),
                    i.onWebCryptoError(t, e, r)
                }
                ))
            }
            ,
            e.onWebCryptoError = function(t, e, r) {
                this.useSoftware = !0,
                this.logEnabled = !0,
                this.softwareDecrypt(t, e, r);
                var i = this.flush();
                if (i)
                    return i.buffer;
                throw new Error("WebCrypto and softwareDecrypt: failed to decrypt data")
            }
            ,
            e.getValidChunk = function(t) {
                var e = t
                  , r = t.length - t.length % 16;
                return r !== t.length && (e = lt(t, 0, r),
                this.remainderData = lt(t, r)),
                e
            }
            ,
            e.logOnce = function(t) {
                this.logEnabled && (w.log("[decrypter]: " + t),
                this.logEnabled = !1)
            }
            ,
            t
        }()
          , yi = function(t) {
            for (var e = "", r = t.length, i = 0; i < r; i++)
                e += "[" + t.start(i).toFixed(3) + "-" + t.end(i).toFixed(3) + "]";
            return e
        }
          , Ei = "STOPPED"
          , Ti = "IDLE"
          , Si = "KEY_LOADING"
          , Li = "FRAG_LOADING"
          , Ai = "FRAG_LOADING_WAITING_RETRY"
          , Ri = "WAITING_TRACK"
          , bi = "PARSING"
          , ki = "PARSED"
          , Di = "ENDED"
          , Ii = "ERROR"
          , wi = "WAITING_INIT_PTS"
          , Ci = "WAITING_LEVEL"
          , _i = function(t) {
            function e(e, r, i, n, a) {
                var s;
                return (s = t.call(this) || this).hls = void 0,
                s.fragPrevious = null,
                s.fragCurrent = null,
                s.fragmentTracker = void 0,
                s.transmuxer = null,
                s._state = Ei,
                s.playlistType = void 0,
                s.media = null,
                s.mediaBuffer = null,
                s.config = void 0,
                s.bitrateTest = !1,
                s.lastCurrentTime = 0,
                s.nextLoadPosition = 0,
                s.startPosition = 0,
                s.startTimeOffset = null,
                s.loadedmetadata = !1,
                s.retryDate = 0,
                s.levels = null,
                s.fragmentLoader = void 0,
                s.keyLoader = void 0,
                s.levelLastLoaded = null,
                s.startFragRequested = !1,
                s.decrypter = void 0,
                s.initPTS = [],
                s.onvseeking = null,
                s.onvended = null,
                s.logPrefix = "",
                s.log = void 0,
                s.warn = void 0,
                s.playlistType = a,
                s.logPrefix = n,
                s.log = w.log.bind(w, n + ":"),
                s.warn = w.warn.bind(w, n + ":"),
                s.hls = e,
                s.fragmentLoader = new hi(e.config),
                s.keyLoader = i,
                s.fragmentTracker = r,
                s.config = e.config,
                s.decrypter = new pi(e.config),
                e.on(S.MANIFEST_LOADED, s.onManifestLoaded, function(t) {
                    if (void 0 === t)
                        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t
                }(s)),
                s
            }
            l(e, t);
            var r = e.prototype;
            return r.doTick = function() {
                this.onTickEnd()
            }
            ,
            r.onTickEnd = function() {}
            ,
            r.startLoad = function(t) {}
            ,
            r.stopLoad = function() {
                this.fragmentLoader.abort(),
                this.keyLoader.abort(this.playlistType);
                var t = this.fragCurrent;
                null != t && t.loader && (t.abortRequests(),
                this.fragmentTracker.removeFragment(t)),
                this.resetTransmuxer(),
                this.fragCurrent = null,
                this.fragPrevious = null,
                this.clearInterval(),
                this.clearNextTick(),
                this.state = Ei
            }
            ,
            r._streamEnded = function(t, e) {
                if (e.live || t.nextStart || !t.end || !this.media)
                    return !1;
                var r = e.partList;
                if (null != r && r.length) {
                    var i = r[r.length - 1];
                    return ri.isBuffered(this.media, i.start + i.duration / 2)
                }
                var n = e.fragments[e.fragments.length - 1].type;
                return this.fragmentTracker.isEndListAppended(n)
            }
            ,
            r.getLevelDetails = function() {
                var t;
                if (this.levels && null !== this.levelLastLoaded)
                    return null == (t = this.levelLastLoaded) ? void 0 : t.details
            }
            ,
            r.onMediaAttached = function(t, e) {
                var r = this.media = this.mediaBuffer = e.media;
                this.onvseeking = this.onMediaSeeking.bind(this),
                this.onvended = this.onMediaEnded.bind(this),
                r.addEventListener("seeking", this.onvseeking),
                r.addEventListener("ended", this.onvended);
                var i = this.config;
                this.levels && i.autoStartLoad && this.state === Ei && this.startLoad(i.startPosition)
            }
            ,
            r.onMediaDetaching = function() {
                var t = this.media;
                null != t && t.ended && (this.log("MSE detaching and video ended, reset startPosition"),
                this.startPosition = this.lastCurrentTime = 0),
                t && this.onvseeking && this.onvended && (t.removeEventListener("seeking", this.onvseeking),
                t.removeEventListener("ended", this.onvended),
                this.onvseeking = this.onvended = null),
                this.keyLoader && this.keyLoader.detach(),
                this.media = this.mediaBuffer = null,
                this.loadedmetadata = !1,
                this.fragmentTracker.removeAllFragments(),
                this.stopLoad()
            }
            ,
            r.onMediaSeeking = function() {
                var t = this.config
                  , e = this.fragCurrent
                  , r = this.media
                  , i = this.mediaBuffer
                  , n = this.state
                  , a = r ? r.currentTime : 0
                  , s = ri.bufferInfo(i || r, a, t.maxBufferHole);
                if (this.log("media seeking to " + (y(a) ? a.toFixed(3) : a) + ", state: " + n),
                this.state === Di)
                    this.resetLoadingState();
                else if (e) {
                    var o = t.maxFragLookUpTolerance
                      , l = e.start - o
                      , u = e.start + e.duration + o;
                    if (!s.len || u < s.start || l > s.end) {
                        var h = a > u;
                        (a < l || h) && (h && e.loader && (this.log("seeking outside of buffer while fragment load in progress, cancel fragment load"),
                        e.abortRequests(),
                        this.resetLoadingState()),
                        this.fragPrevious = null)
                    }
                }
                r && (this.fragmentTracker.removeFragmentsInRange(a, 1 / 0, this.playlistType, !0),
                this.lastCurrentTime = a),
                this.loadedmetadata || s.len || (this.nextLoadPosition = this.startPosition = a),
                this.tickImmediate()
            }
            ,
            r.onMediaEnded = function() {
                this.startPosition = this.lastCurrentTime = 0
            }
            ,
            r.onManifestLoaded = function(t, e) {
                this.startTimeOffset = e.startTimeOffset,
                this.initPTS = []
            }
            ,
            r.onHandlerDestroying = function() {
                this.hls.off(S.MANIFEST_LOADED, this.onManifestLoaded, this),
                this.stopLoad(),
                t.prototype.onHandlerDestroying.call(this),
                this.hls = null
            }
            ,
            r.onHandlerDestroyed = function() {
                this.state = Ei,
                this.fragmentLoader && this.fragmentLoader.destroy(),
                this.keyLoader && this.keyLoader.destroy(),
                this.decrypter && this.decrypter.destroy(),
                this.hls = this.log = this.warn = this.decrypter = this.keyLoader = this.fragmentLoader = this.fragmentTracker = null,
                t.prototype.onHandlerDestroyed.call(this)
            }
            ,
            r.loadFragment = function(t, e, r) {
                this._loadFragForPlayback(t, e, r)
            }
            ,
            r._loadFragForPlayback = function(t, e, r) {
                var i = this;
                this._doFragLoad(t, e, r, (function(e) {
                    if (i.fragContextChanged(t))
                        return i.warn("Fragment " + t.sn + (e.part ? " p: " + e.part.index : "") + " of level " + t.level + " was dropped during download."),
                        void i.fragmentTracker.removeFragment(t);
                    t.stats.chunkCount++,
                    i._handleFragmentLoadProgress(e)
                }
                )).then((function(e) {
                    if (e) {
                        var r = i.state;
                        i.fragContextChanged(t) ? (r === Li || !i.fragCurrent && r === bi) && (i.fragmentTracker.removeFragment(t),
                        i.state = Ti) : ("payload"in e && (i.log("Loaded fragment " + t.sn + " of level " + t.level),
                        i.hls.trigger(S.FRAG_LOADED, e)),
                        i._handleFragmentLoadComplete(e))
                    }
                }
                )).catch((function(e) {
                    i.state !== Ei && i.state !== Ii && (i.warn("Frag error: " + ((null == e ? void 0 : e.message) || e)),
                    i.resetFragmentLoading(t))
                }
                ))
            }
            ,
            r.clearTrackerIfNeeded = function(t) {
                var e, r = this.fragmentTracker;
                if (r.getState(t) === zr) {
                    var i = t.type
                      , n = this.getFwdBufferInfo(this.mediaBuffer, i)
                      , a = Math.max(t.duration, n ? n.len : this.config.maxBufferLength)
                      , s = this.backtrackFragment;
                    (1 == (s ? t.sn - s.sn : 0) || this.reduceMaxBufferLength(a, t.duration)) && r.removeFragment(t)
                } else
                    0 === (null == (e = this.mediaBuffer) ? void 0 : e.buffered.length) ? r.removeAllFragments() : r.hasParts(t.type) && (r.detectPartialFragments({
                        frag: t,
                        part: null,
                        stats: t.stats,
                        id: t.type
                    }),
                    r.getState(t) === Qr && r.removeFragment(t))
            }
            ,
            r.checkLiveUpdate = function(t) {
                if (t.updated && !t.live) {
                    var e = t.fragments[t.fragments.length - 1];
                    this.fragmentTracker.detectPartialFragments({
                        frag: e,
                        part: null,
                        stats: e.stats,
                        id: e.type
                    })
                }
                t.fragments[0] || (t.deltaUpdateFailed = !0)
            }
            ,
            r.flushMainBuffer = function(t, e, r) {
                if (void 0 === r && (r = null),
                t - e) {
                    var i = {
                        startOffset: t,
                        endOffset: e,
                        type: r
                    };
                    this.hls.trigger(S.BUFFER_FLUSHING, i)
                }
            }
            ,
            r._loadInitSegment = function(t, e) {
                var r = this;
                this._doFragLoad(t, e).then((function(e) {
                    if (!e || r.fragContextChanged(t) || !r.levels)
                        throw new Error("init load aborted");
                    return e
                }
                )).then((function(e) {
                    var i = r.hls
                      , n = e.payload
                      , a = t.decryptdata;
                    if (n && n.byteLength > 0 && null != a && a.key && a.iv && "AES-128" === a.method) {
                        var s = self.performance.now();
                        return r.decrypter.decrypt(new Uint8Array(n), a.key.buffer, a.iv.buffer).catch((function(e) {
                            throw i.trigger(S.ERROR, {
                                type: L.MEDIA_ERROR,
                                details: A.FRAG_DECRYPT_ERROR,
                                fatal: !1,
                                error: e,
                                reason: e.message,
                                frag: t
                            }),
                            e
                        }
                        )).then((function(n) {
                            var a = self.performance.now();
                            return i.trigger(S.FRAG_DECRYPTED, {
                                frag: t,
                                payload: n,
                                stats: {
                                    tstart: s,
                                    tdecrypt: a
                                }
                            }),
                            e.payload = n,
                            r.completeInitSegmentLoad(e)
                        }
                        ))
                    }
                    return r.completeInitSegmentLoad(e)
                }
                )).catch((function(e) {
                    r.state !== Ei && r.state !== Ii && (r.warn(e),
                    r.resetFragmentLoading(t))
                }
                ))
            }
            ,
            r.completeInitSegmentLoad = function(t) {
                if (!this.levels)
                    throw new Error("init load aborted, missing levels");
                var e = t.frag.stats;
                this.state = Ti,
                t.frag.data = new Uint8Array(t.payload),
                e.parsing.start = e.buffering.start = self.performance.now(),
                e.parsing.end = e.buffering.end = self.performance.now(),
                this.tick()
            }
            ,
            r.fragContextChanged = function(t) {
                var e = this.fragCurrent;
                return !t || !e || t.sn !== e.sn || t.level !== e.level
            }
            ,
            r.fragBufferedComplete = function(t, e) {
                var r, i, n, a, s = this.mediaBuffer ? this.mediaBuffer : this.media;
                if (this.log("Buffered " + t.type + " sn: " + t.sn + (e ? " part: " + e.index : "") + " of " + (this.playlistType === Fe ? "level" : "track") + " " + t.level + " (frag:[" + (null != (r = t.startPTS) ? r : NaN).toFixed(3) + "-" + (null != (i = t.endPTS) ? i : NaN).toFixed(3) + "] > buffer:" + (s ? yi(ri.getBuffered(s)) : "(detached)") + ")"),
                "initSegment" !== t.sn) {
                    var o;
                    if (t.type !== Oe) {
                        var l = t.elementaryStreams;
                        if (!Object.keys(l).some((function(t) {
                            return !!l[t]
                        }
                        )))
                            return void (this.state = Ti)
                    }
                    var u = null == (o = this.levels) ? void 0 : o[t.level];
                    null != u && u.fragmentError && (this.log("Resetting level fragment error count of " + u.fragmentError + " on frag buffered"),
                    u.fragmentError = 0)
                }
                this.state = Ti,
                s && (!this.loadedmetadata && t.type == Fe && s.buffered.length && (null == (n = this.fragCurrent) ? void 0 : n.sn) === (null == (a = this.fragPrevious) ? void 0 : a.sn) && (this.loadedmetadata = !0,
                this.seekToStartPos()),
                this.tick())
            }
            ,
            r.seekToStartPos = function() {}
            ,
            r._handleFragmentLoadComplete = function(t) {
                var e = this.transmuxer;
                if (e) {
                    var r = t.frag
                      , i = t.part
                      , n = t.partsLoaded
                      , a = !n || 0 === n.length || n.some((function(t) {
                        return !t
                    }
                    ))
                      , s = new ii(r.level,r.sn,r.stats.chunkCount + 1,0,i ? i.index : -1,!a);
                    e.flush(s)
                }
            }
            ,
            r._handleFragmentLoadProgress = function(t) {}
            ,
            r._doFragLoad = function(t, e, r, i) {
                var n, a = this;
                void 0 === r && (r = null);
                var s = null == e ? void 0 : e.details;
                if (!this.levels || !s)
                    throw new Error("frag load aborted, missing level" + (s ? "" : " detail") + "s");
                var o = null;
                if (!t.encrypted || null != (n = t.decryptdata) && n.key ? !t.encrypted && s.encryptedFragments.length && this.keyLoader.loadClear(t, s.encryptedFragments) : (this.log("Loading key for " + t.sn + " of [" + s.startSN + "-" + s.endSN + "], " + ("[stream-controller]" === this.logPrefix ? "level" : "track") + " " + t.level),
                this.state = Si,
                this.fragCurrent = t,
                o = this.keyLoader.load(t).then((function(t) {
                    if (!a.fragContextChanged(t.frag))
                        return a.hls.trigger(S.KEY_LOADED, t),
                        a.state === Si && (a.state = Ti),
                        t
                }
                )),
                this.hls.trigger(S.KEY_LOADING, {
                    frag: t
                }),
                null === this.fragCurrent && (o = Promise.reject(new Error("frag load aborted, context changed in KEY_LOADING")))),
                r = Math.max(t.start, r || 0),
                this.config.lowLatencyMode && "initSegment" !== t.sn) {
                    var l = s.partList;
                    if (l && i) {
                        r > t.end && s.fragmentHint && (t = s.fragmentHint);
                        var u = this.getNextPart(l, t, r);
                        if (u > -1) {
                            var h, d = l[u];
                            return this.log("Loading part sn: " + t.sn + " p: " + d.index + " cc: " + t.cc + " of playlist [" + s.startSN + "-" + s.endSN + "] parts [0-" + u + "-" + (l.length - 1) + "] " + ("[stream-controller]" === this.logPrefix ? "level" : "track") + ": " + t.level + ", target: " + parseFloat(r.toFixed(3))),
                            this.nextLoadPosition = d.start + d.duration,
                            this.state = Li,
                            h = o ? o.then((function(r) {
                                return !r || a.fragContextChanged(r.frag) ? null : a.doFragPartsLoad(t, d, e, i)
                            }
                            )).catch((function(t) {
                                return a.handleFragLoadError(t)
                            }
                            )) : this.doFragPartsLoad(t, d, e, i).catch((function(t) {
                                return a.handleFragLoadError(t)
                            }
                            )),
                            this.hls.trigger(S.FRAG_LOADING, {
                                frag: t,
                                part: d,
                                targetBufferTime: r
                            }),
                            null === this.fragCurrent ? Promise.reject(new Error("frag load aborted, context changed in FRAG_LOADING parts")) : h
                        }
                        if (!t.url || this.loadedEndOfParts(l, r))
                            return Promise.resolve(null)
                    }
                }
                this.log("Loading fragment " + t.sn + " cc: " + t.cc + " " + (s ? "of [" + s.startSN + "-" + s.endSN + "] " : "") + ("[stream-controller]" === this.logPrefix ? "level" : "track") + ": " + t.level + ", target: " + parseFloat(r.toFixed(3))),
                y(t.sn) && !this.bitrateTest && (this.nextLoadPosition = t.start + t.duration),
                this.state = Li;
                var c, f = this.config.progressive;
                return c = f && o ? o.then((function(e) {
                    return !e || a.fragContextChanged(null == e ? void 0 : e.frag) ? null : a.fragmentLoader.load(t, i)
                }
                )).catch((function(t) {
                    return a.handleFragLoadError(t)
                }
                )) : Promise.all([this.fragmentLoader.load(t, f ? i : void 0), o]).then((function(t) {
                    var e = t[0];
                    return !f && e && i && i(e),
                    e
                }
                )).catch((function(t) {
                    return a.handleFragLoadError(t)
                }
                )),
                this.hls.trigger(S.FRAG_LOADING, {
                    frag: t,
                    targetBufferTime: r
                }),
                null === this.fragCurrent ? Promise.reject(new Error("frag load aborted, context changed in FRAG_LOADING")) : c
            }
            ,
            r.doFragPartsLoad = function(t, e, r, i) {
                var n = this;
                return new Promise((function(a, s) {
                    var o, l = [], u = null == (o = r.details) ? void 0 : o.partList;
                    !function e(o) {
                        n.fragmentLoader.loadPart(t, o, i).then((function(i) {
                            l[o.index] = i;
                            var s = i.part;
                            n.hls.trigger(S.FRAG_LOADED, i);
                            var h = gr(r, t.sn, o.index + 1) || vr(u, t.sn, o.index + 1);
                            if (!h)
                                return a({
                                    frag: t,
                                    part: s,
                                    partsLoaded: l
                                });
                            e(h)
                        }
                        )).catch(s)
                    }(e)
                }
                ))
            }
            ,
            r.handleFragLoadError = function(t) {
                if ("data"in t) {
                    var e = t.data;
                    t.data && e.details === A.INTERNAL_ABORTED ? this.handleFragLoadAborted(e.frag, e.part) : this.hls.trigger(S.ERROR, e)
                } else
                    this.hls.trigger(S.ERROR, {
                        type: L.OTHER_ERROR,
                        details: A.INTERNAL_EXCEPTION,
                        err: t,
                        error: t,
                        fatal: !0
                    });
                return null
            }
            ,
            r._handleTransmuxerFlush = function(t) {
                var e = this.getCurrentContext(t);
                if (e && this.state === bi) {
                    var r = e.frag
                      , i = e.part
                      , n = e.level
                      , a = self.performance.now();
                    r.stats.parsing.end = a,
                    i && (i.stats.parsing.end = a),
                    this.updateLevelTiming(r, i, n, t.partial)
                } else
                    this.fragCurrent || this.state === Ei || this.state === Ii || (this.state = Ti)
            }
            ,
            r.getCurrentContext = function(t) {
                var e = this.levels
                  , r = this.fragCurrent
                  , i = t.level
                  , n = t.sn
                  , a = t.part;
                if (null == e || !e[i])
                    return this.warn("Levels object was unset while buffering fragment " + n + " of level " + i + ". The current chunk will not be buffered."),
                    null;
                var s = e[i]
                  , o = a > -1 ? gr(s, n, a) : null
                  , l = o ? o.fragment : function(t, e, r) {
                    if (null == t || !t.details)
                        return null;
                    var i = t.details
                      , n = i.fragments[e - i.startSN];
                    return n || ((n = i.fragmentHint) && n.sn === e ? n : e < i.startSN && r && r.sn === e ? r : null)
                }(s, n, r);
                return l ? (r && r !== l && (l.stats = r.stats),
                {
                    frag: l,
                    part: o,
                    level: s
                }) : null
            }
            ,
            r.bufferFragmentData = function(t, e, r, i, n) {
                var a;
                if (t && this.state === bi) {
                    var s = t.data1
                      , o = t.data2
                      , l = s;
                    if (s && o && (l = Wt(s, o)),
                    null != (a = l) && a.length) {
                        var u = {
                            type: t.type,
                            frag: e,
                            part: r,
                            chunkMeta: i,
                            parent: e.type,
                            data: l
                        };
                        if (this.hls.trigger(S.BUFFER_APPENDING, u),
                        t.dropped && t.independent && !r) {
                            if (n)
                                return;
                            this.flushBufferGap(e)
                        }
                    }
                }
            }
            ,
            r.flushBufferGap = function(t) {
                var e = this.media;
                if (e)
                    if (ri.isBuffered(e, e.currentTime)) {
                        var r = e.currentTime
                          , i = ri.bufferInfo(e, r, 0)
                          , n = t.duration
                          , a = Math.min(2 * this.config.maxFragLookUpTolerance, .25 * n)
                          , s = Math.max(Math.min(t.start - a, i.end - a), r + a);
                        t.start - s > a && this.flushMainBuffer(s, t.start)
                    } else
                        this.flushMainBuffer(0, t.start)
            }
            ,
            r.getFwdBufferInfo = function(t, e) {
                var r = this.getLoadPosition();
                return y(r) ? this.getFwdBufferInfoAtPos(t, r, e) : null
            }
            ,
            r.getFwdBufferInfoAtPos = function(t, e, r) {
                var i = this.config.maxBufferHole
                  , n = ri.bufferInfo(t, e, i);
                if (0 === n.len && void 0 !== n.nextStart) {
                    var a = this.fragmentTracker.getBufferedFrag(e, r);
                    if (a && n.nextStart < a.end)
                        return ri.bufferInfo(t, e, Math.max(n.nextStart, i))
                }
                return n
            }
            ,
            r.getMaxBufferLength = function(t) {
                var e, r = this.config;
                return e = t ? Math.max(8 * r.maxBufferSize / t, r.maxBufferLength) : r.maxBufferLength,
                Math.min(e, r.maxMaxBufferLength)
            }
            ,
            r.reduceMaxBufferLength = function(t, e) {
                var r = this.config
                  , i = Math.max(Math.min(t - e, r.maxBufferLength), e)
                  , n = Math.max(t - 3 * e, r.maxMaxBufferLength / 2, i);
                return n >= i && (r.maxMaxBufferLength = n,
                this.warn("Reduce max buffer length to " + n + "s"),
                !0)
            }
            ,
            r.getAppendedFrag = function(t, e) {
                var r = this.fragmentTracker.getAppendedFrag(t, Fe);
                return r && "fragment"in r ? r.fragment : r
            }
            ,
            r.getNextFragment = function(t, e) {
                var r = e.fragments
                  , i = r.length;
                if (!i)
                    return null;
                var n, a = this.config, s = r[0].start;
                if (e.live) {
                    var o = a.initialLiveManifestSize;
                    if (i < o)
                        return this.warn("Not enough fragments to start playback (have: " + i + ", need: " + o + ")"),
                        null;
                    (!e.PTSKnown && !this.startFragRequested && -1 === this.startPosition || t < s) && (n = this.getInitialLiveFragment(e, r),
                    this.startPosition = this.nextLoadPosition = n ? this.hls.liveSyncPosition || n.start : t)
                } else
                    t <= s && (n = r[0]);
                if (!n) {
                    var l = a.lowLatencyMode ? e.partEnd : e.fragmentEnd;
                    n = this.getFragmentAtPosition(t, l, e)
                }
                return this.mapToInitFragWhenRequired(n)
            }
            ,
            r.isLoopLoading = function(t, e) {
                var r = this.fragmentTracker.getState(t);
                return (r === Jr || r === Qr && !!t.gap) && this.nextLoadPosition > e
            }
            ,
            r.getNextFragmentLoopLoading = function(t, e, r, i, n) {
                var a = t.gap
                  , s = this.getNextFragment(this.nextLoadPosition, e);
                if (null === s)
                    return s;
                if (t = s,
                a && t && !t.gap && r.nextStart) {
                    var o = this.getFwdBufferInfoAtPos(this.mediaBuffer ? this.mediaBuffer : this.media, r.nextStart, i);
                    if (null !== o && r.len + o.len >= n)
                        return this.log('buffer full after gaps in "' + i + '" playlist starting at sn: ' + t.sn),
                        null
                }
                return t
            }
            ,
            r.mapToInitFragWhenRequired = function(t) {
                return null == t || !t.initSegment || null != t && t.initSegment.data || this.bitrateTest ? t : t.initSegment
            }
            ,
            r.getNextPart = function(t, e, r) {
                for (var i = -1, n = !1, a = !0, s = 0, o = t.length; s < o; s++) {
                    var l = t[s];
                    if (a = a && !l.independent,
                    i > -1 && r < l.start)
                        break;
                    var u = l.loaded;
                    u ? i = -1 : (n || l.independent || a) && l.fragment === e && (i = s),
                    n = u
                }
                return i
            }
            ,
            r.loadedEndOfParts = function(t, e) {
                var r = t[t.length - 1];
                return r && e > r.start && r.loaded
            }
            ,
            r.getInitialLiveFragment = function(t, e) {
                var r = this.fragPrevious
                  , i = null;
                if (r) {
                    if (t.hasProgramDateTime && (this.log("Live playlist, switching playlist, load frag with same PDT: " + r.programDateTime),
                    i = function(t, e, r) {
                        if (null === e || !Array.isArray(t) || !t.length || !y(e))
                            return null;
                        if (e < (t[0].programDateTime || 0))
                            return null;
                        if (e >= (t[t.length - 1].endProgramDateTime || 0))
                            return null;
                        r = r || 0;
                        for (var i = 0; i < t.length; ++i) {
                            var n = t[i];
                            if (br(e, r, n))
                                return n
                        }
                        return null
                    }(e, r.endProgramDateTime, this.config.maxFragLookUpTolerance)),
                    !i) {
                        var n = r.sn + 1;
                        if (n >= t.startSN && n <= t.endSN) {
                            var a = e[n - t.startSN];
                            r.cc === a.cc && (i = a,
                            this.log("Live playlist, switching playlist, load frag with next SN: " + i.sn))
                        }
                        i || (i = function(t, e) {
                            return Lr(t, (function(t) {
                                return t.cc < e ? 1 : t.cc > e ? -1 : 0
                            }
                            ))
                        }(e, r.cc),
                        i && this.log("Live playlist, switching playlist, load frag with same CC: " + i.sn))
                    }
                } else {
                    var s = this.hls.liveSyncPosition;
                    null !== s && (i = this.getFragmentAtPosition(s, this.bitrateTest ? t.fragmentEnd : t.edge, t))
                }
                return i
            }
            ,
            r.getFragmentAtPosition = function(t, e, r) {
                var i, n = this.config, a = this.fragPrevious, s = r.fragments, o = r.endSN, l = r.fragmentHint, u = n.maxFragLookUpTolerance, h = r.partList, d = !!(n.lowLatencyMode && null != h && h.length && l);
                if (d && l && !this.bitrateTest && (s = s.concat(l),
                o = l.sn),
                i = t < e ? Ar(a, s, t, t > e - u ? 0 : u) : s[s.length - 1]) {
                    var c = i.sn - r.startSN
                      , f = this.fragmentTracker.getState(i);
                    if ((f === Jr || f === Qr && i.gap) && (a = i),
                    a && i.sn === a.sn && (!d || h[0].fragment.sn > i.sn) && a && i.level === a.level) {
                        var g = s[c + 1];
                        i = i.sn < o && this.fragmentTracker.getState(g) !== Jr ? g : null
                    }
                }
                return i
            }
            ,
            r.synchronizeToLiveEdge = function(t) {
                var e = this.config
                  , r = this.media;
                if (r) {
                    var i = this.hls.liveSyncPosition
                      , n = r.currentTime
                      , a = t.fragments[0].start
                      , s = t.edge
                      , o = n >= a - e.maxFragLookUpTolerance && n <= s;
                    if (null !== i && r.duration > i && (n < i || !o)) {
                        var l = void 0 !== e.liveMaxLatencyDuration ? e.liveMaxLatencyDuration : e.liveMaxLatencyDurationCount * t.targetduration;
                        (!o && r.readyState < 4 || n < s - l) && (this.loadedmetadata || (this.nextLoadPosition = i),
                        r.readyState && (this.warn("Playback: " + n.toFixed(3) + " is located too far from the end of live sliding playlist: " + s + ", reset currentTime to : " + i.toFixed(3)),
                        r.currentTime = i))
                    }
                }
            }
            ,
            r.alignPlaylists = function(t, e, r) {
                var i = t.fragments.length;
                if (!i)
                    return this.warn("No fragments in live playlist"),
                    0;
                var n = t.fragments[0].start
                  , a = !e
                  , s = t.alignedSliding && y(n);
                if (a || !s && !n) {
                    var o = this.fragPrevious;
                    oi(o, r, t);
                    var l = t.fragments[0].start;
                    return this.log("Live playlist sliding: " + l.toFixed(2) + " start-sn: " + (e ? e.startSN : "na") + "->" + t.startSN + " prev-sn: " + (o ? o.sn : "na") + " fragments: " + i),
                    l
                }
                return n
            }
            ,
            r.waitForCdnTuneIn = function(t) {
                return t.live && t.canBlockReload && t.partTarget && t.tuneInGoal > Math.max(t.partHoldBack, 3 * t.partTarget)
            }
            ,
            r.setStartPosition = function(t, e) {
                var r = this.startPosition;
                if (r < e && (r = -1),
                -1 === r || -1 === this.lastCurrentTime) {
                    var i = null !== this.startTimeOffset
                      , n = i ? this.startTimeOffset : t.startTimeOffset;
                    null !== n && y(n) ? (r = e + n,
                    n < 0 && (r += t.totalduration),
                    r = Math.min(Math.max(e, r), e + t.totalduration),
                    this.log("Start time offset " + n + " found in " + (i ? "multivariant" : "media") + " playlist, adjust startPosition to " + r),
                    this.startPosition = r) : t.live ? r = this.hls.liveSyncPosition || e : this.startPosition = r = 0,
                    this.lastCurrentTime = r
                }
                this.nextLoadPosition = r
            }
            ,
            r.getLoadPosition = function() {
                var t = this.media
                  , e = 0;
                return this.loadedmetadata && t ? e = t.currentTime : this.nextLoadPosition && (e = this.nextLoadPosition),
                e
            }
            ,
            r.handleFragLoadAborted = function(t, e) {
                this.transmuxer && "initSegment" !== t.sn && t.stats.aborted && (this.warn("Fragment " + t.sn + (e ? " part " + e.index : "") + " of level " + t.level + " was aborted"),
                this.resetFragmentLoading(t))
            }
            ,
            r.resetFragmentLoading = function(t) {
                this.fragCurrent && (this.fragContextChanged(t) || this.state === Ai) || (this.state = Ti)
            }
            ,
            r.onFragmentOrKeyLoadError = function(t, e) {
                if (e.chunkMeta && !e.frag) {
                    var r = this.getCurrentContext(e.chunkMeta);
                    r && (e.frag = r.frag)
                }
                var i = e.frag;
                if (i && i.type === t && this.levels)
                    if (this.fragContextChanged(i)) {
                        var n;
                        this.warn("Frag load error must match current frag to retry " + i.url + " > " + (null == (n = this.fragCurrent) ? void 0 : n.url))
                    } else {
                        var a = e.details === A.FRAG_GAP;
                        a && this.fragmentTracker.fragBuffered(i, !0);
                        var s = e.errorAction
                          , o = s || {}
                          , l = o.action
                          , u = o.retryCount
                          , h = void 0 === u ? 0 : u
                          , d = o.retryConfig;
                        if (s && l === wr && d) {
                            this.resetStartWhenNotLoaded(this.levelLastLoaded);
                            var c = Er(d, h);
                            this.warn("Fragment " + i.sn + " of " + t + " " + i.level + " errored with " + e.details + ", retrying loading " + (h + 1) + "/" + d.maxNumRetry + " in " + c + "ms"),
                            s.resolved = !0,
                            this.retryDate = self.performance.now() + c,
                            this.state = Ai
                        } else if (d && s) {
                            if (this.resetFragmentErrors(t),
                            !(h < d.maxNumRetry))
                                return void w.warn(e.details + " reached or exceeded max retry (" + h + ")");
                            a || l === Ir || (s.resolved = !0)
                        } else
                            (null == s ? void 0 : s.action) === Dr ? this.state = Ci : this.state = Ii;
                        this.tickImmediate()
                    }
            }
            ,
            r.reduceLengthAndFlushBuffer = function(t) {
                if (this.state === bi || this.state === ki) {
                    var e = t.frag
                      , r = t.parent
                      , i = this.getFwdBufferInfo(this.mediaBuffer, r)
                      , n = i && i.len > .5;
                    n && this.reduceMaxBufferLength(i.len, (null == e ? void 0 : e.duration) || 10);
                    var a = !n;
                    return a && this.warn("Buffer full error while media.currentTime is not buffered, flush " + r + " buffer"),
                    e && (this.fragmentTracker.removeFragment(e),
                    this.nextLoadPosition = e.start),
                    this.resetLoadingState(),
                    a
                }
                return !1
            }
            ,
            r.resetFragmentErrors = function(t) {
                t === Me && (this.fragCurrent = null),
                this.loadedmetadata || (this.startFragRequested = !1),
                this.state !== Ei && (this.state = Ti)
            }
            ,
            r.afterBufferFlushed = function(t, e, r) {
                if (t) {
                    var i = ri.getBuffered(t);
                    this.fragmentTracker.detectEvictedFragments(e, i, r),
                    this.state === Di && this.resetLoadingState()
                }
            }
            ,
            r.resetLoadingState = function() {
                this.log("Reset loading state"),
                this.fragCurrent = null,
                this.fragPrevious = null,
                this.state = Ti
            }
            ,
            r.resetStartWhenNotLoaded = function(t) {
                if (!this.loadedmetadata) {
                    this.startFragRequested = !1;
                    var e = t ? t.details : null;
                    null != e && e.live ? (this.startPosition = -1,
                    this.setStartPosition(e, 0),
                    this.resetLoadingState()) : this.nextLoadPosition = this.startPosition
                }
            }
            ,
            r.resetWhenMissingContext = function(t) {
                this.warn("The loading context changed while buffering fragment " + t.sn + " of level " + t.level + ". This chunk will not be buffered."),
                this.removeUnbufferedFrags(),
                this.resetStartWhenNotLoaded(this.levelLastLoaded),
                this.resetLoadingState()
            }
            ,
            r.removeUnbufferedFrags = function(t) {
                void 0 === t && (t = 0),
                this.fragmentTracker.removeFragmentsInRange(t, 1 / 0, this.playlistType, !1, !0)
            }
            ,
            r.updateLevelTiming = function(t, e, r, i) {
                var n, a = this, s = r.details;
                if (s) {
                    if (!Object.keys(t.elementaryStreams).reduce((function(e, n) {
                        var o = t.elementaryStreams[n];
                        if (o) {
                            var l = o.endPTS - o.startPTS;
                            if (l <= 0)
                                return a.warn("Could not parse fragment " + t.sn + " " + n + " duration reliably (" + l + ")"),
                                e || !1;
                            var u = i ? 0 : hr(s, t, o.startPTS, o.endPTS, o.startDTS, o.endDTS);
                            return a.hls.trigger(S.LEVEL_PTS_UPDATED, {
                                details: s,
                                level: r,
                                drift: u,
                                type: n,
                                frag: t,
                                start: o.startPTS,
                                end: o.endPTS
                            }),
                            !0
                        }
                        return e
                    }
                    ), !1) && null === (null == (n = this.transmuxer) ? void 0 : n.error)) {
                        var o = new Error("Found no media in fragment " + t.sn + " of level " + t.level + " resetting transmuxer to fallback to playlist timing");
                        if (0 === r.fragmentError && (r.fragmentError++,
                        t.gap = !0,
                        this.fragmentTracker.removeFragment(t),
                        this.fragmentTracker.fragBuffered(t, !0)),
                        this.warn(o.message),
                        this.hls.trigger(S.ERROR, {
                            type: L.MEDIA_ERROR,
                            details: A.FRAG_PARSING_ERROR,
                            fatal: !1,
                            error: o,
                            frag: t,
                            reason: "Found no media in msn " + t.sn + ' of level "' + r.url + '"'
                        }),
                        !this.hls)
                            return;
                        this.resetTransmuxer()
                    }
                    this.state = ki,
                    this.hls.trigger(S.FRAG_PARSED, {
                        frag: t,
                        part: e
                    })
                } else
                    this.warn("level.details undefined")
            }
            ,
            r.resetTransmuxer = function() {
                this.transmuxer && (this.transmuxer.destroy(),
                this.transmuxer = null)
            }
            ,
            r.recoverWorkerError = function(t) {
                "demuxerWorker" === t.event && (this.fragmentTracker.removeAllFragments(),
                this.resetTransmuxer(),
                this.resetStartWhenNotLoaded(this.levelLastLoaded),
                this.resetLoadingState())
            }
            ,
            s(e, [{
                key: "state",
                get: function() {
                    return this._state
                },
                set: function(t) {
                    var e = this._state;
                    e !== t && (this._state = t,
                    this.log(e + "->" + t))
                }
            }]),
            e
        }(qr)
          , xi = function() {
            function t() {
                this.chunks = [],
                this.dataLength = 0
            }
            var e = t.prototype;
            return e.push = function(t) {
                this.chunks.push(t),
                this.dataLength += t.length
            }
            ,
            e.flush = function() {
                var t, e = this.chunks, r = this.dataLength;
                return e.length ? (t = 1 === e.length ? e[0] : function(t, e) {
                    for (var r = new Uint8Array(e), i = 0, n = 0; n < t.length; n++) {
                        var a = t[n];
                        r.set(a, i),
                        i += a.length
                    }
                    return r
                }(e, r),
                this.reset(),
                t) : new Uint8Array(0)
            }
            ,
            e.reset = function() {
                this.chunks.length = 0,
                this.dataLength = 0
            }
            ,
            t
        }();
        function Pi(t, e) {
            return void 0 === t && (t = ""),
            void 0 === e && (e = 9e4),
            {
                type: t,
                id: -1,
                pid: -1,
                inputTimeScale: e,
                sequenceNumber: -1,
                samples: [],
                dropped: 0
            }
        }
        var Fi = function() {
            function t() {
                this._audioTrack = void 0,
                this._id3Track = void 0,
                this.frameIndex = 0,
                this.cachedData = null,
                this.basePTS = null,
                this.initPTS = null,
                this.lastPTS = null
            }
            var e = t.prototype;
            return e.resetInitSegment = function(t, e, r, i) {
                this._id3Track = {
                    type: "id3",
                    id: 3,
                    pid: -1,
                    inputTimeScale: 9e4,
                    sequenceNumber: 0,
                    samples: [],
                    dropped: 0
                }
            }
            ,
            e.resetTimeStamp = function(t) {
                this.initPTS = t,
                this.resetContiguity()
            }
            ,
            e.resetContiguity = function() {
                this.basePTS = null,
                this.lastPTS = null,
                this.frameIndex = 0
            }
            ,
            e.canParse = function(t, e) {
                return !1
            }
            ,
            e.appendFrame = function(t, e, r) {}
            ,
            e.demux = function(t, e) {
                this.cachedData && (t = Wt(this.cachedData, t),
                this.cachedData = null);
                var r, i = ct(t, 0), n = i ? i.length : 0, a = this._audioTrack, s = this._id3Track, o = i ? vt(i) : void 0, l = t.length;
                for ((null === this.basePTS || 0 === this.frameIndex && y(o)) && (this.basePTS = Mi(o, e, this.initPTS),
                this.lastPTS = this.basePTS),
                null === this.lastPTS && (this.lastPTS = this.basePTS),
                i && i.length > 0 && s.samples.push({
                    pts: this.lastPTS,
                    dts: this.lastPTS,
                    data: i,
                    type: We,
                    duration: Number.POSITIVE_INFINITY
                }); n < l; ) {
                    if (this.canParse(t, n)) {
                        var u = this.appendFrame(a, t, n);
                        u ? (this.frameIndex++,
                        this.lastPTS = u.sample.pts,
                        r = n += u.length) : n = l
                    } else
                        gt(t, n) ? (i = ct(t, n),
                        s.samples.push({
                            pts: this.lastPTS,
                            dts: this.lastPTS,
                            data: i,
                            type: We,
                            duration: Number.POSITIVE_INFINITY
                        }),
                        r = n += i.length) : n++;
                    if (n === l && r !== l) {
                        var h = lt(t, r);
                        this.cachedData ? this.cachedData = Wt(this.cachedData, h) : this.cachedData = h
                    }
                }
                return {
                    audioTrack: a,
                    videoTrack: Pi(),
                    id3Track: s,
                    textTrack: Pi()
                }
            }
            ,
            e.demuxSampleAes = function(t, e, r) {
                return Promise.reject(new Error("[" + this + "] This demuxer does not support Sample-AES decryption"))
            }
            ,
            e.flush = function(t) {
                var e = this.cachedData;
                return e && (this.cachedData = null,
                this.demux(e, 0)),
                {
                    audioTrack: this._audioTrack,
                    videoTrack: Pi(),
                    id3Track: this._id3Track,
                    textTrack: Pi()
                }
            }
            ,
            e.destroy = function() {}
            ,
            t
        }()
          , Mi = function(t, e, r) {
            return y(t) ? 90 * t : 9e4 * e + (r ? 9e4 * r.baseTime / r.timescale : 0)
        };
        function Oi(t, e) {
            return 255 === t[e] && 240 == (246 & t[e + 1])
        }
        function Ni(t, e) {
            return 1 & t[e + 1] ? 7 : 9
        }
        function Ui(t, e) {
            return (3 & t[e + 3]) << 11 | t[e + 4] << 3 | (224 & t[e + 5]) >>> 5
        }
        function Bi(t, e) {
            return e + 1 < t.length && Oi(t, e)
        }
        function Gi(t, e) {
            if (Bi(t, e)) {
                var r = Ni(t, e);
                if (e + r >= t.length)
                    return !1;
                var i = Ui(t, e);
                if (i <= r)
                    return !1;
                var n = e + i;
                return n === t.length || Bi(t, n)
            }
            return !1
        }
        function Ki(t, e, r, i, n) {
            if (!t.samplerate) {
                var a = function(t, e, r, i) {
                    var n, a, s, o, l = navigator.userAgent.toLowerCase(), u = i, h = [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350];
                    n = 1 + ((192 & e[r + 2]) >>> 6);
                    var d = (60 & e[r + 2]) >>> 2;
                    if (!(d > h.length - 1))
                        return s = (1 & e[r + 2]) << 2,
                        s |= (192 & e[r + 3]) >>> 6,
                        w.log("manifest codec:" + i + ", ADTS type:" + n + ", samplingIndex:" + d),
                        /firefox/i.test(l) ? d >= 6 ? (n = 5,
                        o = new Array(4),
                        a = d - 3) : (n = 2,
                        o = new Array(2),
                        a = d) : -1 !== l.indexOf("android") ? (n = 2,
                        o = new Array(2),
                        a = d) : (n = 5,
                        o = new Array(4),
                        i && (-1 !== i.indexOf("mp4a.40.29") || -1 !== i.indexOf("mp4a.40.5")) || !i && d >= 6 ? a = d - 3 : ((i && -1 !== i.indexOf("mp4a.40.2") && (d >= 6 && 1 === s || /vivaldi/i.test(l)) || !i && 1 === s) && (n = 2,
                        o = new Array(2)),
                        a = d)),
                        o[0] = n << 3,
                        o[0] |= (14 & d) >> 1,
                        o[1] |= (1 & d) << 7,
                        o[1] |= s << 3,
                        5 === n && (o[1] |= (14 & a) >> 1,
                        o[2] = (1 & a) << 7,
                        o[2] |= 8,
                        o[3] = 0),
                        {
                            config: o,
                            samplerate: h[d],
                            channelCount: s,
                            codec: "mp4a.40." + n,
                            manifestCodec: u
                        };
                    var c = new Error("invalid ADTS sampling index:" + d);
                    t.emit(S.ERROR, S.ERROR, {
                        type: L.MEDIA_ERROR,
                        details: A.FRAG_PARSING_ERROR,
                        fatal: !0,
                        error: c,
                        reason: c.message
                    })
                }(e, r, i, n);
                if (!a)
                    return;
                t.config = a.config,
                t.samplerate = a.samplerate,
                t.channelCount = a.channelCount,
                t.codec = a.codec,
                t.manifestCodec = a.manifestCodec,
                w.log("parsed codec:" + t.codec + ", rate:" + a.samplerate + ", channels:" + a.channelCount)
            }
        }
        function Hi(t) {
            return 9216e4 / t
        }
        function Vi(t, e, r, i, n) {
            var a, s = i + n * Hi(t.samplerate), o = function(t, e) {
                var r = Ni(t, e);
                if (e + r <= t.length) {
                    var i = Ui(t, e) - r;
                    if (i > 0)
                        return {
                            headerLength: r,
                            frameLength: i
                        }
                }
            }(e, r);
            if (o) {
                var l = o.frameLength
                  , u = o.headerLength
                  , h = u + l
                  , d = Math.max(0, r + h - e.length);
                d ? (a = new Uint8Array(h - u)).set(e.subarray(r + u, e.length), 0) : a = e.subarray(r + u, r + h);
                var c = {
                    unit: a,
                    pts: s
                };
                return d || t.samples.push(c),
                {
                    sample: c,
                    length: h,
                    missing: d
                }
            }
            var f = e.length - r;
            return (a = new Uint8Array(f)).set(e.subarray(r, e.length), 0),
            {
                sample: {
                    unit: a,
                    pts: s
                },
                length: f,
                missing: -1
            }
        }
        var Yi = null
          , Wi = [32, 64, 96, 128, 160, 192, 224, 256, 288, 320, 352, 384, 416, 448, 32, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 384, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 32, 48, 56, 64, 80, 96, 112, 128, 144, 160, 176, 192, 224, 256, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160]
          , ji = [44100, 48e3, 32e3, 22050, 24e3, 16e3, 11025, 12e3, 8e3]
          , qi = [[0, 72, 144, 12], [0, 0, 0, 0], [0, 72, 144, 12], [0, 144, 144, 12]]
          , Xi = [0, 1, 1, 4];
        function zi(t, e, r, i, n) {
            if (!(r + 24 > e.length)) {
                var a = Qi(e, r);
                if (a && r + a.frameLength <= e.length) {
                    var s = i + n * (9e4 * a.samplesPerFrame / a.sampleRate)
                      , o = {
                        unit: e.subarray(r, r + a.frameLength),
                        pts: s,
                        dts: s
                    };
                    return t.config = [],
                    t.channelCount = a.channelCount,
                    t.samplerate = a.sampleRate,
                    t.samples.push(o),
                    {
                        sample: o,
                        length: a.frameLength,
                        missing: 0
                    }
                }
            }
        }
        function Qi(t, e) {
            var r = t[e + 1] >> 3 & 3
              , i = t[e + 1] >> 1 & 3
              , n = t[e + 2] >> 4 & 15
              , a = t[e + 2] >> 2 & 3;
            if (1 !== r && 0 !== n && 15 !== n && 3 !== a) {
                var s = t[e + 2] >> 1 & 1
                  , o = t[e + 3] >> 6
                  , l = 1e3 * Wi[14 * (3 === r ? 3 - i : 3 === i ? 3 : 4) + n - 1]
                  , u = ji[3 * (3 === r ? 0 : 2 === r ? 1 : 2) + a]
                  , h = 3 === o ? 1 : 2
                  , d = qi[r][i]
                  , c = Xi[i]
                  , f = 8 * d * c
                  , g = Math.floor(d * l / u + s) * c;
                if (null === Yi) {
                    var v = (navigator.userAgent || "").match(/Chrome\/(\d+)/i);
                    Yi = v ? parseInt(v[1]) : 0
                }
                return !!Yi && Yi <= 87 && 2 === i && l >= 224e3 && 0 === o && (t[e + 3] = 128 | t[e + 3]),
                {
                    sampleRate: u,
                    channelCount: h,
                    frameLength: g,
                    samplesPerFrame: f
                }
            }
        }
        function Ji(t, e) {
            return 255 === t[e] && 224 == (224 & t[e + 1]) && 0 != (6 & t[e + 1])
        }
        function $i(t, e) {
            return e + 1 < t.length && Ji(t, e)
        }
        function Zi(t, e) {
            if (e + 1 < t.length && Ji(t, e)) {
                var r = Qi(t, e)
                  , i = 4;
                null != r && r.frameLength && (i = r.frameLength);
                var n = e + i;
                return n === t.length || $i(t, n)
            }
            return !1
        }
        var tn = function(t) {
            function e(e, r) {
                var i;
                return (i = t.call(this) || this).observer = void 0,
                i.config = void 0,
                i.observer = e,
                i.config = r,
                i
            }
            l(e, t);
            var r = e.prototype;
            return r.resetInitSegment = function(e, r, i, n) {
                t.prototype.resetInitSegment.call(this, e, r, i, n),
                this._audioTrack = {
                    container: "audio/adts",
                    type: "audio",
                    id: 2,
                    pid: -1,
                    sequenceNumber: 0,
                    segmentCodec: "aac",
                    samples: [],
                    manifestCodec: r,
                    duration: n,
                    inputTimeScale: 9e4,
                    dropped: 0
                }
            }
            ,
            e.probe = function(t) {
                if (!t)
                    return !1;
                var e = ct(t, 0)
                  , r = (null == e ? void 0 : e.length) || 0;
                if (Zi(t, r))
                    return !1;
                for (var i = t.length; r < i; r++)
                    if (Gi(t, r))
                        return w.log("ADTS sync word found !"),
                        !0;
                return !1
            }
            ,
            r.canParse = function(t, e) {
                return function(t, e) {
                    return function(t, e) {
                        return e + 5 < t.length
                    }(t, e) && Oi(t, e) && Ui(t, e) <= t.length - e
                }(t, e)
            }
            ,
            r.appendFrame = function(t, e, r) {
                Ki(t, this.observer, e, r, t.manifestCodec);
                var i = Vi(t, e, r, this.basePTS, this.frameIndex);
                if (i && 0 === i.missing)
                    return i
            }
            ,
            e
        }(Fi)
          , en = /\/emsg[-/]ID3/i
          , rn = function() {
            function t(t, e) {
                this.remainderData = null,
                this.timeOffset = 0,
                this.config = void 0,
                this.videoTrack = void 0,
                this.audioTrack = void 0,
                this.id3Track = void 0,
                this.txtTrack = void 0,
                this.config = e
            }
            var e = t.prototype;
            return e.resetTimeStamp = function() {}
            ,
            e.resetInitSegment = function(t, e, r, i) {
                var n = this.videoTrack = Pi("video", 1)
                  , a = this.audioTrack = Pi("audio", 1)
                  , s = this.txtTrack = Pi("text", 1);
                if (this.id3Track = Pi("id3", 1),
                this.timeOffset = 0,
                null != t && t.byteLength) {
                    var o = Ut(t);
                    if (o.video) {
                        var l = o.video
                          , u = l.id
                          , h = l.timescale
                          , d = l.codec;
                        n.id = u,
                        n.timescale = s.timescale = h,
                        n.codec = d
                    }
                    if (o.audio) {
                        var c = o.audio
                          , f = c.id
                          , g = c.timescale
                          , v = c.codec;
                        a.id = f,
                        a.timescale = g,
                        a.codec = v
                    }
                    s.id = wt.text,
                    n.sampleDuration = 0,
                    n.duration = a.duration = i
                }
            }
            ,
            e.resetContiguity = function() {
                this.remainderData = null
            }
            ,
            t.probe = function(t) {
                return function(t) {
                    for (var e = t.byteLength, r = 0; r < e; ) {
                        var i = xt(t, r);
                        if (i > 8 && 109 === t[r + 4] && 111 === t[r + 5] && 111 === t[r + 6] && 102 === t[r + 7])
                            return !0;
                        r = i > 1 ? r + i : e
                    }
                    return !1
                }(t)
            }
            ,
            e.demux = function(t, e) {
                this.timeOffset = e;
                var r = t
                  , i = this.videoTrack
                  , n = this.txtTrack;
                if (this.config.progressive) {
                    this.remainderData && (r = Wt(this.remainderData, t));
                    var a = function(t) {
                        var e = {
                            valid: null,
                            remainder: null
                        }
                          , r = Ot(t, ["moof"]);
                        if (r.length < 2)
                            return e.remainder = t,
                            e;
                        var i = r[r.length - 1];
                        return e.valid = lt(t, 0, i.byteOffset - 8),
                        e.remainder = lt(t, i.byteOffset - 8),
                        e
                    }(r);
                    this.remainderData = a.remainder,
                    i.samples = a.valid || new Uint8Array
                } else
                    i.samples = r;
                var s = this.extractID3Track(i, e);
                return n.samples = jt(e, i),
                {
                    videoTrack: i,
                    audioTrack: this.audioTrack,
                    id3Track: s,
                    textTrack: this.txtTrack
                }
            }
            ,
            e.flush = function() {
                var t = this.timeOffset
                  , e = this.videoTrack
                  , r = this.txtTrack;
                e.samples = this.remainderData || new Uint8Array,
                this.remainderData = null;
                var i = this.extractID3Track(e, this.timeOffset);
                return r.samples = jt(t, e),
                {
                    videoTrack: e,
                    audioTrack: Pi(),
                    id3Track: i,
                    textTrack: Pi()
                }
            }
            ,
            e.extractID3Track = function(t, e) {
                var r = this.id3Track;
                if (t.samples.length) {
                    var i = Ot(t.samples, ["emsg"]);
                    i && i.forEach((function(t) {
                        var i = function(t) {
                            var e = t[0]
                              , r = ""
                              , i = ""
                              , n = 0
                              , a = 0
                              , s = 0
                              , o = 0
                              , l = 0
                              , u = 0;
                            if (0 === e) {
                                for (; "\0" !== Ct(t.subarray(u, u + 1)); )
                                    r += Ct(t.subarray(u, u + 1)),
                                    u += 1;
                                for (r += Ct(t.subarray(u, u + 1)),
                                u += 1; "\0" !== Ct(t.subarray(u, u + 1)); )
                                    i += Ct(t.subarray(u, u + 1)),
                                    u += 1;
                                i += Ct(t.subarray(u, u + 1)),
                                u += 1,
                                n = xt(t, 12),
                                a = xt(t, 16),
                                o = xt(t, 20),
                                l = xt(t, 24),
                                u = 28
                            } else if (1 === e) {
                                n = xt(t, u += 4);
                                var h = xt(t, u += 4)
                                  , d = xt(t, u += 4);
                                for (u += 4,
                                s = Math.pow(2, 32) * h + d,
                                E(s) || (s = Number.MAX_SAFE_INTEGER,
                                w.warn("Presentation time exceeds safe integer limit and wrapped to max safe integer in parsing emsg box")),
                                o = xt(t, u),
                                l = xt(t, u += 4),
                                u += 4; "\0" !== Ct(t.subarray(u, u + 1)); )
                                    r += Ct(t.subarray(u, u + 1)),
                                    u += 1;
                                for (r += Ct(t.subarray(u, u + 1)),
                                u += 1; "\0" !== Ct(t.subarray(u, u + 1)); )
                                    i += Ct(t.subarray(u, u + 1)),
                                    u += 1;
                                i += Ct(t.subarray(u, u + 1)),
                                u += 1
                            }
                            return {
                                schemeIdUri: r,
                                value: i,
                                timeScale: n,
                                presentationTime: s,
                                presentationTimeDelta: a,
                                eventDuration: o,
                                id: l,
                                payload: t.subarray(u, t.byteLength)
                            }
                        }(t);
                        if (en.test(i.schemeIdUri)) {
                            var n = y(i.presentationTime) ? i.presentationTime / i.timeScale : e + i.presentationTimeDelta / i.timeScale
                              , a = 4294967295 === i.eventDuration ? Number.POSITIVE_INFINITY : i.eventDuration / i.timeScale;
                            a <= .001 && (a = Number.POSITIVE_INFINITY);
                            var s = i.payload;
                            r.samples.push({
                                data: s,
                                len: s.byteLength,
                                dts: n,
                                pts: n,
                                type: qe,
                                duration: a
                            })
                        }
                    }
                    ))
                }
                return r
            }
            ,
            e.demuxSampleAes = function(t, e, r) {
                return Promise.reject(new Error("The MP4 demuxer does not support SAMPLE-AES decryption"))
            }
            ,
            e.destroy = function() {}
            ,
            t
        }()
          , nn = function(t, e) {
            var r = 0
              , i = 5;
            e += i;
            for (var n = new Uint32Array(1), a = new Uint32Array(1), s = new Uint8Array(1); i > 0; ) {
                s[0] = t[e];
                var o = Math.min(i, 8)
                  , l = 8 - o;
                a[0] = 4278190080 >>> 24 + l << l,
                n[0] = (s[0] & a[0]) >> l,
                r = r ? r << o | n[0] : n[0],
                e += 1,
                i -= o
            }
            return r
        }
          , an = function(t) {
            function e(e) {
                var r;
                return (r = t.call(this) || this).observer = void 0,
                r.observer = e,
                r
            }
            l(e, t);
            var r = e.prototype;
            return r.resetInitSegment = function(e, r, i, n) {
                t.prototype.resetInitSegment.call(this, e, r, i, n),
                this._audioTrack = {
                    container: "audio/ac-3",
                    type: "audio",
                    id: 2,
                    pid: -1,
                    sequenceNumber: 0,
                    segmentCodec: "ac3",
                    samples: [],
                    manifestCodec: r,
                    duration: n,
                    inputTimeScale: 9e4,
                    dropped: 0
                }
            }
            ,
            r.canParse = function(t, e) {
                return e + 64 < t.length
            }
            ,
            r.appendFrame = function(t, e, r) {
                var i = sn(t, e, r, this.basePTS, this.frameIndex);
                if (-1 !== i)
                    return {
                        sample: t.samples[t.samples.length - 1],
                        length: i,
                        missing: 0
                    }
            }
            ,
            e.probe = function(t) {
                if (!t)
                    return !1;
                var e = ct(t, 0);
                if (!e)
                    return !1;
                var r = e.length;
                return 11 === t[r] && 119 === t[r + 1] && void 0 !== vt(e) && nn(t, r) < 16
            }
            ,
            e
        }(Fi);
        function sn(t, e, r, i, n) {
            if (r + 8 > e.length)
                return -1;
            if (11 !== e[r] || 119 !== e[r + 1])
                return -1;
            var a = e[r + 4] >> 6;
            if (a >= 3)
                return -1;
            var s = [48e3, 44100, 32e3][a]
              , o = 63 & e[r + 4]
              , l = 2 * [64, 69, 96, 64, 70, 96, 80, 87, 120, 80, 88, 120, 96, 104, 144, 96, 105, 144, 112, 121, 168, 112, 122, 168, 128, 139, 192, 128, 140, 192, 160, 174, 240, 160, 175, 240, 192, 208, 288, 192, 209, 288, 224, 243, 336, 224, 244, 336, 256, 278, 384, 256, 279, 384, 320, 348, 480, 320, 349, 480, 384, 417, 576, 384, 418, 576, 448, 487, 672, 448, 488, 672, 512, 557, 768, 512, 558, 768, 640, 696, 960, 640, 697, 960, 768, 835, 1152, 768, 836, 1152, 896, 975, 1344, 896, 976, 1344, 1024, 1114, 1536, 1024, 1115, 1536, 1152, 1253, 1728, 1152, 1254, 1728, 1280, 1393, 1920, 1280, 1394, 1920][3 * o + a];
            if (r + l > e.length)
                return -1;
            var u = e[r + 6] >> 5
              , h = 0;
            2 === u ? h += 2 : (1 & u && 1 !== u && (h += 2),
            4 & u && (h += 2));
            var d = (e[r + 6] << 8 | e[r + 7]) >> 12 - h & 1
              , c = [2, 1, 2, 3, 3, 4, 4, 5][u] + d
              , f = e[r + 5] >> 3
              , g = 7 & e[r + 5]
              , v = new Uint8Array([a << 6 | f << 1 | g >> 2, (3 & g) << 6 | u << 3 | d << 2 | o >> 4, o << 4 & 224])
              , m = i + n * (1536 / s * 9e4)
              , p = e.subarray(r, r + l);
            return t.config = v,
            t.channelCount = c,
            t.samplerate = s,
            t.samples.push({
                unit: p,
                pts: m
            }),
            l
        }
        var on = function() {
            function t() {
                this.VideoSample = null
            }
            var e = t.prototype;
            return e.createVideoSample = function(t, e, r, i) {
                return {
                    key: t,
                    frame: !1,
                    pts: e,
                    dts: r,
                    units: [],
                    debug: i,
                    length: 0
                }
            }
            ,
            e.getLastNalUnit = function(t) {
                var e, r, i = this.VideoSample;
                if (i && 0 !== i.units.length || (i = t[t.length - 1]),
                null != (e = i) && e.units) {
                    var n = i.units;
                    r = n[n.length - 1]
                }
                return r
            }
            ,
            e.pushAccessUnit = function(t, e) {
                if (t.units.length && t.frame) {
                    if (void 0 === t.pts) {
                        var r = e.samples
                          , i = r.length;
                        if (!i)
                            return void e.dropped++;
                        var n = r[i - 1];
                        t.pts = n.pts,
                        t.dts = n.dts
                    }
                    e.samples.push(t)
                }
                t.debug.length && w.log(t.pts + "/" + t.dts + ":" + t.debug)
            }
            ,
            t
        }()
          , ln = function() {
            function t(t) {
                this.data = void 0,
                this.bytesAvailable = void 0,
                this.word = void 0,
                this.bitsAvailable = void 0,
                this.data = t,
                this.bytesAvailable = t.byteLength,
                this.word = 0,
                this.bitsAvailable = 0
            }
            var e = t.prototype;
            return e.loadWord = function() {
                var t = this.data
                  , e = this.bytesAvailable
                  , r = t.byteLength - e
                  , i = new Uint8Array(4)
                  , n = Math.min(4, e);
                if (0 === n)
                    throw new Error("no bytes available");
                i.set(t.subarray(r, r + n)),
                this.word = new DataView(i.buffer).getUint32(0),
                this.bitsAvailable = 8 * n,
                this.bytesAvailable -= n
            }
            ,
            e.skipBits = function(t) {
                var e;
                t = Math.min(t, 8 * this.bytesAvailable + this.bitsAvailable),
                this.bitsAvailable > t ? (this.word <<= t,
                this.bitsAvailable -= t) : (t -= this.bitsAvailable,
                t -= (e = t >> 3) << 3,
                this.bytesAvailable -= e,
                this.loadWord(),
                this.word <<= t,
                this.bitsAvailable -= t)
            }
            ,
            e.readBits = function(t) {
                var e = Math.min(this.bitsAvailable, t)
                  , r = this.word >>> 32 - e;
                if (t > 32 && w.error("Cannot read more than 32 bits at a time"),
                this.bitsAvailable -= e,
                this.bitsAvailable > 0)
                    this.word <<= e;
                else {
                    if (!(this.bytesAvailable > 0))
                        throw new Error("no bits available");
                    this.loadWord()
                }
                return (e = t - e) > 0 && this.bitsAvailable ? r << e | this.readBits(e) : r
            }
            ,
            e.skipLZ = function() {
                var t;
                for (t = 0; t < this.bitsAvailable; ++t)
                    if (0 != (this.word & 2147483648 >>> t))
                        return this.word <<= t,
                        this.bitsAvailable -= t,
                        t;
                return this.loadWord(),
                t + this.skipLZ()
            }
            ,
            e.skipUEG = function() {
                this.skipBits(1 + this.skipLZ())
            }
            ,
            e.skipEG = function() {
                this.skipBits(1 + this.skipLZ())
            }
            ,
            e.readUEG = function() {
                var t = this.skipLZ();
                return this.readBits(t + 1) - 1
            }
            ,
            e.readEG = function() {
                var t = this.readUEG();
                return 1 & t ? 1 + t >>> 1 : -1 * (t >>> 1)
            }
            ,
            e.readBoolean = function() {
                return 1 === this.readBits(1)
            }
            ,
            e.readUByte = function() {
                return this.readBits(8)
            }
            ,
            e.readUShort = function() {
                return this.readBits(16)
            }
            ,
            e.readUInt = function() {
                return this.readBits(32)
            }
            ,
            e.skipScalingList = function(t) {
                for (var e = 8, r = 8, i = 0; i < t; i++)
                    0 !== r && (r = (e + this.readEG() + 256) % 256),
                    e = 0 === r ? e : r
            }
            ,
            e.readSPS = function() {
                var t, e, r, i = 0, n = 0, a = 0, s = 0, o = this.readUByte.bind(this), l = this.readBits.bind(this), u = this.readUEG.bind(this), h = this.readBoolean.bind(this), d = this.skipBits.bind(this), c = this.skipEG.bind(this), f = this.skipUEG.bind(this), g = this.skipScalingList.bind(this);
                o();
                var v = o();
                if (l(5),
                d(3),
                o(),
                f(),
                100 === v || 110 === v || 122 === v || 244 === v || 44 === v || 83 === v || 86 === v || 118 === v || 128 === v) {
                    var m = u();
                    if (3 === m && d(1),
                    f(),
                    f(),
                    d(1),
                    h())
                        for (e = 3 !== m ? 8 : 12,
                        r = 0; r < e; r++)
                            h() && g(r < 6 ? 16 : 64)
                }
                f();
                var p = u();
                if (0 === p)
                    u();
                else if (1 === p)
                    for (d(1),
                    c(),
                    c(),
                    t = u(),
                    r = 0; r < t; r++)
                        c();
                f(),
                d(1);
                var y = u()
                  , E = u()
                  , T = l(1);
                0 === T && d(1),
                d(1),
                h() && (i = u(),
                n = u(),
                a = u(),
                s = u());
                var S = [1, 1];
                if (h() && h())
                    switch (o()) {
                    case 1:
                        S = [1, 1];
                        break;
                    case 2:
                        S = [12, 11];
                        break;
                    case 3:
                        S = [10, 11];
                        break;
                    case 4:
                        S = [16, 11];
                        break;
                    case 5:
                        S = [40, 33];
                        break;
                    case 6:
                        S = [24, 11];
                        break;
                    case 7:
                        S = [20, 11];
                        break;
                    case 8:
                        S = [32, 11];
                        break;
                    case 9:
                        S = [80, 33];
                        break;
                    case 10:
                        S = [18, 11];
                        break;
                    case 11:
                        S = [15, 11];
                        break;
                    case 12:
                        S = [64, 33];
                        break;
                    case 13:
                        S = [160, 99];
                        break;
                    case 14:
                        S = [4, 3];
                        break;
                    case 15:
                        S = [3, 2];
                        break;
                    case 16:
                        S = [2, 1];
                        break;
                    case 255:
                        S = [o() << 8 | o(), o() << 8 | o()]
                    }
                return {
                    width: Math.ceil(16 * (y + 1) - 2 * i - 2 * n),
                    height: (2 - T) * (E + 1) * 16 - (T ? 2 : 4) * (a + s),
                    pixelRatio: S
                }
            }
            ,
            e.readSliceType = function() {
                return this.readUByte(),
                this.readUEG(),
                this.readUEG()
            }
            ,
            t
        }()
          , un = function(t) {
            function e() {
                return t.apply(this, arguments) || this
            }
            l(e, t);
            var r = e.prototype;
            return r.parseAVCPES = function(t, e, r, i, n) {
                var a, s = this, o = this.parseAVCNALu(t, r.data), l = this.VideoSample, u = !1;
                r.data = null,
                l && o.length && !t.audFound && (this.pushAccessUnit(l, t),
                l = this.VideoSample = this.createVideoSample(!1, r.pts, r.dts, "")),
                o.forEach((function(i) {
                    var o;
                    switch (i.type) {
                    case 1:
                        var h = !1;
                        a = !0;
                        var d, c = i.data;
                        if (u && c.length > 4) {
                            var f = new ln(c).readSliceType();
                            2 !== f && 4 !== f && 7 !== f && 9 !== f || (h = !0)
                        }
                        h && null != (d = l) && d.frame && !l.key && (s.pushAccessUnit(l, t),
                        l = s.VideoSample = null),
                        l || (l = s.VideoSample = s.createVideoSample(!0, r.pts, r.dts, "")),
                        l.frame = !0,
                        l.key = h;
                        break;
                    case 5:
                        a = !0,
                        null != (o = l) && o.frame && !l.key && (s.pushAccessUnit(l, t),
                        l = s.VideoSample = null),
                        l || (l = s.VideoSample = s.createVideoSample(!0, r.pts, r.dts, "")),
                        l.key = !0,
                        l.frame = !0;
                        break;
                    case 6:
                        a = !0,
                        Xt(i.data, 1, r.pts, e.samples);
                        break;
                    case 7:
                        var g, v;
                        a = !0,
                        u = !0;
                        var m = i.data
                          , p = new ln(m).readSPS();
                        if (!t.sps || t.width !== p.width || t.height !== p.height || (null == (g = t.pixelRatio) ? void 0 : g[0]) !== p.pixelRatio[0] || (null == (v = t.pixelRatio) ? void 0 : v[1]) !== p.pixelRatio[1]) {
                            t.width = p.width,
                            t.height = p.height,
                            t.pixelRatio = p.pixelRatio,
                            t.sps = [m],
                            t.duration = n;
                            for (var y = m.subarray(1, 4), E = "avc1.", T = 0; T < 3; T++) {
                                var S = y[T].toString(16);
                                S.length < 2 && (S = "0" + S),
                                E += S
                            }
                            t.codec = E
                        }
                        break;
                    case 8:
                        a = !0,
                        t.pps = [i.data];
                        break;
                    case 9:
                        a = !0,
                        t.audFound = !0,
                        l && s.pushAccessUnit(l, t),
                        l = s.VideoSample = s.createVideoSample(!1, r.pts, r.dts, "");
                        break;
                    case 12:
                        a = !0;
                        break;
                    default:
                        a = !1,
                        l && (l.debug += "unknown NAL " + i.type + " ")
                    }
                    l && a && l.units.push(i)
                }
                )),
                i && l && (this.pushAccessUnit(l, t),
                this.VideoSample = null)
            }
            ,
            r.parseAVCNALu = function(t, e) {
                var r, i, n = e.byteLength, a = t.naluState || 0, s = a, o = [], l = 0, u = -1, h = 0;
                for (-1 === a && (u = 0,
                h = 31 & e[0],
                a = 0,
                l = 1); l < n; )
                    if (r = e[l++],
                    a)
                        if (1 !== a)
                            if (r)
                                if (1 === r) {
                                    if (i = l - a - 1,
                                    u >= 0) {
                                        var d = {
                                            data: e.subarray(u, i),
                                            type: h
                                        };
                                        o.push(d)
                                    } else {
                                        var c = this.getLastNalUnit(t.samples);
                                        c && (s && l <= 4 - s && c.state && (c.data = c.data.subarray(0, c.data.byteLength - s)),
                                        i > 0 && (c.data = Wt(c.data, e.subarray(0, i)),
                                        c.state = 0))
                                    }
                                    l < n ? (u = l,
                                    h = 31 & e[l],
                                    a = 0) : a = -1
                                } else
                                    a = 0;
                            else
                                a = 3;
                        else
                            a = r ? 0 : 2;
                    else
                        a = r ? 0 : 1;
                if (u >= 0 && a >= 0) {
                    var f = {
                        data: e.subarray(u, n),
                        type: h,
                        state: a
                    };
                    o.push(f)
                }
                if (0 === o.length) {
                    var g = this.getLastNalUnit(t.samples);
                    g && (g.data = Wt(g.data, e))
                }
                return t.naluState = a,
                o
            }
            ,
            e
        }(on)
          , hn = function() {
            function t(t, e, r) {
                this.keyData = void 0,
                this.decrypter = void 0,
                this.keyData = r,
                this.decrypter = new pi(e,{
                    removePKCS7Padding: !1
                })
            }
            var e = t.prototype;
            return e.decryptBuffer = function(t) {
                return this.decrypter.decrypt(t, this.keyData.key.buffer, this.keyData.iv.buffer)
            }
            ,
            e.decryptAacSample = function(t, e, r) {
                var i = this
                  , n = t[e].unit;
                if (!(n.length <= 16)) {
                    var a = n.subarray(16, n.length - n.length % 16)
                      , s = a.buffer.slice(a.byteOffset, a.byteOffset + a.length);
                    this.decryptBuffer(s).then((function(a) {
                        var s = new Uint8Array(a);
                        n.set(s, 16),
                        i.decrypter.isSync() || i.decryptAacSamples(t, e + 1, r)
                    }
                    ))
                }
            }
            ,
            e.decryptAacSamples = function(t, e, r) {
                for (; ; e++) {
                    if (e >= t.length)
                        return void r();
                    if (!(t[e].unit.length < 32 || (this.decryptAacSample(t, e, r),
                    this.decrypter.isSync())))
                        return
                }
            }
            ,
            e.getAvcEncryptedData = function(t) {
                for (var e = 16 * Math.floor((t.length - 48) / 160) + 16, r = new Int8Array(e), i = 0, n = 32; n < t.length - 16; n += 160,
                i += 16)
                    r.set(t.subarray(n, n + 16), i);
                return r
            }
            ,
            e.getAvcDecryptedUnit = function(t, e) {
                for (var r = new Uint8Array(e), i = 0, n = 32; n < t.length - 16; n += 160,
                i += 16)
                    t.set(r.subarray(i, i + 16), n);
                return t
            }
            ,
            e.decryptAvcSample = function(t, e, r, i, n) {
                var a = this
                  , s = zt(n.data)
                  , o = this.getAvcEncryptedData(s);
                this.decryptBuffer(o.buffer).then((function(o) {
                    n.data = a.getAvcDecryptedUnit(s, o),
                    a.decrypter.isSync() || a.decryptAvcSamples(t, e, r + 1, i)
                }
                ))
            }
            ,
            e.decryptAvcSamples = function(t, e, r, i) {
                if (t instanceof Uint8Array)
                    throw new Error("Cannot decrypt samples of type Uint8Array");
                for (; ; e++,
                r = 0) {
                    if (e >= t.length)
                        return void i();
                    for (var n = t[e].units; !(r >= n.length); r++) {
                        var a = n[r];
                        if (!(a.data.length <= 48 || 1 !== a.type && 5 !== a.type || (this.decryptAvcSample(t, e, r, i, a),
                        this.decrypter.isSync())))
                            return
                    }
                }
            }
            ,
            t
        }()
          , dn = 188
          , cn = function() {
            function t(t, e, r) {
                this.observer = void 0,
                this.config = void 0,
                this.typeSupported = void 0,
                this.sampleAes = null,
                this.pmtParsed = !1,
                this.audioCodec = void 0,
                this.videoCodec = void 0,
                this._duration = 0,
                this._pmtId = -1,
                this._videoTrack = void 0,
                this._audioTrack = void 0,
                this._id3Track = void 0,
                this._txtTrack = void 0,
                this.aacOverFlow = null,
                this.remainderData = null,
                this.videoParser = void 0,
                this.observer = t,
                this.config = e,
                this.typeSupported = r,
                this.videoParser = new un
            }
            t.probe = function(e) {
                var r = t.syncOffset(e);
                return r > 0 && w.warn("MPEG2-TS detected but first sync word found @ offset " + r),
                -1 !== r
            }
            ,
            t.syncOffset = function(t) {
                for (var e = t.length, r = Math.min(940, e - dn) + 1, i = 0; i < r; ) {
                    for (var n = !1, a = -1, s = 0, o = i; o < e; o += dn) {
                        if (71 !== t[o] || e - o !== dn && 71 !== t[o + dn]) {
                            if (s)
                                return -1;
                            break
                        }
                        if (s++,
                        -1 === a && 0 !== (a = o) && (r = Math.min(a + 18612, t.length - dn) + 1),
                        n || (n = 0 === fn(t, o)),
                        n && s > 1 && (0 === a && s > 2 || o + dn > r))
                            return a
                    }
                    i++
                }
                return -1
            }
            ,
            t.createTrack = function(t, e) {
                return {
                    container: "video" === t || "audio" === t ? "video/mp2t" : void 0,
                    type: t,
                    id: wt[t],
                    pid: -1,
                    inputTimeScale: 9e4,
                    sequenceNumber: 0,
                    samples: [],
                    dropped: 0,
                    duration: "audio" === t ? e : void 0
                }
            }
            ;
            var e = t.prototype;
            return e.resetInitSegment = function(e, r, i, n) {
                this.pmtParsed = !1,
                this._pmtId = -1,
                this._videoTrack = t.createTrack("video"),
                this._audioTrack = t.createTrack("audio", n),
                this._id3Track = t.createTrack("id3"),
                this._txtTrack = t.createTrack("text"),
                this._audioTrack.segmentCodec = "aac",
                this.aacOverFlow = null,
                this.remainderData = null,
                this.audioCodec = r,
                this.videoCodec = i,
                this._duration = n
            }
            ,
            e.resetTimeStamp = function() {}
            ,
            e.resetContiguity = function() {
                var t = this._audioTrack
                  , e = this._videoTrack
                  , r = this._id3Track;
                t && (t.pesData = null),
                e && (e.pesData = null),
                r && (r.pesData = null),
                this.aacOverFlow = null,
                this.remainderData = null
            }
            ,
            e.demux = function(e, r, i, n) {
                var a;
                void 0 === i && (i = !1),
                void 0 === n && (n = !1),
                i || (this.sampleAes = null);
                var s = this._videoTrack
                  , o = this._audioTrack
                  , l = this._id3Track
                  , u = this._txtTrack
                  , h = s.pid
                  , d = s.pesData
                  , c = o.pid
                  , f = l.pid
                  , g = o.pesData
                  , v = l.pesData
                  , m = null
                  , p = this.pmtParsed
                  , y = this._pmtId
                  , E = e.length;
                if (this.remainderData && (E = (e = Wt(this.remainderData, e)).length,
                this.remainderData = null),
                E < dn && !n)
                    return this.remainderData = e,
                    {
                        audioTrack: o,
                        videoTrack: s,
                        id3Track: l,
                        textTrack: u
                    };
                var T = Math.max(0, t.syncOffset(e));
                (E -= (E - T) % dn) < e.byteLength && !n && (this.remainderData = new Uint8Array(e.buffer,E,e.buffer.byteLength - E));
                for (var S = 0, L = T; L < E; L += dn)
                    if (71 === e[L]) {
                        var A = !!(64 & e[L + 1])
                          , R = fn(e, L)
                          , b = void 0;
                        if ((48 & e[L + 3]) >> 4 > 1) {
                            if ((b = L + 5 + e[L + 4]) === L + dn)
                                continue
                        } else
                            b = L + 4;
                        switch (R) {
                        case h:
                            A && (d && (a = yn(d)) && this.videoParser.parseAVCPES(s, u, a, !1, this._duration),
                            d = {
                                data: [],
                                size: 0
                            }),
                            d && (d.data.push(e.subarray(b, L + dn)),
                            d.size += L + dn - b);
                            break;
                        case c:
                            if (A) {
                                if (g && (a = yn(g)))
                                    switch (o.segmentCodec) {
                                    case "aac":
                                        this.parseAACPES(o, a);
                                        break;
                                    case "mp3":
                                        this.parseMPEGPES(o, a);
                                        break;
                                    case "ac3":
                                        this.parseAC3PES(o, a)
                                    }
                                g = {
                                    data: [],
                                    size: 0
                                }
                            }
                            g && (g.data.push(e.subarray(b, L + dn)),
                            g.size += L + dn - b);
                            break;
                        case f:
                            A && (v && (a = yn(v)) && this.parseID3PES(l, a),
                            v = {
                                data: [],
                                size: 0
                            }),
                            v && (v.data.push(e.subarray(b, L + dn)),
                            v.size += L + dn - b);
                            break;
                        case 0:
                            A && (b += e[b] + 1),
                            y = this._pmtId = gn(e, b);
                            break;
                        case y:
                            A && (b += e[b] + 1);
                            var k = vn(e, b, this.typeSupported, i, this.observer);
                            (h = k.videoPid) > 0 && (s.pid = h,
                            s.segmentCodec = k.segmentVideoCodec),
                            (c = k.audioPid) > 0 && (o.pid = c,
                            o.segmentCodec = k.segmentAudioCodec),
                            (f = k.id3Pid) > 0 && (l.pid = f),
                            null === m || p || (w.warn("MPEG-TS PMT found at " + L + " after unknown PID '" + m + "'. Backtracking to sync byte @" + T + " to parse all TS packets."),
                            m = null,
                            L = T - 188),
                            p = this.pmtParsed = !0;
                            break;
                        case 17:
                        case 8191:
                            break;
                        default:
                            m = R
                        }
                    } else
                        S++;
                S > 0 && mn(this.observer, new Error("Found " + S + " TS packet/s that do not start with 0x47")),
                s.pesData = d,
                o.pesData = g,
                l.pesData = v;
                var D = {
                    audioTrack: o,
                    videoTrack: s,
                    id3Track: l,
                    textTrack: u
                };
                return n && this.extractRemainingSamples(D),
                D
            }
            ,
            e.flush = function() {
                var t, e = this.remainderData;
                return this.remainderData = null,
                t = e ? this.demux(e, -1, !1, !0) : {
                    videoTrack: this._videoTrack,
                    audioTrack: this._audioTrack,
                    id3Track: this._id3Track,
                    textTrack: this._txtTrack
                },
                this.extractRemainingSamples(t),
                this.sampleAes ? this.decrypt(t, this.sampleAes) : t
            }
            ,
            e.extractRemainingSamples = function(t) {
                var e, r = t.audioTrack, i = t.videoTrack, n = t.id3Track, a = t.textTrack, s = i.pesData, o = r.pesData, l = n.pesData;
                if (s && (e = yn(s)) ? (this.videoParser.parseAVCPES(i, a, e, !0, this._duration),
                i.pesData = null) : i.pesData = s,
                o && (e = yn(o))) {
                    switch (r.segmentCodec) {
                    case "aac":
                        this.parseAACPES(r, e);
                        break;
                    case "mp3":
                        this.parseMPEGPES(r, e);
                        break;
                    case "ac3":
                        this.parseAC3PES(r, e)
                    }
                    r.pesData = null
                } else
                    null != o && o.size && w.log("last AAC PES packet truncated,might overlap between fragments"),
                    r.pesData = o;
                l && (e = yn(l)) ? (this.parseID3PES(n, e),
                n.pesData = null) : n.pesData = l
            }
            ,
            e.demuxSampleAes = function(t, e, r) {
                var i = this.demux(t, r, !0, !this.config.progressive)
                  , n = this.sampleAes = new hn(this.observer,this.config,e);
                return this.decrypt(i, n)
            }
            ,
            e.decrypt = function(t, e) {
                return new Promise((function(r) {
                    var i = t.audioTrack
                      , n = t.videoTrack;
                    i.samples && "aac" === i.segmentCodec ? e.decryptAacSamples(i.samples, 0, (function() {
                        n.samples ? e.decryptAvcSamples(n.samples, 0, 0, (function() {
                            r(t)
                        }
                        )) : r(t)
                    }
                    )) : n.samples && e.decryptAvcSamples(n.samples, 0, 0, (function() {
                        r(t)
                    }
                    ))
                }
                ))
            }
            ,
            e.destroy = function() {
                this._duration = 0
            }
            ,
            e.parseAACPES = function(t, e) {
                var r, i, n, a = 0, s = this.aacOverFlow, o = e.data;
                if (s) {
                    this.aacOverFlow = null;
                    var l = s.missing
                      , u = s.sample.unit.byteLength;
                    if (-1 === l)
                        o = Wt(s.sample.unit, o);
                    else {
                        var h = u - l;
                        s.sample.unit.set(o.subarray(0, l), h),
                        t.samples.push(s.sample),
                        a = s.missing
                    }
                }
                for (r = a,
                i = o.length; r < i - 1 && !Bi(o, r); r++)
                    ;
                if (r !== a) {
                    var d, c = r < i - 1;
                    if (d = c ? "AAC PES did not start with ADTS header,offset:" + r : "No ADTS header found in AAC PES",
                    mn(this.observer, new Error(d), c),
                    !c)
                        return
                }
                if (Ki(t, this.observer, o, r, this.audioCodec),
                void 0 !== e.pts)
                    n = e.pts;
                else {
                    if (!s)
                        return void w.warn("[tsdemuxer]: AAC PES unknown PTS");
                    var f = Hi(t.samplerate);
                    n = s.sample.pts + f
                }
                for (var g, v = 0; r < i; ) {
                    if (r += (g = Vi(t, o, r, n, v)).length,
                    g.missing) {
                        this.aacOverFlow = g;
                        break
                    }
                    for (v++; r < i - 1 && !Bi(o, r); r++)
                        ;
                }
            }
            ,
            e.parseMPEGPES = function(t, e) {
                var r = e.data
                  , i = r.length
                  , n = 0
                  , a = 0
                  , s = e.pts;
                if (void 0 !== s)
                    for (; a < i; )
                        if ($i(r, a)) {
                            var o = zi(t, r, a, s, n);
                            if (!o)
                                break;
                            a += o.length,
                            n++
                        } else
                            a++;
                else
                    w.warn("[tsdemuxer]: MPEG PES unknown PTS")
            }
            ,
            e.parseAC3PES = function(t, e) {
                var r = e.data
                  , i = e.pts;
                if (void 0 !== i)
                    for (var n, a = r.length, s = 0, o = 0; o < a && (n = sn(t, r, o, i, s++)) > 0; )
                        o += n;
                else
                    w.warn("[tsdemuxer]: AC3 PES unknown PTS")
            }
            ,
            e.parseID3PES = function(t, e) {
                if (void 0 !== e.pts) {
                    var r = o({}, e, {
                        type: this._videoTrack ? qe : We,
                        duration: Number.POSITIVE_INFINITY
                    });
                    t.samples.push(r)
                } else
                    w.warn("[tsdemuxer]: ID3 PES unknown PTS")
            }
            ,
            t
        }();
        function fn(t, e) {
            return ((31 & t[e + 1]) << 8) + t[e + 2]
        }
        function gn(t, e) {
            return (31 & t[e + 10]) << 8 | t[e + 11]
        }
        function vn(t, e, r, i, n) {
            var a = {
                audioPid: -1,
                videoPid: -1,
                id3Pid: -1,
                segmentVideoCodec: "avc",
                segmentAudioCodec: "aac"
            }
              , s = e + 3 + ((15 & t[e + 1]) << 8 | t[e + 2]) - 4;
            for (e += 12 + ((15 & t[e + 10]) << 8 | t[e + 11]); e < s; ) {
                var o = fn(t, e)
                  , l = (15 & t[e + 3]) << 8 | t[e + 4];
                switch (t[e]) {
                case 207:
                    if (!i) {
                        pn("ADTS AAC");
                        break
                    }
                case 15:
                    -1 === a.audioPid && (a.audioPid = o);
                    break;
                case 21:
                    -1 === a.id3Pid && (a.id3Pid = o);
                    break;
                case 219:
                    if (!i) {
                        pn("H.264");
                        break
                    }
                case 27:
                    -1 === a.videoPid && (a.videoPid = o,
                    a.segmentVideoCodec = "avc");
                    break;
                case 3:
                case 4:
                    r.mpeg || r.mp3 ? -1 === a.audioPid && (a.audioPid = o,
                    a.segmentAudioCodec = "mp3") : w.log("MPEG audio found, not supported in this browser");
                    break;
                case 193:
                    if (!i) {
                        pn("AC-3");
                        break
                    }
                case 129:
                    r.ac3 ? -1 === a.audioPid && (a.audioPid = o,
                    a.segmentAudioCodec = "ac3") : w.log("AC-3 audio found, not supported in this browser");
                    break;
                case 6:
                    if (-1 === a.audioPid && l > 0)
                        for (var u = e + 5, h = l; h > 2; ) {
                            106 === t[u] && (!0 !== r.ac3 ? w.log("AC-3 audio found, not supported in this browser for now") : (a.audioPid = o,
                            a.segmentAudioCodec = "ac3"));
                            var d = t[u + 1] + 2;
                            u += d,
                            h -= d
                        }
                    break;
                case 194:
                case 135:
                    return mn(n, new Error("Unsupported EC-3 in M2TS found")),
                    a;
                case 36:
                    return mn(n, new Error("Unsupported HEVC in M2TS found")),
                    a
                }
                e += l + 5
            }
            return a
        }
        function mn(t, e, r) {
            w.warn("parsing error: " + e.message),
            t.emit(S.ERROR, S.ERROR, {
                type: L.MEDIA_ERROR,
                details: A.FRAG_PARSING_ERROR,
                fatal: !1,
                levelRetry: r,
                error: e,
                reason: e.message
            })
        }
        function pn(t) {
            w.log(t + " with AES-128-CBC encryption found in unencrypted stream")
        }
        function yn(t) {
            var e, r, i, n, a, s = 0, o = t.data;
            if (!t || 0 === t.size)
                return null;
            for (; o[0].length < 19 && o.length > 1; )
                o[0] = Wt(o[0], o[1]),
                o.splice(1, 1);
            if (1 === ((e = o[0])[0] << 16) + (e[1] << 8) + e[2]) {
                if ((r = (e[4] << 8) + e[5]) && r > t.size - 6)
                    return null;
                var l = e[7];
                192 & l && (n = 536870912 * (14 & e[9]) + 4194304 * (255 & e[10]) + 16384 * (254 & e[11]) + 128 * (255 & e[12]) + (254 & e[13]) / 2,
                64 & l ? n - (a = 536870912 * (14 & e[14]) + 4194304 * (255 & e[15]) + 16384 * (254 & e[16]) + 128 * (255 & e[17]) + (254 & e[18]) / 2) > 54e5 && (w.warn(Math.round((n - a) / 9e4) + "s delta between PTS and DTS, align them"),
                n = a) : a = n);
                var u = (i = e[8]) + 9;
                if (t.size <= u)
                    return null;
                t.size -= u;
                for (var h = new Uint8Array(t.size), d = 0, c = o.length; d < c; d++) {
                    var f = (e = o[d]).byteLength;
                    if (u) {
                        if (u > f) {
                            u -= f;
                            continue
                        }
                        e = e.subarray(u),
                        f -= u,
                        u = 0
                    }
                    h.set(e, s),
                    s += f
                }
                return r && (r -= i + 3),
                {
                    data: h,
                    pts: n,
                    dts: a,
                    len: r
                }
            }
            return null
        }
        var En = function(t) {
            function e() {
                return t.apply(this, arguments) || this
            }
            l(e, t);
            var r = e.prototype;
            return r.resetInitSegment = function(e, r, i, n) {
                t.prototype.resetInitSegment.call(this, e, r, i, n),
                this._audioTrack = {
                    container: "audio/mpeg",
                    type: "audio",
                    id: 2,
                    pid: -1,
                    sequenceNumber: 0,
                    segmentCodec: "mp3",
                    samples: [],
                    manifestCodec: r,
                    duration: n,
                    inputTimeScale: 9e4,
                    dropped: 0
                }
            }
            ,
            e.probe = function(t) {
                if (!t)
                    return !1;
                var e = ct(t, 0)
                  , r = (null == e ? void 0 : e.length) || 0;
                if (e && 11 === t[r] && 119 === t[r + 1] && void 0 !== vt(e) && nn(t, r) <= 16)
                    return !1;
                for (var i = t.length; r < i; r++)
                    if (Zi(t, r))
                        return w.log("MPEG Audio sync word found !"),
                        !0;
                return !1
            }
            ,
            r.canParse = function(t, e) {
                return function(t, e) {
                    return Ji(t, e) && 4 <= t.length - e
                }(t, e)
            }
            ,
            r.appendFrame = function(t, e, r) {
                if (null !== this.basePTS)
                    return zi(t, e, r, this.basePTS, this.frameIndex)
            }
            ,
            e
        }(Fi)
          , Tn = function() {
            function t() {}
            return t.getSilentFrame = function(t, e) {
                if ("mp4a.40.2" === t) {
                    if (1 === e)
                        return new Uint8Array([0, 200, 0, 128, 35, 128]);
                    if (2 === e)
                        return new Uint8Array([33, 0, 73, 144, 2, 25, 0, 35, 128]);
                    if (3 === e)
                        return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 142]);
                    if (4 === e)
                        return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 128, 44, 128, 8, 2, 56]);
                    if (5 === e)
                        return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4, 153, 0, 33, 144, 2, 56]);
                    if (6 === e)
                        return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4, 153, 0, 33, 144, 2, 0, 178, 0, 32, 8, 224])
                } else {
                    if (1 === e)
                        return new Uint8Array([1, 64, 34, 128, 163, 78, 230, 128, 186, 8, 0, 0, 0, 28, 6, 241, 193, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94]);
                    if (2 === e)
                        return new Uint8Array([1, 64, 34, 128, 163, 94, 230, 128, 186, 8, 0, 0, 0, 0, 149, 0, 6, 241, 161, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94]);
                    if (3 === e)
                        return new Uint8Array([1, 64, 34, 128, 163, 94, 230, 128, 186, 8, 0, 0, 0, 0, 149, 0, 6, 241, 161, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94])
                }
            }
            ,
            t
        }()
          , Sn = Math.pow(2, 32) - 1
          , Ln = function() {
            function t() {}
            return t.init = function() {
                var e;
                for (e in t.types = {
                    avc1: [],
                    avcC: [],
                    btrt: [],
                    dinf: [],
                    dref: [],
                    esds: [],
                    ftyp: [],
                    hdlr: [],
                    mdat: [],
                    mdhd: [],
                    mdia: [],
                    mfhd: [],
                    minf: [],
                    moof: [],
                    moov: [],
                    mp4a: [],
                    ".mp3": [],
                    dac3: [],
                    "ac-3": [],
                    mvex: [],
                    mvhd: [],
                    pasp: [],
                    sdtp: [],
                    stbl: [],
                    stco: [],
                    stsc: [],
                    stsd: [],
                    stsz: [],
                    stts: [],
                    tfdt: [],
                    tfhd: [],
                    traf: [],
                    trak: [],
                    trun: [],
                    trex: [],
                    tkhd: [],
                    vmhd: [],
                    smhd: []
                },
                t.types)
                    t.types.hasOwnProperty(e) && (t.types[e] = [e.charCodeAt(0), e.charCodeAt(1), e.charCodeAt(2), e.charCodeAt(3)]);
                var r = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 118, 105, 100, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86, 105, 100, 101, 111, 72, 97, 110, 100, 108, 101, 114, 0])
                  , i = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 115, 111, 117, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 111, 117, 110, 100, 72, 97, 110, 100, 108, 101, 114, 0]);
                t.HDLR_TYPES = {
                    video: r,
                    audio: i
                };
                var n = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0, 0, 1])
                  , a = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]);
                t.STTS = t.STSC = t.STCO = a,
                t.STSZ = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
                t.VMHD = new Uint8Array([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]),
                t.SMHD = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]),
                t.STSD = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1]);
                var s = new Uint8Array([105, 115, 111, 109])
                  , o = new Uint8Array([97, 118, 99, 49])
                  , l = new Uint8Array([0, 0, 0, 1]);
                t.FTYP = t.box(t.types.ftyp, s, l, s, o),
                t.DINF = t.box(t.types.dinf, t.box(t.types.dref, n))
            }
            ,
            t.box = function(t) {
                for (var e = 8, r = arguments.length, i = new Array(r > 1 ? r - 1 : 0), n = 1; n < r; n++)
                    i[n - 1] = arguments[n];
                for (var a = i.length, s = a; a--; )
                    e += i[a].byteLength;
                var o = new Uint8Array(e);
                for (o[0] = e >> 24 & 255,
                o[1] = e >> 16 & 255,
                o[2] = e >> 8 & 255,
                o[3] = 255 & e,
                o.set(t, 4),
                a = 0,
                e = 8; a < s; a++)
                    o.set(i[a], e),
                    e += i[a].byteLength;
                return o
            }
            ,
            t.hdlr = function(e) {
                return t.box(t.types.hdlr, t.HDLR_TYPES[e])
            }
            ,
            t.mdat = function(e) {
                return t.box(t.types.mdat, e)
            }
            ,
            t.mdhd = function(e, r) {
                r *= e;
                var i = Math.floor(r / (Sn + 1))
                  , n = Math.floor(r % (Sn + 1));
                return t.box(t.types.mdhd, new Uint8Array([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, 255 & e, i >> 24, i >> 16 & 255, i >> 8 & 255, 255 & i, n >> 24, n >> 16 & 255, n >> 8 & 255, 255 & n, 85, 196, 0, 0]))
            }
            ,
            t.mdia = function(e) {
                return t.box(t.types.mdia, t.mdhd(e.timescale, e.duration), t.hdlr(e.type), t.minf(e))
            }
            ,
            t.mfhd = function(e) {
                return t.box(t.types.mfhd, new Uint8Array([0, 0, 0, 0, e >> 24, e >> 16 & 255, e >> 8 & 255, 255 & e]))
            }
            ,
            t.minf = function(e) {
                return "audio" === e.type ? t.box(t.types.minf, t.box(t.types.smhd, t.SMHD), t.DINF, t.stbl(e)) : t.box(t.types.minf, t.box(t.types.vmhd, t.VMHD), t.DINF, t.stbl(e))
            }
            ,
            t.moof = function(e, r, i) {
                return t.box(t.types.moof, t.mfhd(e), t.traf(i, r))
            }
            ,
            t.moov = function(e) {
                for (var r = e.length, i = []; r--; )
                    i[r] = t.trak(e[r]);
                return t.box.apply(null, [t.types.moov, t.mvhd(e[0].timescale, e[0].duration)].concat(i).concat(t.mvex(e)))
            }
            ,
            t.mvex = function(e) {
                for (var r = e.length, i = []; r--; )
                    i[r] = t.trex(e[r]);
                return t.box.apply(null, [t.types.mvex].concat(i))
            }
            ,
            t.mvhd = function(e, r) {
                r *= e;
                var i = Math.floor(r / (Sn + 1))
                  , n = Math.floor(r % (Sn + 1))
                  , a = new Uint8Array([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, 255 & e, i >> 24, i >> 16 & 255, i >> 8 & 255, 255 & i, n >> 24, n >> 16 & 255, n >> 8 & 255, 255 & n, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255]);
                return t.box(t.types.mvhd, a)
            }
            ,
            t.sdtp = function(e) {
                var r, i, n = e.samples || [], a = new Uint8Array(4 + n.length);
                for (r = 0; r < n.length; r++)
                    i = n[r].flags,
                    a[r + 4] = i.dependsOn << 4 | i.isDependedOn << 2 | i.hasRedundancy;
                return t.box(t.types.sdtp, a)
            }
            ,
            t.stbl = function(e) {
                return t.box(t.types.stbl, t.stsd(e), t.box(t.types.stts, t.STTS), t.box(t.types.stsc, t.STSC), t.box(t.types.stsz, t.STSZ), t.box(t.types.stco, t.STCO))
            }
            ,
            t.avc1 = function(e) {
                var r, i, n, a = [], s = [];
                for (r = 0; r < e.sps.length; r++)
                    n = (i = e.sps[r]).byteLength,
                    a.push(n >>> 8 & 255),
                    a.push(255 & n),
                    a = a.concat(Array.prototype.slice.call(i));
                for (r = 0; r < e.pps.length; r++)
                    n = (i = e.pps[r]).byteLength,
                    s.push(n >>> 8 & 255),
                    s.push(255 & n),
                    s = s.concat(Array.prototype.slice.call(i));
                var o = t.box(t.types.avcC, new Uint8Array([1, a[3], a[4], a[5], 255, 224 | e.sps.length].concat(a).concat([e.pps.length]).concat(s)))
                  , l = e.width
                  , u = e.height
                  , h = e.pixelRatio[0]
                  , d = e.pixelRatio[1];
                return t.box(t.types.avc1, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, l >> 8 & 255, 255 & l, u >> 8 & 255, 255 & u, 0, 72, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 1, 18, 100, 97, 105, 108, 121, 109, 111, 116, 105, 111, 110, 47, 104, 108, 115, 46, 106, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 17, 17]), o, t.box(t.types.btrt, new Uint8Array([0, 28, 156, 128, 0, 45, 198, 192, 0, 45, 198, 192])), t.box(t.types.pasp, new Uint8Array([h >> 24, h >> 16 & 255, h >> 8 & 255, 255 & h, d >> 24, d >> 16 & 255, d >> 8 & 255, 255 & d])))
            }
            ,
            t.esds = function(t) {
                var e = t.config.length;
                return new Uint8Array([0, 0, 0, 0, 3, 23 + e, 0, 1, 0, 4, 15 + e, 64, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5].concat([e]).concat(t.config).concat([6, 1, 2]))
            }
            ,
            t.audioStsd = function(t) {
                var e = t.samplerate;
                return new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t.channelCount, 0, 16, 0, 0, 0, 0, e >> 8 & 255, 255 & e, 0, 0])
            }
            ,
            t.mp4a = function(e) {
                return t.box(t.types.mp4a, t.audioStsd(e), t.box(t.types.esds, t.esds(e)))
            }
            ,
            t.mp3 = function(e) {
                return t.box(t.types[".mp3"], t.audioStsd(e))
            }
            ,
            t.ac3 = function(e) {
                return t.box(t.types["ac-3"], t.audioStsd(e), t.box(t.types.dac3, e.config))
            }
            ,
            t.stsd = function(e) {
                return "audio" === e.type ? "mp3" === e.segmentCodec && "mp3" === e.codec ? t.box(t.types.stsd, t.STSD, t.mp3(e)) : "ac3" === e.segmentCodec ? t.box(t.types.stsd, t.STSD, t.ac3(e)) : t.box(t.types.stsd, t.STSD, t.mp4a(e)) : t.box(t.types.stsd, t.STSD, t.avc1(e))
            }
            ,
            t.tkhd = function(e) {
                var r = e.id
                  , i = e.duration * e.timescale
                  , n = e.width
                  , a = e.height
                  , s = Math.floor(i / (Sn + 1))
                  , o = Math.floor(i % (Sn + 1));
                return t.box(t.types.tkhd, new Uint8Array([1, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, r >> 24 & 255, r >> 16 & 255, r >> 8 & 255, 255 & r, 0, 0, 0, 0, s >> 24, s >> 16 & 255, s >> 8 & 255, 255 & s, o >> 24, o >> 16 & 255, o >> 8 & 255, 255 & o, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, n >> 8 & 255, 255 & n, 0, 0, a >> 8 & 255, 255 & a, 0, 0]))
            }
            ,
            t.traf = function(e, r) {
                var i = t.sdtp(e)
                  , n = e.id
                  , a = Math.floor(r / (Sn + 1))
                  , s = Math.floor(r % (Sn + 1));
                return t.box(t.types.traf, t.box(t.types.tfhd, new Uint8Array([0, 0, 0, 0, n >> 24, n >> 16 & 255, n >> 8 & 255, 255 & n])), t.box(t.types.tfdt, new Uint8Array([1, 0, 0, 0, a >> 24, a >> 16 & 255, a >> 8 & 255, 255 & a, s >> 24, s >> 16 & 255, s >> 8 & 255, 255 & s])), t.trun(e, i.length + 16 + 20 + 8 + 16 + 8 + 8), i)
            }
            ,
            t.trak = function(e) {
                return e.duration = e.duration || 4294967295,
                t.box(t.types.trak, t.tkhd(e), t.mdia(e))
            }
            ,
            t.trex = function(e) {
                var r = e.id;
                return t.box(t.types.trex, new Uint8Array([0, 0, 0, 0, r >> 24, r >> 16 & 255, r >> 8 & 255, 255 & r, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]))
            }
            ,
            t.trun = function(e, r) {
                var i, n, a, s, o, l, u = e.samples || [], h = u.length, d = 12 + 16 * h, c = new Uint8Array(d);
                for (r += 8 + d,
                c.set(["video" === e.type ? 1 : 0, 0, 15, 1, h >>> 24 & 255, h >>> 16 & 255, h >>> 8 & 255, 255 & h, r >>> 24 & 255, r >>> 16 & 255, r >>> 8 & 255, 255 & r], 0),
                i = 0; i < h; i++)
                    a = (n = u[i]).duration,
                    s = n.size,
                    o = n.flags,
                    l = n.cts,
                    c.set([a >>> 24 & 255, a >>> 16 & 255, a >>> 8 & 255, 255 & a, s >>> 24 & 255, s >>> 16 & 255, s >>> 8 & 255, 255 & s, o.isLeading << 2 | o.dependsOn, o.isDependedOn << 6 | o.hasRedundancy << 4 | o.paddingValue << 1 | o.isNonSync, 61440 & o.degradPrio, 15 & o.degradPrio, l >>> 24 & 255, l >>> 16 & 255, l >>> 8 & 255, 255 & l], 12 + 16 * i);
                return t.box(t.types.trun, c)
            }
            ,
            t.initSegment = function(e) {
                t.types || t.init();
                var r = t.moov(e);
                return Wt(t.FTYP, r)
            }
            ,
            t
        }();
        Ln.types = void 0,
        Ln.HDLR_TYPES = void 0,
        Ln.STTS = void 0,
        Ln.STSC = void 0,
        Ln.STCO = void 0,
        Ln.STSZ = void 0,
        Ln.VMHD = void 0,
        Ln.SMHD = void 0,
        Ln.STSD = void 0,
        Ln.FTYP = void 0,
        Ln.DINF = void 0;
        var An = 9e4;
        function Rn(t, e, r, i) {
            void 0 === r && (r = 1),
            void 0 === i && (i = !1);
            var n = t * e * r;
            return i ? Math.round(n) : n
        }
        function bn(t, e) {
            return void 0 === e && (e = !1),
            Rn(t, 1e3, 1 / An, e)
        }
        var kn = null
          , Dn = null
          , In = function() {
            function t(t, e, r, i) {
                if (this.observer = void 0,
                this.config = void 0,
                this.typeSupported = void 0,
                this.ISGenerated = !1,
                this._initPTS = null,
                this._initDTS = null,
                this.nextAvcDts = null,
                this.nextAudioPts = null,
                this.videoSampleDuration = null,
                this.isAudioContiguous = !1,
                this.isVideoContiguous = !1,
                this.videoTrackConfig = void 0,
                this.observer = t,
                this.config = e,
                this.typeSupported = r,
                this.ISGenerated = !1,
                null === kn) {
                    var n = (navigator.userAgent || "").match(/Chrome\/(\d+)/i);
                    kn = n ? parseInt(n[1]) : 0
                }
                if (null === Dn) {
                    var a = navigator.userAgent.match(/Safari\/(\d+)/i);
                    Dn = a ? parseInt(a[1]) : 0
                }
            }
            var e = t.prototype;
            return e.destroy = function() {
                this.config = this.videoTrackConfig = this._initPTS = this._initDTS = null
            }
            ,
            e.resetTimeStamp = function(t) {
                w.log("[mp4-remuxer]: initPTS & initDTS reset"),
                this._initPTS = this._initDTS = t
            }
            ,
            e.resetNextTimestamp = function() {
                w.log("[mp4-remuxer]: reset next timestamp"),
                this.isVideoContiguous = !1,
                this.isAudioContiguous = !1
            }
            ,
            e.resetInitSegment = function() {
                w.log("[mp4-remuxer]: ISGenerated flag reset"),
                this.ISGenerated = !1,
                this.videoTrackConfig = void 0
            }
            ,
            e.getVideoStartPts = function(t) {
                var e = !1
                  , r = t.reduce((function(t, r) {
                    var i = r.pts - t;
                    return i < -4294967296 ? (e = !0,
                    wn(t, r.pts)) : i > 0 ? t : r.pts
                }
                ), t[0].pts);
                return e && w.debug("PTS rollover detected"),
                r
            }
            ,
            e.remux = function(t, e, r, i, n, a, s, o) {
                var l, u, h, d, c, f, g = n, v = n, m = t.pid > -1, p = e.pid > -1, y = e.samples.length, E = t.samples.length > 0, T = s && y > 0 || y > 1;
                if ((!m || E) && (!p || T) || this.ISGenerated || s) {
                    if (this.ISGenerated) {
                        var S, L, A, R, b = this.videoTrackConfig;
                        !b || e.width === b.width && e.height === b.height && (null == (S = e.pixelRatio) ? void 0 : S[0]) === (null == (L = b.pixelRatio) ? void 0 : L[0]) && (null == (A = e.pixelRatio) ? void 0 : A[1]) === (null == (R = b.pixelRatio) ? void 0 : R[1]) || this.resetInitSegment()
                    } else
                        h = this.generateIS(t, e, n, a);
                    var k, D = this.isVideoContiguous, I = -1;
                    if (T && (I = function(t) {
                        for (var e = 0; e < t.length; e++)
                            if (t[e].key)
                                return e;
                        return -1
                    }(e.samples),
                    !D && this.config.forceKeyFrameOnDiscontinuity))
                        if (f = !0,
                        I > 0) {
                            w.warn("[mp4-remuxer]: Dropped " + I + " out of " + y + " video samples due to a missing keyframe");
                            var C = this.getVideoStartPts(e.samples);
                            e.samples = e.samples.slice(I),
                            e.dropped += I,
                            k = v += (e.samples[0].pts - C) / e.inputTimeScale
                        } else
                            -1 === I && (w.warn("[mp4-remuxer]: No keyframe found out of " + y + " video samples"),
                            f = !1);
                    if (this.ISGenerated) {
                        if (E && T) {
                            var _ = this.getVideoStartPts(e.samples)
                              , x = (wn(t.samples[0].pts, _) - _) / e.inputTimeScale;
                            g += Math.max(0, x),
                            v += Math.max(0, -x)
                        }
                        if (E) {
                            if (t.samplerate || (w.warn("[mp4-remuxer]: regenerate InitSegment as audio detected"),
                            h = this.generateIS(t, e, n, a)),
                            u = this.remuxAudio(t, g, this.isAudioContiguous, a, p || T || o === Me ? v : void 0),
                            T) {
                                var P = u ? u.endPTS - u.startPTS : 0;
                                e.inputTimeScale || (w.warn("[mp4-remuxer]: regenerate InitSegment as video detected"),
                                h = this.generateIS(t, e, n, a)),
                                l = this.remuxVideo(e, v, D, P)
                            }
                        } else
                            T && (l = this.remuxVideo(e, v, D, 0));
                        l && (l.firstKeyFrame = I,
                        l.independent = -1 !== I,
                        l.firstKeyFramePTS = k)
                    }
                }
                return this.ISGenerated && this._initPTS && this._initDTS && (r.samples.length && (c = Cn(r, n, this._initPTS, this._initDTS)),
                i.samples.length && (d = _n(i, n, this._initPTS))),
                {
                    audio: u,
                    video: l,
                    initSegment: h,
                    independent: f,
                    text: d,
                    id3: c
                }
            }
            ,
            e.generateIS = function(t, e, r, i) {
                var n, a, s, o = t.samples, l = e.samples, u = this.typeSupported, h = {}, d = this._initPTS, c = !d || i, f = "audio/mp4";
                if (c && (n = a = 1 / 0),
                t.config && o.length) {
                    switch (t.timescale = t.samplerate,
                    t.segmentCodec) {
                    case "mp3":
                        u.mpeg ? (f = "audio/mpeg",
                        t.codec = "") : u.mp3 && (t.codec = "mp3");
                        break;
                    case "ac3":
                        t.codec = "ac-3"
                    }
                    h.audio = {
                        id: "audio",
                        container: f,
                        codec: t.codec,
                        initSegment: "mp3" === t.segmentCodec && u.mpeg ? new Uint8Array(0) : Ln.initSegment([t]),
                        metadata: {
                            channelCount: t.channelCount
                        }
                    },
                    c && (s = t.inputTimeScale,
                    d && s === d.timescale ? c = !1 : n = a = o[0].pts - Math.round(s * r))
                }
                if (e.sps && e.pps && l.length) {
                    if (e.timescale = e.inputTimeScale,
                    h.video = {
                        id: "main",
                        container: "video/mp4",
                        codec: e.codec,
                        initSegment: Ln.initSegment([e]),
                        metadata: {
                            width: e.width,
                            height: e.height
                        }
                    },
                    c)
                        if (s = e.inputTimeScale,
                        d && s === d.timescale)
                            c = !1;
                        else {
                            var g = this.getVideoStartPts(l)
                              , v = Math.round(s * r);
                            a = Math.min(a, wn(l[0].dts, g) - v),
                            n = Math.min(n, g - v)
                        }
                    this.videoTrackConfig = {
                        width: e.width,
                        height: e.height,
                        pixelRatio: e.pixelRatio
                    }
                }
                if (Object.keys(h).length)
                    return this.ISGenerated = !0,
                    c ? (this._initPTS = {
                        baseTime: n,
                        timescale: s
                    },
                    this._initDTS = {
                        baseTime: a,
                        timescale: s
                    }) : n = s = void 0,
                    {
                        tracks: h,
                        initPTS: n,
                        timescale: s
                    }
            }
            ,
            e.remuxVideo = function(t, e, r, i) {
                var n, a, s = t.inputTimeScale, l = t.samples, u = [], h = l.length, d = this._initPTS, c = this.nextAvcDts, f = 8, g = this.videoSampleDuration, v = Number.POSITIVE_INFINITY, m = Number.NEGATIVE_INFINITY, p = !1;
                if (!r || null === c) {
                    var y = e * s
                      , E = l[0].pts - wn(l[0].dts, l[0].pts);
                    kn && null !== c && Math.abs(y - E - c) < 15e3 ? r = !0 : c = y - E
                }
                for (var T = d.baseTime * s / d.timescale, R = 0; R < h; R++) {
                    var b = l[R];
                    b.pts = wn(b.pts - T, c),
                    b.dts = wn(b.dts - T, c),
                    b.dts < l[R > 0 ? R - 1 : R].dts && (p = !0)
                }
                p && l.sort((function(t, e) {
                    var r = t.dts - e.dts
                      , i = t.pts - e.pts;
                    return r || i
                }
                )),
                n = l[0].dts;
                var k = (a = l[l.length - 1].dts) - n
                  , D = k ? Math.round(k / (h - 1)) : g || t.inputTimeScale / 30;
                if (r) {
                    var I = n - c
                      , C = I > D
                      , _ = I < -1;
                    if ((C || _) && (C ? w.warn("AVC: " + bn(I, !0) + " ms (" + I + "dts) hole between fragments detected at " + e.toFixed(3)) : w.warn("AVC: " + bn(-I, !0) + " ms (" + I + "dts) overlapping between fragments detected at " + e.toFixed(3)),
                    !_ || c >= l[0].pts || kn)) {
                        n = c;
                        var x = l[0].pts - I;
                        if (C)
                            l[0].dts = n,
                            l[0].pts = x;
                        else
                            for (var P = 0; P < l.length && !(l[P].dts > x); P++)
                                l[P].dts -= I,
                                l[P].pts -= I;
                        w.log("Video: Initial PTS/DTS adjusted: " + bn(x, !0) + "/" + bn(n, !0) + ", delta: " + bn(I, !0) + " ms")
                    }
                }
                for (var F = 0, M = 0, O = n = Math.max(0, n), N = 0; N < h; N++) {
                    for (var U = l[N], B = U.units, G = B.length, K = 0, H = 0; H < G; H++)
                        K += B[H].data.length;
                    M += K,
                    F += G,
                    U.length = K,
                    U.dts < O ? (U.dts = O,
                    O += D / 4 | 0 || 1) : O = U.dts,
                    v = Math.min(U.pts, v),
                    m = Math.max(U.pts, m)
                }
                a = l[h - 1].dts;
                var V, Y = M + 4 * F + 8;
                try {
                    V = new Uint8Array(Y)
                } catch (t) {
                    return void this.observer.emit(S.ERROR, S.ERROR, {
                        type: L.MUX_ERROR,
                        details: A.REMUX_ALLOC_ERROR,
                        fatal: !1,
                        error: t,
                        bytes: Y,
                        reason: "fail allocating video mdat " + Y
                    })
                }
                var W = new DataView(V.buffer);
                W.setUint32(0, Y),
                V.set(Ln.types.mdat, 4);
                for (var j = !1, q = Number.POSITIVE_INFINITY, X = Number.POSITIVE_INFINITY, z = Number.NEGATIVE_INFINITY, Q = Number.NEGATIVE_INFINITY, J = 0; J < h; J++) {
                    for (var $ = l[J], Z = $.units, tt = 0, et = 0, rt = Z.length; et < rt; et++) {
                        var it = Z[et]
                          , nt = it.data
                          , at = it.data.byteLength;
                        W.setUint32(f, at),
                        f += 4,
                        V.set(nt, f),
                        f += at,
                        tt += 4 + at
                    }
                    var st = void 0;
                    if (J < h - 1)
                        g = l[J + 1].dts - $.dts,
                        st = l[J + 1].pts - $.pts;
                    else {
                        var ot = this.config
                          , lt = J > 0 ? $.dts - l[J - 1].dts : D;
                        if (st = J > 0 ? $.pts - l[J - 1].pts : D,
                        ot.stretchShortVideoTrack && null !== this.nextAudioPts) {
                            var ut = Math.floor(ot.maxBufferHole * s)
                              , ht = (i ? v + i * s : this.nextAudioPts) - $.pts;
                            ht > ut ? ((g = ht - lt) < 0 ? g = lt : j = !0,
                            w.log("[mp4-remuxer]: It is approximately " + ht / 90 + " ms to the next segment; using duration " + g / 90 + " ms for the last video frame.")) : g = lt
                        } else
                            g = lt
                    }
                    var dt = Math.round($.pts - $.dts);
                    q = Math.min(q, g),
                    z = Math.max(z, g),
                    X = Math.min(X, st),
                    Q = Math.max(Q, st),
                    u.push(new Pn($.key,g,tt,dt))
                }
                if (u.length)
                    if (kn) {
                        if (kn < 70) {
                            var ct = u[0].flags;
                            ct.dependsOn = 2,
                            ct.isNonSync = 0
                        }
                    } else if (Dn && Q - X < z - q && D / z < .025 && 0 === u[0].cts) {
                        w.warn("Found irregular gaps in sample duration. Using PTS instead of DTS to determine MP4 sample duration.");
                        for (var ft = n, gt = 0, vt = u.length; gt < vt; gt++) {
                            var mt = ft + u[gt].duration
                              , pt = ft + u[gt].cts;
                            if (gt < vt - 1) {
                                var yt = mt + u[gt + 1].cts;
                                u[gt].duration = yt - pt
                            } else
                                u[gt].duration = gt ? u[gt - 1].duration : D;
                            u[gt].cts = 0,
                            ft = mt
                        }
                    }
                g = j || !g ? D : g,
                this.nextAvcDts = c = a + g,
                this.videoSampleDuration = g,
                this.isVideoContiguous = !0;
                var Et = {
                    data1: Ln.moof(t.sequenceNumber++, n, o({}, t, {
                        samples: u
                    })),
                    data2: V,
                    startPTS: v / s,
                    endPTS: (m + g) / s,
                    startDTS: n / s,
                    endDTS: c / s,
                    type: "video",
                    hasAudio: !1,
                    hasVideo: !0,
                    nb: u.length,
                    dropped: t.dropped
                };
                return t.samples = [],
                t.dropped = 0,
                Et
            }
            ,
            e.getSamplesPerFrame = function(t) {
                switch (t.segmentCodec) {
                case "mp3":
                    return 1152;
                case "ac3":
                    return 1536;
                default:
                    return 1024
                }
            }
            ,
            e.remuxAudio = function(t, e, r, i, n) {
                var a = t.inputTimeScale
                  , s = a / (t.samplerate ? t.samplerate : a)
                  , l = this.getSamplesPerFrame(t)
                  , u = l * s
                  , h = this._initPTS
                  , d = "mp3" === t.segmentCodec && this.typeSupported.mpeg
                  , c = []
                  , f = void 0 !== n
                  , g = t.samples
                  , v = d ? 0 : 8
                  , m = this.nextAudioPts || -1
                  , p = e * a
                  , y = h.baseTime * a / h.timescale;
                if (this.isAudioContiguous = r = r || g.length && m > 0 && (i && Math.abs(p - m) < 9e3 || Math.abs(wn(g[0].pts - y, p) - m) < 20 * u),
                g.forEach((function(t) {
                    t.pts = wn(t.pts - y, p)
                }
                )),
                !r || m < 0) {
                    if (g = g.filter((function(t) {
                        return t.pts >= 0
                    }
                    )),
                    !g.length)
                        return;
                    m = 0 === n ? 0 : i && !f ? Math.max(0, p) : g[0].pts
                }
                if ("aac" === t.segmentCodec)
                    for (var E = this.config.maxAudioFramesDrift, T = 0, R = m; T < g.length; T++) {
                        var b = g[T]
                          , k = b.pts
                          , D = k - R
                          , I = Math.abs(1e3 * D / a);
                        if (D <= -E * u && f)
                            0 === T && (w.warn("Audio frame @ " + (k / a).toFixed(3) + "s overlaps nextAudioPts by " + Math.round(1e3 * D / a) + " ms."),
                            this.nextAudioPts = m = R = k);
                        else if (D >= E * u && I < 1e4 && f) {
                            var C = Math.round(D / u);
                            (R = k - C * u) < 0 && (C--,
                            R += u),
                            0 === T && (this.nextAudioPts = m = R),
                            w.warn("[mp4-remuxer]: Injecting " + C + " audio frame @ " + (R / a).toFixed(3) + "s due to " + Math.round(1e3 * D / a) + " ms gap.");
                            for (var _ = 0; _ < C; _++) {
                                var x = Math.max(R, 0)
                                  , P = Tn.getSilentFrame(t.manifestCodec || t.codec, t.channelCount);
                                P || (w.log("[mp4-remuxer]: Unable to get silent frame for given audio codec; duplicating last frame instead."),
                                P = b.unit.subarray()),
                                g.splice(T, 0, {
                                    unit: P,
                                    pts: x
                                }),
                                R += u,
                                T++
                            }
                        }
                        b.pts = R,
                        R += u
                    }
                for (var F, M = null, O = null, N = 0, U = g.length; U--; )
                    N += g[U].unit.byteLength;
                for (var B = 0, G = g.length; B < G; B++) {
                    var K = g[B]
                      , H = K.unit
                      , V = K.pts;
                    if (null !== O)
                        c[B - 1].duration = Math.round((V - O) / s);
                    else {
                        if (r && "aac" === t.segmentCodec && (V = m),
                        M = V,
                        !(N > 0))
                            return;
                        N += v;
                        try {
                            F = new Uint8Array(N)
                        } catch (t) {
                            return void this.observer.emit(S.ERROR, S.ERROR, {
                                type: L.MUX_ERROR,
                                details: A.REMUX_ALLOC_ERROR,
                                fatal: !1,
                                error: t,
                                bytes: N,
                                reason: "fail allocating audio mdat " + N
                            })
                        }
                        d || (new DataView(F.buffer).setUint32(0, N),
                        F.set(Ln.types.mdat, 4))
                    }
                    F.set(H, v);
                    var Y = H.byteLength;
                    v += Y,
                    c.push(new Pn(!0,l,Y,0)),
                    O = V
                }
                var W = c.length;
                if (W) {
                    var j = c[c.length - 1];
                    this.nextAudioPts = m = O + s * j.duration;
                    var q = d ? new Uint8Array(0) : Ln.moof(t.sequenceNumber++, M / s, o({}, t, {
                        samples: c
                    }));
                    t.samples = [];
                    var X = M / a
                      , z = m / a
                      , Q = {
                        data1: q,
                        data2: F,
                        startPTS: X,
                        endPTS: z,
                        startDTS: X,
                        endDTS: z,
                        type: "audio",
                        hasAudio: !0,
                        hasVideo: !1,
                        nb: W
                    };
                    return this.isAudioContiguous = !0,
                    Q
                }
            }
            ,
            e.remuxEmptyAudio = function(t, e, r, i) {
                var n = t.inputTimeScale
                  , a = n / (t.samplerate ? t.samplerate : n)
                  , s = this.nextAudioPts
                  , o = this._initDTS
                  , l = 9e4 * o.baseTime / o.timescale
                  , u = (null !== s ? s : i.startDTS * n) + l
                  , h = i.endDTS * n + l
                  , d = 1024 * a
                  , c = Math.ceil((h - u) / d)
                  , f = Tn.getSilentFrame(t.manifestCodec || t.codec, t.channelCount);
                if (w.warn("[mp4-remuxer]: remux empty Audio"),
                f) {
                    for (var g = [], v = 0; v < c; v++) {
                        var m = u + v * d;
                        g.push({
                            unit: f,
                            pts: m,
                            dts: m
                        })
                    }
                    return t.samples = g,
                    this.remuxAudio(t, e, r, !1)
                }
                w.trace("[mp4-remuxer]: Unable to remuxEmptyAudio since we were unable to get a silent frame for given audio codec")
            }
            ,
            t
        }();
        function wn(t, e) {
            var r;
            if (null === e)
                return t;
            for (r = e < t ? -8589934592 : 8589934592; Math.abs(t - e) > 4294967296; )
                t += r;
            return t
        }
        function Cn(t, e, r, i) {
            var n = t.samples.length;
            if (n) {
                for (var a = t.inputTimeScale, s = 0; s < n; s++) {
                    var o = t.samples[s];
                    o.pts = wn(o.pts - r.baseTime * a / r.timescale, e * a) / a,
                    o.dts = wn(o.dts - i.baseTime * a / i.timescale, e * a) / a
                }
                var l = t.samples;
                return t.samples = [],
                {
                    samples: l
                }
            }
        }
        function _n(t, e, r) {
            var i = t.samples.length;
            if (i) {
                for (var n = t.inputTimeScale, a = 0; a < i; a++) {
                    var s = t.samples[a];
                    s.pts = wn(s.pts - r.baseTime * n / r.timescale, e * n) / n
                }
                t.samples.sort((function(t, e) {
                    return t.pts - e.pts
                }
                ));
                var o = t.samples;
                return t.samples = [],
                {
                    samples: o
                }
            }
        }
        var xn, Pn = function(t, e, r, i) {
            this.size = void 0,
            this.duration = void 0,
            this.cts = void 0,
            this.flags = void 0,
            this.duration = e,
            this.size = r,
            this.cts = i,
            this.flags = {
                isLeading: 0,
                isDependedOn: 0,
                hasRedundancy: 0,
                degradPrio: 0,
                dependsOn: t ? 2 : 1,
                isNonSync: t ? 0 : 1
            }
        }, Fn = function() {
            function t() {
                this.emitInitSegment = !1,
                this.audioCodec = void 0,
                this.videoCodec = void 0,
                this.initData = void 0,
                this.initPTS = null,
                this.initTracks = void 0,
                this.lastEndTime = null
            }
            var e = t.prototype;
            return e.destroy = function() {}
            ,
            e.resetTimeStamp = function(t) {
                this.initPTS = t,
                this.lastEndTime = null
            }
            ,
            e.resetNextTimestamp = function() {
                this.lastEndTime = null
            }
            ,
            e.resetInitSegment = function(t, e, r, i) {
                this.audioCodec = e,
                this.videoCodec = r,
                this.generateInitSegment(function(t, e) {
                    if (!t || !e)
                        return t;
                    var r = e.keyId;
                    return r && e.isCommonEncryption && Ot(t, ["moov", "trak"]).forEach((function(t) {
                        var e = Ot(t, ["mdia", "minf", "stbl", "stsd"])[0].subarray(8)
                          , i = Ot(e, ["enca"])
                          , n = i.length > 0;
                        n || (i = Ot(e, ["encv"])),
                        i.forEach((function(t) {
                            Ot(n ? t.subarray(28) : t.subarray(78), ["sinf"]).forEach((function(t) {
                                var e = Vt(t);
                                if (e) {
                                    var i = e.subarray(8, 24);
                                    i.some((function(t) {
                                        return 0 !== t
                                    }
                                    )) || (w.log("[eme] Patching keyId in 'enc" + (n ? "a" : "v") + ">sinf>>tenc' box: " + kt.hexDump(i) + " -> " + kt.hexDump(r)),
                                    e.set(r, 8))
                                }
                            }
                            ))
                        }
                        ))
                    }
                    )),
                    t
                }(t, i)),
                this.emitInitSegment = !0
            }
            ,
            e.generateInitSegment = function(t) {
                var e = this.audioCodec
                  , r = this.videoCodec;
                if (null == t || !t.byteLength)
                    return this.initTracks = void 0,
                    void (this.initData = void 0);
                var i = this.initData = Ut(t);
                i.audio && (e = Mn(i.audio, O)),
                i.video && (r = Mn(i.video, N));
                var n = {};
                i.audio && i.video ? n.audiovideo = {
                    container: "video/mp4",
                    codec: e + "," + r,
                    initSegment: t,
                    id: "main"
                } : i.audio ? n.audio = {
                    container: "audio/mp4",
                    codec: e,
                    initSegment: t,
                    id: "audio"
                } : i.video ? n.video = {
                    container: "video/mp4",
                    codec: r,
                    initSegment: t,
                    id: "main"
                } : w.warn("[passthrough-remuxer.ts]: initSegment does not contain moov or trak boxes."),
                this.initTracks = n
            }
            ,
            e.remux = function(t, e, r, i, n, a) {
                var s, o, l = this.initPTS, u = this.lastEndTime, h = {
                    audio: void 0,
                    video: void 0,
                    text: i,
                    id3: r,
                    initSegment: void 0
                };
                y(u) || (u = this.lastEndTime = n || 0);
                var d = e.samples;
                if (null == d || !d.length)
                    return h;
                var c = {
                    initPTS: void 0,
                    timescale: 1
                }
                  , f = this.initData;
                if (null != (s = f) && s.length || (this.generateInitSegment(d),
                f = this.initData),
                null == (o = f) || !o.length)
                    return w.warn("[passthrough-remuxer.ts]: Failed to generate initSegment."),
                    h;
                this.emitInitSegment && (c.tracks = this.initTracks,
                this.emitInitSegment = !1);
                var g = function(t, e) {
                    for (var r = 0, i = 0, n = 0, a = Ot(t, ["moof", "traf"]), s = 0; s < a.length; s++) {
                        var o = a[s]
                          , l = Ot(o, ["tfhd"])[0]
                          , u = e[xt(l, 4)];
                        if (u) {
                            var h = u.default
                              , d = xt(l, 0) | (null == h ? void 0 : h.flags)
                              , c = null == h ? void 0 : h.duration;
                            8 & d && (c = xt(l, 2 & d ? 12 : 8));
                            for (var f = u.timescale || 9e4, g = Ot(o, ["trun"]), v = 0; v < g.length; v++)
                                !(r = Yt(g[v])) && c && (r = c * xt(g[v], 4)),
                                u.type === N ? i += r / f : u.type === O && (n += r / f)
                        }
                    }
                    if (0 === i && 0 === n) {
                        for (var m = 1 / 0, p = 0, E = 0, T = Ot(t, ["sidx"]), S = 0; S < T.length; S++) {
                            var L = Nt(T[S]);
                            if (null != L && L.references) {
                                m = Math.min(m, L.earliestPresentationTime / L.timescale);
                                var A = L.references.reduce((function(t, e) {
                                    return t + e.info.duration || 0
                                }
                                ), 0);
                                E = (p = Math.max(p, A + L.earliestPresentationTime / L.timescale)) - m
                            }
                        }
                        if (E && y(E))
                            return E
                    }
                    return i || n
                }(d, f)
                  , v = function(t, e) {
                    return Ot(e, ["moof", "traf"]).reduce((function(e, r) {
                        var i = Ot(r, ["tfdt"])[0]
                          , n = i[0]
                          , a = Ot(r, ["tfhd"]).reduce((function(e, r) {
                            var a = xt(r, 4)
                              , s = t[a];
                            if (s) {
                                var o = xt(i, 4);
                                if (1 === n) {
                                    if (o === Dt)
                                        return w.warn("[mp4-demuxer]: Ignoring assumed invalid signed 64-bit track fragment decode time"),
                                        e;
                                    o *= Dt + 1,
                                    o += xt(i, 8)
                                }
                                var l = o / (s.timescale || 9e4);
                                if (y(l) && (null === e || l < e))
                                    return l
                            }
                            return e
                        }
                        ), null);
                        return null !== a && y(a) && (null === e || a < e) ? a : e
                    }
                    ), null)
                }(f, d)
                  , m = null === v ? n : v;
                (function(t, e, r, i) {
                    if (null === t)
                        return !0;
                    var n = Math.max(i, 1)
                      , a = e - t.baseTime / t.timescale;
                    return Math.abs(a - r) > n
                }(l, m, n, g) || c.timescale !== l.timescale && a) && (c.initPTS = m - n,
                l && 1 === l.timescale && w.warn("Adjusting initPTS by " + (c.initPTS - l.baseTime)),
                this.initPTS = l = {
                    baseTime: c.initPTS,
                    timescale: 1
                });
                var p = t ? m - l.baseTime / l.timescale : u
                  , E = p + g;
                !function(t, e, r) {
                    Ot(e, ["moof", "traf"]).forEach((function(e) {
                        Ot(e, ["tfhd"]).forEach((function(i) {
                            var n = xt(i, 4)
                              , a = t[n];
                            if (a) {
                                var s = a.timescale || 9e4;
                                Ot(e, ["tfdt"]).forEach((function(t) {
                                    var e = t[0]
                                      , i = r * s;
                                    if (i) {
                                        var n = xt(t, 4);
                                        if (0 === e)
                                            n -= i,
                                            Mt(t, 4, n = Math.max(n, 0));
                                        else {
                                            n *= Math.pow(2, 32),
                                            n += xt(t, 8),
                                            n -= i,
                                            n = Math.max(n, 0);
                                            var a = Math.floor(n / (Dt + 1))
                                              , o = Math.floor(n % (Dt + 1));
                                            Mt(t, 4, a),
                                            Mt(t, 8, o)
                                        }
                                    }
                                }
                                ))
                            }
                        }
                        ))
                    }
                    ))
                }(f, d, l.baseTime / l.timescale),
                g > 0 ? this.lastEndTime = E : (w.warn("Duration parsed from mp4 should be greater than zero"),
                this.resetNextTimestamp());
                var T = !!f.audio
                  , S = !!f.video
                  , L = "";
                T && (L += "audio"),
                S && (L += "video");
                var A = {
                    data1: d,
                    startPTS: p,
                    startDTS: p,
                    endPTS: E,
                    endDTS: E,
                    type: L,
                    hasAudio: T,
                    hasVideo: S,
                    nb: 1,
                    dropped: 0
                };
                return h.audio = "audio" === A.type ? A : void 0,
                h.video = "audio" !== A.type ? A : void 0,
                h.initSegment = c,
                h.id3 = Cn(r, n, l, l),
                i.samples.length && (h.text = _n(i, n, l)),
                h
            }
            ,
            t
        }();
        function Mn(t, e) {
            var r = null == t ? void 0 : t.codec;
            if (r && r.length > 4)
                return r;
            if (e === O) {
                if ("ec-3" === r || "ac-3" === r || "alac" === r)
                    return r;
                if ("fLaC" === r || "Opus" === r)
                    return ve(r, !1);
                var i = "mp4a.40.5";
                return w.info('Parsed audio codec "' + r + '" or audio object type not handled. Using "' + i + '"'),
                i
            }
            return w.warn('Unhandled video codec "' + r + '"'),
            "hvc1" === r || "hev1" === r ? "hvc1.1.6.L120.90" : "av01" === r ? "av01.0.04M.08" : "avc1.42e01e"
        }
        try {
            xn = self.performance.now.bind(self.performance)
        } catch (t) {
            w.debug("Unable to use Performance API on this environment"),
            xn = null == j ? void 0 : j.Date.now
        }
        var On = [{
            demux: rn,
            remux: Fn
        }, {
            demux: cn,
            remux: In
        }, {
            demux: tn,
            remux: In
        }, {
            demux: En,
            remux: In
        }];
        On.splice(2, 0, {
            demux: an,
            remux: In
        });
        var Nn = function() {
            function t(t, e, r, i, n) {
                this.async = !1,
                this.observer = void 0,
                this.typeSupported = void 0,
                this.config = void 0,
                this.vendor = void 0,
                this.id = void 0,
                this.demuxer = void 0,
                this.remuxer = void 0,
                this.decrypter = void 0,
                this.probe = void 0,
                this.decryptionPromise = null,
                this.transmuxConfig = void 0,
                this.currentTransmuxState = void 0,
                this.observer = t,
                this.typeSupported = e,
                this.config = r,
                this.vendor = i,
                this.id = n
            }
            var e = t.prototype;
            return e.configure = function(t) {
                this.transmuxConfig = t,
                this.decrypter && this.decrypter.reset()
            }
            ,
            e.push = function(t, e, r, i) {
                var n = this
                  , a = r.transmuxing;
                a.executeStart = xn();
                var s = new Uint8Array(t)
                  , o = this.currentTransmuxState
                  , l = this.transmuxConfig;
                i && (this.currentTransmuxState = i);
                var u = i || o
                  , h = u.contiguous
                  , d = u.discontinuity
                  , c = u.trackSwitch
                  , f = u.accurateTimeOffset
                  , g = u.timeOffset
                  , v = u.initSegmentChange
                  , m = l.audioCodec
                  , p = l.videoCodec
                  , y = l.defaultInitPts
                  , E = l.duration
                  , T = l.initSegmentData
                  , R = function(t, e) {
                    var r = null;
                    return t.byteLength > 0 && null != (null == e ? void 0 : e.key) && null !== e.iv && null != e.method && (r = e),
                    r
                }(s, e);
                if (R && "AES-128" === R.method) {
                    var b = this.getDecrypter();
                    if (!b.isSync())
                        return this.decryptionPromise = b.webCryptoDecrypt(s, R.key.buffer, R.iv.buffer).then((function(t) {
                            var e = n.push(t, null, r);
                            return n.decryptionPromise = null,
                            e
                        }
                        )),
                        this.decryptionPromise;
                    var k = b.softwareDecrypt(s, R.key.buffer, R.iv.buffer);
                    if (r.part > -1 && (k = b.flush()),
                    !k)
                        return a.executeEnd = xn(),
                        Un(r);
                    s = new Uint8Array(k)
                }
                var D = this.needsProbing(d, c);
                if (D) {
                    var I = this.configureTransmuxer(s);
                    if (I)
                        return w.warn("[transmuxer] " + I.message),
                        this.observer.emit(S.ERROR, S.ERROR, {
                            type: L.MEDIA_ERROR,
                            details: A.FRAG_PARSING_ERROR,
                            fatal: !1,
                            error: I,
                            reason: I.message
                        }),
                        a.executeEnd = xn(),
                        Un(r)
                }
                (d || c || v || D) && this.resetInitSegment(T, m, p, E, e),
                (d || v || D) && this.resetInitialTimestamp(y),
                h || this.resetContiguity();
                var C = this.transmux(s, R, g, f, r)
                  , _ = this.currentTransmuxState;
                return _.contiguous = !0,
                _.discontinuity = !1,
                _.trackSwitch = !1,
                a.executeEnd = xn(),
                C
            }
            ,
            e.flush = function(t) {
                var e = this
                  , r = t.transmuxing;
                r.executeStart = xn();
                var i = this.decrypter
                  , n = this.currentTransmuxState
                  , a = this.decryptionPromise;
                if (a)
                    return a.then((function() {
                        return e.flush(t)
                    }
                    ));
                var s = []
                  , o = n.timeOffset;
                if (i) {
                    var l = i.flush();
                    l && s.push(this.push(l, null, t))
                }
                var u = this.demuxer
                  , h = this.remuxer;
                if (!u || !h)
                    return r.executeEnd = xn(),
                    [Un(t)];
                var d = u.flush(o);
                return Bn(d) ? d.then((function(r) {
                    return e.flushRemux(s, r, t),
                    s
                }
                )) : (this.flushRemux(s, d, t),
                s)
            }
            ,
            e.flushRemux = function(t, e, r) {
                var i = e.audioTrack
                  , n = e.videoTrack
                  , a = e.id3Track
                  , s = e.textTrack
                  , o = this.currentTransmuxState
                  , l = o.accurateTimeOffset
                  , u = o.timeOffset;
                w.log("[transmuxer.ts]: Flushed fragment " + r.sn + (r.part > -1 ? " p: " + r.part : "") + " of level " + r.level);
                var h = this.remuxer.remux(i, n, a, s, u, l, !0, this.id);
                t.push({
                    remuxResult: h,
                    chunkMeta: r
                }),
                r.transmuxing.executeEnd = xn()
            }
            ,
            e.resetInitialTimestamp = function(t) {
                var e = this.demuxer
                  , r = this.remuxer;
                e && r && (e.resetTimeStamp(t),
                r.resetTimeStamp(t))
            }
            ,
            e.resetContiguity = function() {
                var t = this.demuxer
                  , e = this.remuxer;
                t && e && (t.resetContiguity(),
                e.resetNextTimestamp())
            }
            ,
            e.resetInitSegment = function(t, e, r, i, n) {
                var a = this.demuxer
                  , s = this.remuxer;
                a && s && (a.resetInitSegment(t, e, r, i),
                s.resetInitSegment(t, e, r, n))
            }
            ,
            e.destroy = function() {
                this.demuxer && (this.demuxer.destroy(),
                this.demuxer = void 0),
                this.remuxer && (this.remuxer.destroy(),
                this.remuxer = void 0)
            }
            ,
            e.transmux = function(t, e, r, i, n) {
                return e && "SAMPLE-AES" === e.method ? this.transmuxSampleAes(t, e, r, i, n) : this.transmuxUnencrypted(t, r, i, n)
            }
            ,
            e.transmuxUnencrypted = function(t, e, r, i) {
                var n = this.demuxer.demux(t, e, !1, !this.config.progressive)
                  , a = n.audioTrack
                  , s = n.videoTrack
                  , o = n.id3Track
                  , l = n.textTrack;
                return {
                    remuxResult: this.remuxer.remux(a, s, o, l, e, r, !1, this.id),
                    chunkMeta: i
                }
            }
            ,
            e.transmuxSampleAes = function(t, e, r, i, n) {
                var a = this;
                return this.demuxer.demuxSampleAes(t, e, r).then((function(t) {
                    return {
                        remuxResult: a.remuxer.remux(t.audioTrack, t.videoTrack, t.id3Track, t.textTrack, r, i, !1, a.id),
                        chunkMeta: n
                    }
                }
                ))
            }
            ,
            e.configureTransmuxer = function(t) {
                for (var e, r = this.config, i = this.observer, n = this.typeSupported, a = this.vendor, s = 0, o = On.length; s < o; s++) {
                    var l;
                    if (null != (l = On[s].demux) && l.probe(t)) {
                        e = On[s];
                        break
                    }
                }
                if (!e)
                    return new Error("Failed to find demuxer by probing fragment data");
                var u = this.demuxer
                  , h = this.remuxer
                  , d = e.remux
                  , c = e.demux;
                h && h instanceof d || (this.remuxer = new d(i,r,n,a)),
                u && u instanceof c || (this.demuxer = new c(i,r,n),
                this.probe = c.probe)
            }
            ,
            e.needsProbing = function(t, e) {
                return !this.demuxer || !this.remuxer || t || e
            }
            ,
            e.getDecrypter = function() {
                var t = this.decrypter;
                return t || (t = this.decrypter = new pi(this.config)),
                t
            }
            ,
            t
        }()
          , Un = function(t) {
            return {
                remuxResult: {},
                chunkMeta: t
            }
        };
        function Bn(t) {
            return "then"in t && t.then instanceof Function
        }
        var Gn = function(t, e, r, i, n) {
            this.audioCodec = void 0,
            this.videoCodec = void 0,
            this.initSegmentData = void 0,
            this.duration = void 0,
            this.defaultInitPts = void 0,
            this.audioCodec = t,
            this.videoCodec = e,
            this.initSegmentData = r,
            this.duration = i,
            this.defaultInitPts = n || null
        }
          , Kn = function(t, e, r, i, n, a) {
            this.discontinuity = void 0,
            this.contiguous = void 0,
            this.accurateTimeOffset = void 0,
            this.trackSwitch = void 0,
            this.timeOffset = void 0,
            this.initSegmentChange = void 0,
            this.discontinuity = t,
            this.contiguous = e,
            this.accurateTimeOffset = r,
            this.trackSwitch = i,
            this.timeOffset = n,
            this.initSegmentChange = a
        }
          , Hn = {
            exports: {}
        };
        !function(t) {
            var e = Object.prototype.hasOwnProperty
              , r = "~";
            function i() {}
            function n(t, e, r) {
                this.fn = t,
                this.context = e,
                this.once = r || !1
            }
            function a(t, e, i, a, s) {
                if ("function" != typeof i)
                    throw new TypeError("The listener must be a function");
                var o = new n(i,a || t,s)
                  , l = r ? r + e : e;
                return t._events[l] ? t._events[l].fn ? t._events[l] = [t._events[l], o] : t._events[l].push(o) : (t._events[l] = o,
                t._eventsCount++),
                t
            }
            function s(t, e) {
                0 == --t._eventsCount ? t._events = new i : delete t._events[e]
            }
            function o() {
                this._events = new i,
                this._eventsCount = 0
            }
            Object.create && (i.prototype = Object.create(null),
            (new i).__proto__ || (r = !1)),
            o.prototype.eventNames = function() {
                var t, i, n = [];
                if (0 === this._eventsCount)
                    return n;
                for (i in t = this._events)
                    e.call(t, i) && n.push(r ? i.slice(1) : i);
                return Object.getOwnPropertySymbols ? n.concat(Object.getOwnPropertySymbols(t)) : n
            }
            ,
            o.prototype.listeners = function(t) {
                var e = r ? r + t : t
                  , i = this._events[e];
                if (!i)
                    return [];
                if (i.fn)
                    return [i.fn];
                for (var n = 0, a = i.length, s = new Array(a); n < a; n++)
                    s[n] = i[n].fn;
                return s
            }
            ,
            o.prototype.listenerCount = function(t) {
                var e = r ? r + t : t
                  , i = this._events[e];
                return i ? i.fn ? 1 : i.length : 0
            }
            ,
            o.prototype.emit = function(t, e, i, n, a, s) {
                var o = r ? r + t : t;
                if (!this._events[o])
                    return !1;
                var l, u, h = this._events[o], d = arguments.length;
                if (h.fn) {
                    switch (h.once && this.removeListener(t, h.fn, void 0, !0),
                    d) {
                    case 1:
                        return h.fn.call(h.context),
                        !0;
                    case 2:
                        return h.fn.call(h.context, e),
                        !0;
                    case 3:
                        return h.fn.call(h.context, e, i),
                        !0;
                    case 4:
                        return h.fn.call(h.context, e, i, n),
                        !0;
                    case 5:
                        return h.fn.call(h.context, e, i, n, a),
                        !0;
                    case 6:
                        return h.fn.call(h.context, e, i, n, a, s),
                        !0
                    }
                    for (u = 1,
                    l = new Array(d - 1); u < d; u++)
                        l[u - 1] = arguments[u];
                    h.fn.apply(h.context, l)
                } else {
                    var c, f = h.length;
                    for (u = 0; u < f; u++)
                        switch (h[u].once && this.removeListener(t, h[u].fn, void 0, !0),
                        d) {
                        case 1:
                            h[u].fn.call(h[u].context);
                            break;
                        case 2:
                            h[u].fn.call(h[u].context, e);
                            break;
                        case 3:
                            h[u].fn.call(h[u].context, e, i);
                            break;
                        case 4:
                            h[u].fn.call(h[u].context, e, i, n);
                            break;
                        default:
                            if (!l)
                                for (c = 1,
                                l = new Array(d - 1); c < d; c++)
                                    l[c - 1] = arguments[c];
                            h[u].fn.apply(h[u].context, l)
                        }
                }
                return !0
            }
            ,
            o.prototype.on = function(t, e, r) {
                return a(this, t, e, r, !1)
            }
            ,
            o.prototype.once = function(t, e, r) {
                return a(this, t, e, r, !0)
            }
            ,
            o.prototype.removeListener = function(t, e, i, n) {
                var a = r ? r + t : t;
                if (!this._events[a])
                    return this;
                if (!e)
                    return s(this, a),
                    this;
                var o = this._events[a];
                if (o.fn)
                    o.fn !== e || n && !o.once || i && o.context !== i || s(this, a);
                else {
                    for (var l = 0, u = [], h = o.length; l < h; l++)
                        (o[l].fn !== e || n && !o[l].once || i && o[l].context !== i) && u.push(o[l]);
                    u.length ? this._events[a] = 1 === u.length ? u[0] : u : s(this, a)
                }
                return this
            }
            ,
            o.prototype.removeAllListeners = function(t) {
                var e;
                return t ? (e = r ? r + t : t,
                this._events[e] && s(this, e)) : (this._events = new i,
                this._eventsCount = 0),
                this
            }
            ,
            o.prototype.off = o.prototype.removeListener,
            o.prototype.addListener = o.prototype.on,
            o.prefixed = r,
            o.EventEmitter = o,
            t.exports = o
        }(Hn);
        var Vn = v(Hn.exports);
        function Yn(t, e) {
            if (!((r = e.remuxResult).audio || r.video || r.text || r.id3 || r.initSegment))
                return !1;
            var r, i = [], n = e.remuxResult, a = n.audio, s = n.video;
            return a && Wn(i, a),
            s && Wn(i, s),
            t.postMessage({
                event: "transmuxComplete",
                data: e
            }, i),
            !0
        }
        function Wn(t, e) {
            e.data1 && t.push(e.data1.buffer),
            e.data2 && t.push(e.data2.buffer)
        }
        function jn(t, e, r) {
            e.reduce((function(e, r) {
                return Yn(t, r) || e
            }
            ), !1) || t.postMessage({
                event: "transmuxComplete",
                data: e[0]
            }),
            t.postMessage({
                event: "flush",
                data: r
            })
        }
        void 0 !== e && e && function(t) {
            var e = new Vn
              , r = function(e, r) {
                t.postMessage({
                    event: e,
                    data: r
                })
            };
            e.on(S.FRAG_DECRYPTED, r),
            e.on(S.ERROR, r);
            var i = function() {
                var t = function(t) {
                    var e = function(e) {
                        r("workerLog", {
                            logType: t,
                            message: e
                        })
                    };
                    w[t] = e
                };
                for (var e in w)
                    t(e)
            };
            t.addEventListener("message", (function(n) {
                var a = n.data;
                switch (a.cmd) {
                case "init":
                    var s = JSON.parse(a.config);
                    t.transmuxer = new Nn(e,a.typeSupported,s,"",a.id),
                    I(s.debug, a.id),
                    i(),
                    r("init", null);
                    break;
                case "configure":
                    t.transmuxer.configure(a.config);
                    break;
                case "demux":
                    var o = t.transmuxer.push(a.data, a.decryptdata, a.chunkMeta, a.state);
                    Bn(o) ? (t.transmuxer.async = !0,
                    o.then((function(e) {
                        Yn(t, e)
                    }
                    )).catch((function(t) {
                        r(S.ERROR, {
                            type: L.MEDIA_ERROR,
                            details: A.FRAG_PARSING_ERROR,
                            chunkMeta: a.chunkMeta,
                            fatal: !1,
                            error: t,
                            err: t,
                            reason: "transmuxer-worker push error"
                        })
                    }
                    ))) : (t.transmuxer.async = !1,
                    Yn(t, o));
                    break;
                case "flush":
                    var l = a.chunkMeta
                      , u = t.transmuxer.flush(l);
                    Bn(u) || t.transmuxer.async ? (Bn(u) || (u = Promise.resolve(u)),
                    u.then((function(e) {
                        jn(t, e, l)
                    }
                    )).catch((function(t) {
                        r(S.ERROR, {
                            type: L.MEDIA_ERROR,
                            details: A.FRAG_PARSING_ERROR,
                            chunkMeta: a.chunkMeta,
                            fatal: !1,
                            error: t,
                            err: t,
                            reason: "transmuxer-worker flush error"
                        })
                    }
                    ))) : jn(t, u, l)
                }
            }
            ))
        }(self);
        var qn = function() {
            function e(e, r, i, n) {
                var a = this;
                this.error = null,
                this.hls = void 0,
                this.id = void 0,
                this.observer = void 0,
                this.frag = null,
                this.part = null,
                this.useWorker = void 0,
                this.workerContext = null,
                this.onwmsg = void 0,
                this.transmuxer = null,
                this.onTransmuxComplete = void 0,
                this.onFlush = void 0;
                var s = e.config;
                this.hls = e,
                this.id = r,
                this.useWorker = !!s.enableWorker,
                this.onTransmuxComplete = i,
                this.onFlush = n;
                var o = function(t, e) {
                    (e = e || {}).frag = a.frag,
                    e.id = a.id,
                    t === S.ERROR && (a.error = e.error),
                    a.hls.trigger(t, e)
                };
                this.observer = new Vn,
                this.observer.on(S.FRAG_DECRYPTED, o),
                this.observer.on(S.ERROR, o);
                var l, u, h, d, c = se(s.preferManagedMediaSource) || {
                    isTypeSupported: function() {
                        return !1
                    }
                }, f = {
                    mpeg: c.isTypeSupported("audio/mpeg"),
                    mp3: c.isTypeSupported('audio/mp4; codecs="mp3"'),
                    ac3: c.isTypeSupported('audio/mp4; codecs="ac-3"')
                };
                if (!this.useWorker || "undefined" == typeof Worker || (s.workerPath,
                0))
                    this.transmuxer = new Nn(this.observer,f,s,"",r);
                else
                    try {
                        s.workerPath ? (w.log("loading Web Worker " + s.workerPath + ' for "' + r + '"'),
                        this.workerContext = (h = s.workerPath,
                        d = new self.URL(h,self.location.href).href,
                        {
                            worker: new self.Worker(d),
                            scriptURL: d
                        })) : (w.log('injecting Web Worker for "' + r + '"'),
                        this.workerContext = (l = new self.Blob(["var exports={};var module={exports:exports};function define(f){f()};define.amd=true;(" + t.toString() + ")(true);"],{
                            type: "text/javascript"
                        }),
                        u = self.URL.createObjectURL(l),
                        {
                            worker: new self.Worker(u),
                            objectURL: u
                        })),
                        this.onwmsg = function(t) {
                            return a.onWorkerMessage(t)
                        }
                        ;
                        var g = this.workerContext.worker;
                        g.addEventListener("message", this.onwmsg),
                        g.onerror = function(t) {
                            var e = new Error(t.message + "  (" + t.filename + ":" + t.lineno + ")");
                            s.enableWorker = !1,
                            w.warn('Error in "' + r + '" Web Worker, fallback to inline'),
                            a.hls.trigger(S.ERROR, {
                                type: L.OTHER_ERROR,
                                details: A.INTERNAL_EXCEPTION,
                                fatal: !1,
                                event: "demuxerWorker",
                                error: e
                            })
                        }
                        ,
                        g.postMessage({
                            cmd: "init",
                            typeSupported: f,
                            vendor: "",
                            id: r,
                            config: JSON.stringify(s)
                        })
                    } catch (t) {
                        w.warn('Error setting up "' + r + '" Web Worker, fallback to inline', t),
                        this.resetWorker(),
                        this.error = null,
                        this.transmuxer = new Nn(this.observer,f,s,"",r)
                    }
            }
            var r = e.prototype;
            return r.resetWorker = function() {
                if (this.workerContext) {
                    var t = this.workerContext
                      , e = t.worker
                      , r = t.objectURL;
                    r && self.URL.revokeObjectURL(r),
                    e.removeEventListener("message", this.onwmsg),
                    e.onerror = null,
                    e.terminate(),
                    this.workerContext = null
                }
            }
            ,
            r.destroy = function() {
                if (this.workerContext)
                    this.resetWorker(),
                    this.onwmsg = void 0;
                else {
                    var t = this.transmuxer;
                    t && (t.destroy(),
                    this.transmuxer = null)
                }
                var e = this.observer;
                e && e.removeAllListeners(),
                this.frag = null,
                this.observer = null,
                this.hls = null
            }
            ,
            r.push = function(t, e, r, i, n, a, s, o, l, u) {
                var h, d, c = this;
                l.transmuxing.start = self.performance.now();
                var f = this.transmuxer
                  , g = a ? a.start : n.start
                  , v = n.decryptdata
                  , m = this.frag
                  , p = !(m && n.cc === m.cc)
                  , y = !(m && l.level === m.level)
                  , E = m ? l.sn - m.sn : -1
                  , T = this.part ? l.part - this.part.index : -1
                  , S = 0 === E && l.id > 1 && l.id === (null == m ? void 0 : m.stats.chunkCount)
                  , L = !y && (1 === E || 0 === E && (1 === T || S && T <= 0))
                  , A = self.performance.now();
                (y || E || 0 === n.stats.parsing.start) && (n.stats.parsing.start = A),
                !a || !T && L || (a.stats.parsing.start = A);
                var R = !(m && (null == (h = n.initSegment) ? void 0 : h.url) === (null == (d = m.initSegment) ? void 0 : d.url))
                  , b = new Kn(p,L,o,y,g,R);
                if (!L || p || R) {
                    w.log("[transmuxer-interface, " + n.type + "]: Starting new transmux session for sn: " + l.sn + " p: " + l.part + " level: " + l.level + " id: " + l.id + "\n        discontinuity: " + p + "\n        trackSwitch: " + y + "\n        contiguous: " + L + "\n        accurateTimeOffset: " + o + "\n        timeOffset: " + g + "\n        initSegmentChange: " + R);
                    var k = new Gn(r,i,e,s,u);
                    this.configureTransmuxer(k)
                }
                if (this.frag = n,
                this.part = a,
                this.workerContext)
                    this.workerContext.worker.postMessage({
                        cmd: "demux",
                        data: t,
                        decryptdata: v,
                        chunkMeta: l,
                        state: b
                    }, t instanceof ArrayBuffer ? [t] : []);
                else if (f) {
                    var D = f.push(t, v, l, b);
                    Bn(D) ? (f.async = !0,
                    D.then((function(t) {
                        c.handleTransmuxComplete(t)
                    }
                    )).catch((function(t) {
                        c.transmuxerError(t, l, "transmuxer-interface push error")
                    }
                    ))) : (f.async = !1,
                    this.handleTransmuxComplete(D))
                }
            }
            ,
            r.flush = function(t) {
                var e = this;
                t.transmuxing.start = self.performance.now();
                var r = this.transmuxer;
                if (this.workerContext)
                    this.workerContext.worker.postMessage({
                        cmd: "flush",
                        chunkMeta: t
                    });
                else if (r) {
                    var i = r.flush(t);
                    Bn(i) || r.async ? (Bn(i) || (i = Promise.resolve(i)),
                    i.then((function(r) {
                        e.handleFlushResult(r, t)
                    }
                    )).catch((function(r) {
                        e.transmuxerError(r, t, "transmuxer-interface flush error")
                    }
                    ))) : this.handleFlushResult(i, t)
                }
            }
            ,
            r.transmuxerError = function(t, e, r) {
                this.hls && (this.error = t,
                this.hls.trigger(S.ERROR, {
                    type: L.MEDIA_ERROR,
                    details: A.FRAG_PARSING_ERROR,
                    chunkMeta: e,
                    frag: this.frag || void 0,
                    fatal: !1,
                    error: t,
                    err: t,
                    reason: r
                }))
            }
            ,
            r.handleFlushResult = function(t, e) {
                var r = this;
                t.forEach((function(t) {
                    r.handleTransmuxComplete(t)
                }
                )),
                this.onFlush(e)
            }
            ,
            r.onWorkerMessage = function(t) {
                var e = t.data;
                if (null != e && e.event) {
                    var r = this.hls;
                    if (this.hls)
                        switch (e.event) {
                        case "init":
                            var i, n = null == (i = this.workerContext) ? void 0 : i.objectURL;
                            n && self.URL.revokeObjectURL(n);
                            break;
                        case "transmuxComplete":
                            this.handleTransmuxComplete(e.data);
                            break;
                        case "flush":
                            this.onFlush(e.data);
                            break;
                        case "workerLog":
                            w[e.data.logType] && w[e.data.logType](e.data.message);
                            break;
                        default:
                            e.data = e.data || {},
                            e.data.frag = this.frag,
                            e.data.id = this.id,
                            r.trigger(e.event, e.data)
                        }
                } else
                    w.warn("worker message received with no " + (e ? "event name" : "data"))
            }
            ,
            r.configureTransmuxer = function(t) {
                var e = this.transmuxer;
                this.workerContext ? this.workerContext.worker.postMessage({
                    cmd: "configure",
                    config: t
                }) : e && e.configure(t)
            }
            ,
            r.handleTransmuxComplete = function(t) {
                t.chunkMeta.transmuxing.end = self.performance.now(),
                this.onTransmuxComplete(t)
            }
            ,
            e
        }();
        function Xn(t, e) {
            if (t.length !== e.length)
                return !1;
            for (var r = 0; r < t.length; r++)
                if (!zn(t[r].attrs, e[r].attrs))
                    return !1;
            return !0
        }
        function zn(t, e, r) {
            var i = t["STABLE-RENDITION-ID"];
            return i && !r ? i === e["STABLE-RENDITION-ID"] : !(r || ["LANGUAGE", "NAME", "CHARACTERISTICS", "AUTOSELECT", "DEFAULT", "FORCED", "ASSOC-LANGUAGE"]).some((function(r) {
                return t[r] !== e[r]
            }
            ))
        }
        function Qn(t, e) {
            return e.label.toLowerCase() === t.name.toLowerCase() && (!e.language || e.language.toLowerCase() === (t.lang || "").toLowerCase())
        }
        var Jn = function(t) {
            function e(e, r, i) {
                var n;
                return (n = t.call(this, e, r, i, "[audio-stream-controller]", Me) || this).videoBuffer = null,
                n.videoTrackCC = -1,
                n.waitingVideoCC = -1,
                n.bufferedTrack = null,
                n.switchingTrack = null,
                n.trackId = -1,
                n.waitingData = null,
                n.mainDetails = null,
                n.flushing = !1,
                n.bufferFlushed = !1,
                n.cachedTrackLoadedData = null,
                n._registerListeners(),
                n
            }
            l(e, t);
            var r = e.prototype;
            return r.onHandlerDestroying = function() {
                this._unregisterListeners(),
                t.prototype.onHandlerDestroying.call(this),
                this.mainDetails = null,
                this.bufferedTrack = null,
                this.switchingTrack = null
            }
            ,
            r._registerListeners = function() {
                var t = this.hls;
                t.on(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.on(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.LEVEL_LOADED, this.onLevelLoaded, this),
                t.on(S.AUDIO_TRACKS_UPDATED, this.onAudioTracksUpdated, this),
                t.on(S.AUDIO_TRACK_SWITCHING, this.onAudioTrackSwitching, this),
                t.on(S.AUDIO_TRACK_LOADED, this.onAudioTrackLoaded, this),
                t.on(S.ERROR, this.onError, this),
                t.on(S.BUFFER_RESET, this.onBufferReset, this),
                t.on(S.BUFFER_CREATED, this.onBufferCreated, this),
                t.on(S.BUFFER_FLUSHING, this.onBufferFlushing, this),
                t.on(S.BUFFER_FLUSHED, this.onBufferFlushed, this),
                t.on(S.INIT_PTS_FOUND, this.onInitPtsFound, this),
                t.on(S.FRAG_BUFFERED, this.onFragBuffered, this)
            }
            ,
            r._unregisterListeners = function() {
                var t = this.hls;
                t.off(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.off(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.LEVEL_LOADED, this.onLevelLoaded, this),
                t.off(S.AUDIO_TRACKS_UPDATED, this.onAudioTracksUpdated, this),
                t.off(S.AUDIO_TRACK_SWITCHING, this.onAudioTrackSwitching, this),
                t.off(S.AUDIO_TRACK_LOADED, this.onAudioTrackLoaded, this),
                t.off(S.ERROR, this.onError, this),
                t.off(S.BUFFER_RESET, this.onBufferReset, this),
                t.off(S.BUFFER_CREATED, this.onBufferCreated, this),
                t.off(S.BUFFER_FLUSHING, this.onBufferFlushing, this),
                t.off(S.BUFFER_FLUSHED, this.onBufferFlushed, this),
                t.off(S.INIT_PTS_FOUND, this.onInitPtsFound, this),
                t.off(S.FRAG_BUFFERED, this.onFragBuffered, this)
            }
            ,
            r.onInitPtsFound = function(t, e) {
                var r = e.frag
                  , i = e.id
                  , n = e.initPTS
                  , a = e.timescale;
                if ("main" === i) {
                    var s = r.cc;
                    this.initPTS[r.cc] = {
                        baseTime: n,
                        timescale: a
                    },
                    this.log("InitPTS for cc: " + s + " found from main: " + n),
                    this.videoTrackCC = s,
                    this.state === wi && this.tick()
                }
            }
            ,
            r.startLoad = function(t) {
                if (!this.levels)
                    return this.startPosition = t,
                    void (this.state = Ei);
                var e = this.lastCurrentTime;
                this.stopLoad(),
                this.setInterval(100),
                e > 0 && -1 === t ? (this.log("Override startPosition with lastCurrentTime @" + e.toFixed(3)),
                t = e,
                this.state = Ti) : (this.loadedmetadata = !1,
                this.state = Ri),
                this.nextLoadPosition = this.startPosition = this.lastCurrentTime = t,
                this.tick()
            }
            ,
            r.doTick = function() {
                switch (this.state) {
                case Ti:
                    this.doTickIdle();
                    break;
                case Ri:
                    var e, r = this.levels, i = this.trackId, n = null == r || null == (e = r[i]) ? void 0 : e.details;
                    if (n) {
                        if (this.waitForCdnTuneIn(n))
                            break;
                        this.state = wi
                    }
                    break;
                case Ai:
                    var a, s = performance.now(), o = this.retryDate;
                    if (!o || s >= o || null != (a = this.media) && a.seeking) {
                        var l = this.levels
                          , u = this.trackId;
                        this.log("RetryDate reached, switch back to IDLE state"),
                        this.resetStartWhenNotLoaded((null == l ? void 0 : l[u]) || null),
                        this.state = Ti
                    }
                    break;
                case wi:
                    var h = this.waitingData;
                    if (h) {
                        var d = h.frag
                          , c = h.part
                          , f = h.cache
                          , g = h.complete;
                        if (void 0 !== this.initPTS[d.cc]) {
                            this.waitingData = null,
                            this.waitingVideoCC = -1,
                            this.state = Li;
                            var v = {
                                frag: d,
                                part: c,
                                payload: f.flush(),
                                networkDetails: null
                            };
                            this._handleFragmentLoadProgress(v),
                            g && t.prototype._handleFragmentLoadComplete.call(this, v)
                        } else if (this.videoTrackCC !== this.waitingVideoCC)
                            this.log("Waiting fragment cc (" + d.cc + ") cancelled because video is at cc " + this.videoTrackCC),
                            this.clearWaitingFragment();
                        else {
                            var m = this.getLoadPosition()
                              , p = ri.bufferInfo(this.mediaBuffer, m, this.config.maxBufferHole);
                            Rr(p.end, this.config.maxFragLookUpTolerance, d) < 0 && (this.log("Waiting fragment cc (" + d.cc + ") @ " + d.start + " cancelled because another fragment at " + p.end + " is needed"),
                            this.clearWaitingFragment())
                        }
                    } else
                        this.state = Ti
                }
                this.onTickEnd()
            }
            ,
            r.clearWaitingFragment = function() {
                var t = this.waitingData;
                t && (this.fragmentTracker.removeFragment(t.frag),
                this.waitingData = null,
                this.waitingVideoCC = -1,
                this.state = Ti)
            }
            ,
            r.resetLoadingState = function() {
                this.clearWaitingFragment(),
                t.prototype.resetLoadingState.call(this)
            }
            ,
            r.onTickEnd = function() {
                var t = this.media;
                null != t && t.readyState && (this.lastCurrentTime = t.currentTime)
            }
            ,
            r.doTickIdle = function() {
                var t = this.hls
                  , e = this.levels
                  , r = this.media
                  , i = this.trackId
                  , n = t.config;
                if ((r || !this.startFragRequested && n.startFragPrefetch) && null != e && e[i]) {
                    var a = e[i]
                      , s = a.details;
                    if (!s || s.live && this.levelLastLoaded !== a || this.waitForCdnTuneIn(s))
                        this.state = Ri;
                    else {
                        var o = this.mediaBuffer ? this.mediaBuffer : this.media;
                        this.bufferFlushed && o && (this.bufferFlushed = !1,
                        this.afterBufferFlushed(o, O, Me));
                        var l = this.getFwdBufferInfo(o, Me);
                        if (null !== l) {
                            var u = this.bufferedTrack
                              , h = this.switchingTrack;
                            if (!h && this._streamEnded(l, s))
                                return t.trigger(S.BUFFER_EOS, {
                                    type: "audio"
                                }),
                                void (this.state = Di);
                            var d = this.getFwdBufferInfo(this.videoBuffer ? this.videoBuffer : this.media, Fe)
                              , c = l.len
                              , f = this.getMaxBufferLength(null == d ? void 0 : d.len)
                              , g = s.fragments
                              , v = g[0].start
                              , m = this.flushing ? this.getLoadPosition() : l.end;
                            if (h && r) {
                                var p = this.getLoadPosition();
                                u && !zn(h.attrs, u.attrs) && (m = p),
                                s.PTSKnown && p < v && (l.end > v || l.nextStart) && (this.log("Alt audio track ahead of main track, seek to start of alt audio track"),
                                r.currentTime = v + .05)
                            }
                            if (!(c >= f && !h && m < g[g.length - 1].start)) {
                                var y = this.getNextFragment(m, s)
                                  , E = !1;
                                if (y && this.isLoopLoading(y, m) && (E = !!y.gap,
                                y = this.getNextFragmentLoopLoading(y, s, l, Fe, f)),
                                y) {
                                    var T = d && y.start > d.end + s.targetduration;
                                    if (T || (null == d || !d.len) && l.len) {
                                        var L = this.getAppendedFrag(y.start, Fe);
                                        if (null === L)
                                            return;
                                        if (E || (E = !!L.gap || !!T && 0 === d.len),
                                        T && !E || E && l.nextStart && l.nextStart < L.end)
                                            return
                                    }
                                    this.loadFragment(y, a, m)
                                } else
                                    this.bufferFlushed = !0
                            }
                        }
                    }
                }
            }
            ,
            r.getMaxBufferLength = function(e) {
                var r = t.prototype.getMaxBufferLength.call(this);
                return e ? Math.min(Math.max(r, e), this.config.maxMaxBufferLength) : r
            }
            ,
            r.onMediaDetaching = function() {
                this.videoBuffer = null,
                this.bufferFlushed = this.flushing = !1,
                t.prototype.onMediaDetaching.call(this)
            }
            ,
            r.onAudioTracksUpdated = function(t, e) {
                var r = e.audioTracks;
                this.resetTransmuxer(),
                this.levels = r.map((function(t) {
                    return new or(t)
                }
                ))
            }
            ,
            r.onAudioTrackSwitching = function(t, e) {
                var r = !!e.url;
                this.trackId = e.id;
                var i = this.fragCurrent;
                i && (i.abortRequests(),
                this.removeUnbufferedFrags(i.start)),
                this.resetLoadingState(),
                r ? this.setInterval(100) : this.resetTransmuxer(),
                r ? (this.switchingTrack = e,
                this.state = Ti,
                this.flushAudioIfNeeded(e)) : (this.switchingTrack = null,
                this.bufferedTrack = e,
                this.state = Ei),
                this.tick()
            }
            ,
            r.onManifestLoading = function() {
                this.fragmentTracker.removeAllFragments(),
                this.startPosition = this.lastCurrentTime = 0,
                this.bufferFlushed = this.flushing = !1,
                this.levels = this.mainDetails = this.waitingData = this.bufferedTrack = this.cachedTrackLoadedData = this.switchingTrack = null,
                this.startFragRequested = !1,
                this.trackId = this.videoTrackCC = this.waitingVideoCC = -1
            }
            ,
            r.onLevelLoaded = function(t, e) {
                this.mainDetails = e.details,
                null !== this.cachedTrackLoadedData && (this.hls.trigger(S.AUDIO_TRACK_LOADED, this.cachedTrackLoadedData),
                this.cachedTrackLoadedData = null)
            }
            ,
            r.onAudioTrackLoaded = function(t, e) {
                var r;
                if (null != this.mainDetails) {
                    var i = this.levels
                      , n = e.details
                      , a = e.id;
                    if (i) {
                        this.log("Audio track " + a + " loaded [" + n.startSN + "," + n.endSN + "]" + (n.lastPartSn ? "[part-" + n.lastPartSn + "-" + n.lastPartIndex + "]" : "") + ",duration:" + n.totalduration);
                        var s = i[a]
                          , o = 0;
                        if (n.live || null != (r = s.details) && r.live) {
                            this.checkLiveUpdate(n);
                            var l, u = this.mainDetails;
                            if (n.deltaUpdateFailed || !u)
                                return;
                            !s.details && n.hasProgramDateTime && u.hasProgramDateTime ? (li(n, u),
                            o = n.fragments[0].start) : o = this.alignPlaylists(n, s.details, null == (l = this.levelLastLoaded) ? void 0 : l.details)
                        }
                        s.details = n,
                        this.levelLastLoaded = s,
                        this.startFragRequested || !this.mainDetails && n.live || this.setStartPosition(this.mainDetails || n, o),
                        this.state !== Ri || this.waitForCdnTuneIn(n) || (this.state = Ti),
                        this.tick()
                    } else
                        this.warn("Audio tracks were reset while loading level " + a)
                } else
                    this.cachedTrackLoadedData = e
            }
            ,
            r._handleFragmentLoadProgress = function(t) {
                var e, r = t.frag, i = t.part, n = t.payload, a = this.config, s = this.trackId, o = this.levels;
                if (o) {
                    var l = o[s];
                    if (l) {
                        var u = l.details;
                        if (!u)
                            return this.warn("Audio track details undefined on fragment load progress"),
                            void this.removeUnbufferedFrags(r.start);
                        var h = a.defaultAudioCodec || l.audioCodec || "mp4a.40.2"
                          , d = this.transmuxer;
                        d || (d = this.transmuxer = new qn(this.hls,Me,this._handleTransmuxComplete.bind(this),this._handleTransmuxerFlush.bind(this)));
                        var c = this.initPTS[r.cc]
                          , f = null == (e = r.initSegment) ? void 0 : e.data;
                        if (void 0 !== c) {
                            var g = i ? i.index : -1
                              , v = -1 !== g
                              , m = new ii(r.level,r.sn,r.stats.chunkCount,n.byteLength,g,v);
                            d.push(n, f, h, "", r, i, u.totalduration, !1, m, c)
                        } else
                            this.log("Unknown video PTS for cc " + r.cc + ", waiting for video PTS before demuxing audio frag " + r.sn + " of [" + u.startSN + " ," + u.endSN + "],track " + s),
                            (this.waitingData = this.waitingData || {
                                frag: r,
                                part: i,
                                cache: new xi,
                                complete: !1
                            }).cache.push(new Uint8Array(n)),
                            this.waitingVideoCC = this.videoTrackCC,
                            this.state = wi
                    } else
                        this.warn("Audio track is undefined on fragment load progress")
                } else
                    this.warn("Audio tracks were reset while fragment load was in progress. Fragment " + r.sn + " of level " + r.level + " will not be buffered")
            }
            ,
            r._handleFragmentLoadComplete = function(e) {
                this.waitingData ? this.waitingData.complete = !0 : t.prototype._handleFragmentLoadComplete.call(this, e)
            }
            ,
            r.onBufferReset = function() {
                this.mediaBuffer = this.videoBuffer = null,
                this.loadedmetadata = !1
            }
            ,
            r.onBufferCreated = function(t, e) {
                var r = e.tracks.audio;
                r && (this.mediaBuffer = r.buffer || null),
                e.tracks.video && (this.videoBuffer = e.tracks.video.buffer || null)
            }
            ,
            r.onFragBuffered = function(t, e) {
                var r = e.frag
                  , n = e.part;
                if (r.type === Me)
                    if (this.fragContextChanged(r))
                        this.warn("Fragment " + r.sn + (n ? " p: " + n.index : "") + " of level " + r.level + " finished buffering, but was aborted. state: " + this.state + ", audioSwitch: " + (this.switchingTrack ? this.switchingTrack.name : "false"));
                    else {
                        if ("initSegment" !== r.sn) {
                            this.fragPrevious = r;
                            var a = this.switchingTrack;
                            a && (this.bufferedTrack = a,
                            this.switchingTrack = null,
                            this.hls.trigger(S.AUDIO_TRACK_SWITCHED, i({}, a)))
                        }
                        this.fragBufferedComplete(r, n)
                    }
                else if (!this.loadedmetadata && r.type === Fe) {
                    var s = this.videoBuffer || this.media;
                    s && ri.getBuffered(s).length && (this.loadedmetadata = !0)
                }
            }
            ,
            r.onError = function(e, r) {
                var i;
                if (r.fatal)
                    this.state = Ii;
                else
                    switch (r.details) {
                    case A.FRAG_GAP:
                    case A.FRAG_PARSING_ERROR:
                    case A.FRAG_DECRYPT_ERROR:
                    case A.FRAG_LOAD_ERROR:
                    case A.FRAG_LOAD_TIMEOUT:
                    case A.KEY_LOAD_ERROR:
                    case A.KEY_LOAD_TIMEOUT:
                        this.onFragmentOrKeyLoadError(Me, r);
                        break;
                    case A.AUDIO_TRACK_LOAD_ERROR:
                    case A.AUDIO_TRACK_LOAD_TIMEOUT:
                    case A.LEVEL_PARSING_ERROR:
                        r.levelRetry || this.state !== Ri || (null == (i = r.context) ? void 0 : i.type) !== xe || (this.state = Ti);
                        break;
                    case A.BUFFER_APPEND_ERROR:
                    case A.BUFFER_FULL_ERROR:
                        if (!r.parent || "audio" !== r.parent)
                            return;
                        if (r.details === A.BUFFER_APPEND_ERROR)
                            return void this.resetLoadingState();
                        this.reduceLengthAndFlushBuffer(r) && (this.bufferedTrack = null,
                        t.prototype.flushMainBuffer.call(this, 0, Number.POSITIVE_INFINITY, "audio"));
                        break;
                    case A.INTERNAL_EXCEPTION:
                        this.recoverWorkerError(r)
                    }
            }
            ,
            r.onBufferFlushing = function(t, e) {
                e.type !== N && (this.flushing = !0)
            }
            ,
            r.onBufferFlushed = function(t, e) {
                var r = e.type;
                if (r !== N) {
                    this.flushing = !1,
                    this.bufferFlushed = !0,
                    this.state === Di && (this.state = Ti);
                    var i = this.mediaBuffer || this.media;
                    i && (this.afterBufferFlushed(i, r, Me),
                    this.tick())
                }
            }
            ,
            r._handleTransmuxComplete = function(t) {
                var e, r = "audio", i = this.hls, n = t.remuxResult, a = t.chunkMeta, s = this.getCurrentContext(a);
                if (s) {
                    var l = s.frag
                      , u = s.part
                      , h = s.level
                      , d = h.details
                      , c = n.audio
                      , f = n.text
                      , g = n.id3
                      , v = n.initSegment;
                    if (!this.fragContextChanged(l) && d) {
                        if (this.state = bi,
                        this.switchingTrack && c && this.completeAudioSwitch(this.switchingTrack),
                        null != v && v.tracks) {
                            var m = l.initSegment || l;
                            this._bufferInitSegment(h, v.tracks, m, a),
                            i.trigger(S.FRAG_PARSING_INIT_SEGMENT, {
                                frag: m,
                                id: r,
                                tracks: v.tracks
                            })
                        }
                        if (c) {
                            var p = c.startPTS
                              , y = c.endPTS
                              , E = c.startDTS
                              , T = c.endDTS;
                            u && (u.elementaryStreams[O] = {
                                startPTS: p,
                                endPTS: y,
                                startDTS: E,
                                endDTS: T
                            }),
                            l.setElementaryStreamInfo(O, p, y, E, T),
                            this.bufferFragmentData(c, l, u, a)
                        }
                        if (null != g && null != (e = g.samples) && e.length) {
                            var L = o({
                                id: r,
                                frag: l,
                                details: d
                            }, g);
                            i.trigger(S.FRAG_PARSING_METADATA, L)
                        }
                        if (f) {
                            var A = o({
                                id: r,
                                frag: l,
                                details: d
                            }, f);
                            i.trigger(S.FRAG_PARSING_USERDATA, A)
                        }
                    } else
                        this.fragmentTracker.removeFragment(l)
                } else
                    this.resetWhenMissingContext(a)
            }
            ,
            r._bufferInitSegment = function(t, e, r, i) {
                if (this.state === bi) {
                    e.video && delete e.video;
                    var n = e.audio;
                    if (n) {
                        n.id = "audio";
                        var a = t.audioCodec;
                        this.log("Init audio buffer, container:" + n.container + ", codecs[level/parsed]=[" + a + "/" + n.codec + "]"),
                        a && 1 === a.split(",").length && (n.levelCodec = a),
                        this.hls.trigger(S.BUFFER_CODECS, e);
                        var s = n.initSegment;
                        if (null != s && s.byteLength) {
                            var o = {
                                type: "audio",
                                frag: r,
                                part: null,
                                chunkMeta: i,
                                parent: r.type,
                                data: s
                            };
                            this.hls.trigger(S.BUFFER_APPENDING, o)
                        }
                        this.tickImmediate()
                    }
                }
            }
            ,
            r.loadFragment = function(e, r, i) {
                var n, a = this.fragmentTracker.getState(e);
                if (this.fragCurrent = e,
                this.switchingTrack || a === Xr || a === Qr)
                    if ("initSegment" === e.sn)
                        this._loadInitSegment(e, r);
                    else if (null != (n = r.details) && n.live && !this.initPTS[e.cc]) {
                        this.log("Waiting for video PTS in continuity counter " + e.cc + " of live stream before loading audio fragment " + e.sn + " of level " + this.trackId),
                        this.state = wi;
                        var s = this.mainDetails;
                        s && s.fragments[0].start !== r.details.fragments[0].start && li(r.details, s)
                    } else
                        this.startFragRequested = !0,
                        t.prototype.loadFragment.call(this, e, r, i);
                else
                    this.clearTrackerIfNeeded(e)
            }
            ,
            r.flushAudioIfNeeded = function(e) {
                var r = this.media
                  , i = this.bufferedTrack
                  , n = null == i ? void 0 : i.attrs
                  , a = e.attrs;
                r && n && (n.CHANNELS !== a.CHANNELS || i.name !== e.name || i.lang !== e.lang) && (this.log("Switching audio track : flushing all audio"),
                t.prototype.flushMainBuffer.call(this, 0, Number.POSITIVE_INFINITY, "audio"),
                this.bufferedTrack = null)
            }
            ,
            r.completeAudioSwitch = function(t) {
                var e = this.hls;
                this.flushAudioIfNeeded(t),
                this.bufferedTrack = t,
                this.switchingTrack = null,
                e.trigger(S.AUDIO_TRACK_SWITCHED, i({}, t))
            }
            ,
            e
        }(_i)
          , $n = function(t) {
            function e(e) {
                var r;
                return (r = t.call(this, e, "[audio-track-controller]") || this).tracks = [],
                r.groupIds = null,
                r.tracksInGroup = [],
                r.trackId = -1,
                r.currentTrack = null,
                r.selectDefaultTrack = !0,
                r.registerListeners(),
                r
            }
            l(e, t);
            var r = e.prototype;
            return r.registerListeners = function() {
                var t = this.hls;
                t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.on(S.LEVEL_LOADING, this.onLevelLoading, this),
                t.on(S.LEVEL_SWITCHING, this.onLevelSwitching, this),
                t.on(S.AUDIO_TRACK_LOADED, this.onAudioTrackLoaded, this),
                t.on(S.ERROR, this.onError, this)
            }
            ,
            r.unregisterListeners = function() {
                var t = this.hls;
                t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.off(S.LEVEL_LOADING, this.onLevelLoading, this),
                t.off(S.LEVEL_SWITCHING, this.onLevelSwitching, this),
                t.off(S.AUDIO_TRACK_LOADED, this.onAudioTrackLoaded, this),
                t.off(S.ERROR, this.onError, this)
            }
            ,
            r.destroy = function() {
                this.unregisterListeners(),
                this.tracks.length = 0,
                this.tracksInGroup.length = 0,
                this.currentTrack = null,
                t.prototype.destroy.call(this)
            }
            ,
            r.onManifestLoading = function() {
                this.tracks = [],
                this.tracksInGroup = [],
                this.groupIds = null,
                this.currentTrack = null,
                this.trackId = -1,
                this.selectDefaultTrack = !0
            }
            ,
            r.onManifestParsed = function(t, e) {
                this.tracks = e.audioTracks || []
            }
            ,
            r.onAudioTrackLoaded = function(t, e) {
                var r = e.id
                  , i = e.groupId
                  , n = e.details
                  , a = this.tracksInGroup[r];
                if (a && a.groupId === i) {
                    var s = a.details;
                    a.details = e.details,
                    this.log("Audio track " + r + ' "' + a.name + '" lang:' + a.lang + " group:" + i + " loaded [" + n.startSN + "-" + n.endSN + "]"),
                    r === this.trackId && this.playlistLoaded(r, e, s)
                } else
                    this.warn("Audio track with id:" + r + " and group:" + i + " not found in active group " + (null == a ? void 0 : a.groupId))
            }
            ,
            r.onLevelLoading = function(t, e) {
                this.switchLevel(e.level)
            }
            ,
            r.onLevelSwitching = function(t, e) {
                this.switchLevel(e.level)
            }
            ,
            r.switchLevel = function(t) {
                var e = this.hls.levels[t];
                if (e) {
                    var r = e.audioGroups || null
                      , i = this.groupIds
                      , n = this.currentTrack;
                    if (!r || (null == i ? void 0 : i.length) !== (null == r ? void 0 : r.length) || null != r && r.some((function(t) {
                        return -1 === (null == i ? void 0 : i.indexOf(t))
                    }
                    ))) {
                        this.groupIds = r,
                        this.trackId = -1,
                        this.currentTrack = null;
                        var a = this.tracks.filter((function(t) {
                            return !r || -1 !== r.indexOf(t.groupId)
                        }
                        ));
                        if (a.length)
                            this.selectDefaultTrack && !a.some((function(t) {
                                return t.default
                            }
                            )) && (this.selectDefaultTrack = !1),
                            a.forEach((function(t, e) {
                                t.id = e
                            }
                            ));
                        else if (!n && !this.tracksInGroup.length)
                            return;
                        this.tracksInGroup = a;
                        var s = this.hls.config.audioPreference;
                        if (!n && s) {
                            var o = Hr(s, a, Yr);
                            if (o > -1)
                                n = a[o];
                            else {
                                var l = Hr(s, this.tracks);
                                n = this.tracks[l]
                            }
                        }
                        var u = this.findTrackId(n);
                        -1 === u && n && (u = this.findTrackId(null));
                        var h = {
                            audioTracks: a
                        };
                        this.log("Updating audio tracks, " + a.length + " track(s) found in group(s): " + (null == r ? void 0 : r.join(","))),
                        this.hls.trigger(S.AUDIO_TRACKS_UPDATED, h);
                        var d = this.trackId;
                        if (-1 !== u && -1 === d)
                            this.setAudioTrack(u);
                        else if (a.length && -1 === d) {
                            var c, f = new Error("No audio track selected for current audio group-ID(s): " + (null == (c = this.groupIds) ? void 0 : c.join(",")) + " track count: " + a.length);
                            this.warn(f.message),
                            this.hls.trigger(S.ERROR, {
                                type: L.MEDIA_ERROR,
                                details: A.AUDIO_TRACK_LOAD_ERROR,
                                fatal: !0,
                                error: f
                            })
                        }
                    } else
                        this.shouldReloadPlaylist(n) && this.setAudioTrack(this.trackId)
                }
            }
            ,
            r.onError = function(t, e) {
                !e.fatal && e.context && (e.context.type !== xe || e.context.id !== this.trackId || this.groupIds && -1 === this.groupIds.indexOf(e.context.groupId) || (this.requestScheduled = -1,
                this.checkRetry(e)))
            }
            ,
            r.setAudioOption = function(t) {
                var e = this.hls;
                if (e.config.audioPreference = t,
                t) {
                    var r = this.allAudioTracks;
                    if (this.selectDefaultTrack = !1,
                    r.length) {
                        var i = this.currentTrack;
                        if (i && Vr(t, i, Yr))
                            return i;
                        var n = Hr(t, this.tracksInGroup, Yr);
                        if (n > -1) {
                            var a = this.tracksInGroup[n];
                            return this.setAudioTrack(n),
                            a
                        }
                        if (i) {
                            var s = e.loadLevel;
                            -1 === s && (s = e.firstAutoLevel);
                            var o = function(t, e, r, i, n) {
                                var a = e[i]
                                  , s = e.reduce((function(t, e, r) {
                                    var i = e.uri;
                                    return (t[i] || (t[i] = [])).push(r),
                                    t
                                }
                                ), {})[a.uri];
                                s.length > 1 && (i = Math.max.apply(Math, s));
                                var o = a.videoRange
                                  , l = a.frameRate
                                  , u = a.codecSet.substring(0, 4)
                                  , h = Wr(e, i, (function(e) {
                                    if (e.videoRange !== o || e.frameRate !== l || e.codecSet.substring(0, 4) !== u)
                                        return !1;
                                    var i = e.audioGroups
                                      , a = r.filter((function(t) {
                                        return !i || -1 !== i.indexOf(t.groupId)
                                    }
                                    ));
                                    return Hr(t, a, n) > -1
                                }
                                ));
                                return h > -1 ? h : Wr(e, i, (function(e) {
                                    var i = e.audioGroups
                                      , a = r.filter((function(t) {
                                        return !i || -1 !== i.indexOf(t.groupId)
                                    }
                                    ));
                                    return Hr(t, a, n) > -1
                                }
                                ))
                            }(t, e.levels, r, s, Yr);
                            if (-1 === o)
                                return null;
                            e.nextLoadLevel = o
                        }
                        if (t.channels || t.audioCodec) {
                            var l = Hr(t, r);
                            if (l > -1)
                                return r[l]
                        }
                    }
                }
                return null
            }
            ,
            r.setAudioTrack = function(t) {
                var e = this.tracksInGroup;
                if (t < 0 || t >= e.length)
                    this.warn("Invalid audio track id: " + t);
                else {
                    this.clearTimer(),
                    this.selectDefaultTrack = !1;
                    var r = this.currentTrack
                      , n = e[t]
                      , a = n.details && !n.details.live;
                    if (!(t === this.trackId && n === r && a || (this.log("Switching to audio-track " + t + ' "' + n.name + '" lang:' + n.lang + " group:" + n.groupId + " channels:" + n.channels),
                    this.trackId = t,
                    this.currentTrack = n,
                    this.hls.trigger(S.AUDIO_TRACK_SWITCHING, i({}, n)),
                    a))) {
                        var s = this.switchParams(n.url, null == r ? void 0 : r.details, n.details);
                        this.loadPlaylist(s)
                    }
                }
            }
            ,
            r.findTrackId = function(t) {
                for (var e = this.tracksInGroup, r = 0; r < e.length; r++) {
                    var i = e[r];
                    if ((!this.selectDefaultTrack || i.default) && (!t || Vr(t, i, Yr)))
                        return r
                }
                if (t) {
                    for (var n = t.name, a = t.lang, s = t.assocLang, o = t.characteristics, l = t.audioCodec, u = t.channels, h = 0; h < e.length; h++)
                        if (Vr({
                            name: n,
                            lang: a,
                            assocLang: s,
                            characteristics: o,
                            audioCodec: l,
                            channels: u
                        }, e[h], Yr))
                            return h;
                    for (var d = 0; d < e.length; d++) {
                        var c = e[d];
                        if (zn(t.attrs, c.attrs, ["LANGUAGE", "ASSOC-LANGUAGE", "CHARACTERISTICS"]))
                            return d
                    }
                    for (var f = 0; f < e.length; f++) {
                        var g = e[f];
                        if (zn(t.attrs, g.attrs, ["LANGUAGE"]))
                            return f
                    }
                }
                return -1
            }
            ,
            r.loadPlaylist = function(e) {
                var r = this.currentTrack;
                if (this.shouldLoadPlaylist(r) && r) {
                    t.prototype.loadPlaylist.call(this);
                    var i = r.id
                      , n = r.groupId
                      , a = r.url;
                    if (e)
                        try {
                            a = e.addDirectives(a)
                        } catch (t) {
                            this.warn("Could not construct new URL with HLS Delivery Directives: " + t)
                        }
                    this.log("loading audio-track playlist " + i + ' "' + r.name + '" lang:' + r.lang + " group:" + n),
                    this.clearTimer(),
                    this.hls.trigger(S.AUDIO_TRACK_LOADING, {
                        url: a,
                        id: i,
                        groupId: n,
                        deliveryDirectives: e || null
                    })
                }
            }
            ,
            s(e, [{
                key: "allAudioTracks",
                get: function() {
                    return this.tracks
                }
            }, {
                key: "audioTracks",
                get: function() {
                    return this.tracksInGroup
                }
            }, {
                key: "audioTrack",
                get: function() {
                    return this.trackId
                },
                set: function(t) {
                    this.selectDefaultTrack = !1,
                    this.setAudioTrack(t)
                }
            }]),
            e
        }(Fr)
          , Zn = function(t) {
            function e(e, r, i) {
                var n;
                return (n = t.call(this, e, r, i, "[subtitle-stream-controller]", Oe) || this).currentTrackId = -1,
                n.tracksBuffered = [],
                n.mainDetails = null,
                n._registerListeners(),
                n
            }
            l(e, t);
            var r = e.prototype;
            return r.onHandlerDestroying = function() {
                this._unregisterListeners(),
                t.prototype.onHandlerDestroying.call(this),
                this.mainDetails = null
            }
            ,
            r._registerListeners = function() {
                var t = this.hls;
                t.on(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.on(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.LEVEL_LOADED, this.onLevelLoaded, this),
                t.on(S.ERROR, this.onError, this),
                t.on(S.SUBTITLE_TRACKS_UPDATED, this.onSubtitleTracksUpdated, this),
                t.on(S.SUBTITLE_TRACK_SWITCH, this.onSubtitleTrackSwitch, this),
                t.on(S.SUBTITLE_TRACK_LOADED, this.onSubtitleTrackLoaded, this),
                t.on(S.SUBTITLE_FRAG_PROCESSED, this.onSubtitleFragProcessed, this),
                t.on(S.BUFFER_FLUSHING, this.onBufferFlushing, this),
                t.on(S.FRAG_BUFFERED, this.onFragBuffered, this)
            }
            ,
            r._unregisterListeners = function() {
                var t = this.hls;
                t.off(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.off(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.LEVEL_LOADED, this.onLevelLoaded, this),
                t.off(S.ERROR, this.onError, this),
                t.off(S.SUBTITLE_TRACKS_UPDATED, this.onSubtitleTracksUpdated, this),
                t.off(S.SUBTITLE_TRACK_SWITCH, this.onSubtitleTrackSwitch, this),
                t.off(S.SUBTITLE_TRACK_LOADED, this.onSubtitleTrackLoaded, this),
                t.off(S.SUBTITLE_FRAG_PROCESSED, this.onSubtitleFragProcessed, this),
                t.off(S.BUFFER_FLUSHING, this.onBufferFlushing, this),
                t.off(S.FRAG_BUFFERED, this.onFragBuffered, this)
            }
            ,
            r.startLoad = function(t) {
                this.stopLoad(),
                this.state = Ti,
                this.setInterval(500),
                this.nextLoadPosition = this.startPosition = this.lastCurrentTime = t,
                this.tick()
            }
            ,
            r.onManifestLoading = function() {
                this.mainDetails = null,
                this.fragmentTracker.removeAllFragments()
            }
            ,
            r.onMediaDetaching = function() {
                this.tracksBuffered = [],
                t.prototype.onMediaDetaching.call(this)
            }
            ,
            r.onLevelLoaded = function(t, e) {
                this.mainDetails = e.details
            }
            ,
            r.onSubtitleFragProcessed = function(t, e) {
                var r = e.frag
                  , i = e.success;
                if (this.fragPrevious = r,
                this.state = Ti,
                i) {
                    var n = this.tracksBuffered[this.currentTrackId];
                    if (n) {
                        for (var a, s = r.start, o = 0; o < n.length; o++)
                            if (s >= n[o].start && s <= n[o].end) {
                                a = n[o];
                                break
                            }
                        var l = r.start + r.duration;
                        a ? a.end = l : (a = {
                            start: s,
                            end: l
                        },
                        n.push(a)),
                        this.fragmentTracker.fragBuffered(r),
                        this.fragBufferedComplete(r, null)
                    }
                }
            }
            ,
            r.onBufferFlushing = function(t, e) {
                var r = e.startOffset
                  , i = e.endOffset;
                if (0 === r && i !== Number.POSITIVE_INFINITY) {
                    var n = i - 1;
                    if (n <= 0)
                        return;
                    e.endOffsetSubtitles = Math.max(0, n),
                    this.tracksBuffered.forEach((function(t) {
                        for (var e = 0; e < t.length; )
                            if (t[e].end <= n)
                                t.shift();
                            else {
                                if (!(t[e].start < n))
                                    break;
                                t[e].start = n,
                                e++
                            }
                    }
                    )),
                    this.fragmentTracker.removeFragmentsInRange(r, n, Oe)
                }
            }
            ,
            r.onFragBuffered = function(t, e) {
                var r;
                this.loadedmetadata || e.frag.type !== Fe || null != (r = this.media) && r.buffered.length && (this.loadedmetadata = !0)
            }
            ,
            r.onError = function(t, e) {
                var r = e.frag;
                (null == r ? void 0 : r.type) === Oe && (e.details === A.FRAG_GAP && this.fragmentTracker.fragBuffered(r, !0),
                this.fragCurrent && this.fragCurrent.abortRequests(),
                this.state !== Ei && (this.state = Ti))
            }
            ,
            r.onSubtitleTracksUpdated = function(t, e) {
                var r = this
                  , i = e.subtitleTracks;
                this.levels && Xn(this.levels, i) ? this.levels = i.map((function(t) {
                    return new or(t)
                }
                )) : (this.tracksBuffered = [],
                this.levels = i.map((function(t) {
                    var e = new or(t);
                    return r.tracksBuffered[e.id] = [],
                    e
                }
                )),
                this.fragmentTracker.removeFragmentsInRange(0, Number.POSITIVE_INFINITY, Oe),
                this.fragPrevious = null,
                this.mediaBuffer = null)
            }
            ,
            r.onSubtitleTrackSwitch = function(t, e) {
                var r;
                if (this.currentTrackId = e.id,
                null != (r = this.levels) && r.length && -1 !== this.currentTrackId) {
                    var i = this.levels[this.currentTrackId];
                    null != i && i.details ? this.mediaBuffer = this.mediaBufferTimeRanges : this.mediaBuffer = null,
                    i && this.setInterval(500)
                } else
                    this.clearInterval()
            }
            ,
            r.onSubtitleTrackLoaded = function(t, e) {
                var r, i = this.currentTrackId, n = this.levels, a = e.details, s = e.id;
                if (n) {
                    var o = n[s];
                    if (!(s >= n.length) && o) {
                        this.log("Subtitle track " + s + " loaded [" + a.startSN + "," + a.endSN + "]" + (a.lastPartSn ? "[part-" + a.lastPartSn + "-" + a.lastPartIndex + "]" : "") + ",duration:" + a.totalduration),
                        this.mediaBuffer = this.mediaBufferTimeRanges;
                        var l = 0;
                        if (a.live || null != (r = o.details) && r.live) {
                            var u = this.mainDetails;
                            if (a.deltaUpdateFailed || !u)
                                return;
                            var h, d = u.fragments[0];
                            o.details ? 0 === (l = this.alignPlaylists(a, o.details, null == (h = this.levelLastLoaded) ? void 0 : h.details)) && d && fr(a, l = d.start) : a.hasProgramDateTime && u.hasProgramDateTime ? (li(a, u),
                            l = a.fragments[0].start) : d && fr(a, l = d.start)
                        }
                        o.details = a,
                        this.levelLastLoaded = o,
                        s === i && (this.startFragRequested || !this.mainDetails && a.live || this.setStartPosition(this.mainDetails || a, l),
                        this.tick(),
                        a.live && !this.fragCurrent && this.media && this.state === Ti && (Ar(null, a.fragments, this.media.currentTime, 0) || (this.warn("Subtitle playlist not aligned with playback"),
                        o.details = void 0)))
                    }
                } else
                    this.warn("Subtitle tracks were reset while loading level " + s)
            }
            ,
            r._handleFragmentLoadComplete = function(t) {
                var e = this
                  , r = t.frag
                  , i = t.payload
                  , n = r.decryptdata
                  , a = this.hls;
                if (!this.fragContextChanged(r) && i && i.byteLength > 0 && null != n && n.key && n.iv && "AES-128" === n.method) {
                    var s = performance.now();
                    this.decrypter.decrypt(new Uint8Array(i), n.key.buffer, n.iv.buffer).catch((function(t) {
                        throw a.trigger(S.ERROR, {
                            type: L.MEDIA_ERROR,
                            details: A.FRAG_DECRYPT_ERROR,
                            fatal: !1,
                            error: t,
                            reason: t.message,
                            frag: r
                        }),
                        t
                    }
                    )).then((function(t) {
                        var e = performance.now();
                        a.trigger(S.FRAG_DECRYPTED, {
                            frag: r,
                            payload: t,
                            stats: {
                                tstart: s,
                                tdecrypt: e
                            }
                        })
                    }
                    )).catch((function(t) {
                        e.warn(t.name + ": " + t.message),
                        e.state = Ti
                    }
                    ))
                }
            }
            ,
            r.doTick = function() {
                if (this.media) {
                    if (this.state === Ti) {
                        var t = this.currentTrackId
                          , e = this.levels
                          , r = null == e ? void 0 : e[t];
                        if (!r || !e.length || !r.details)
                            return;
                        var i = this.config
                          , n = this.getLoadPosition()
                          , a = ri.bufferedInfo(this.tracksBuffered[this.currentTrackId] || [], n, i.maxBufferHole)
                          , s = a.end
                          , o = a.len
                          , l = this.getFwdBufferInfo(this.media, Fe)
                          , u = r.details;
                        if (o > this.getMaxBufferLength(null == l ? void 0 : l.len) + u.levelTargetDuration)
                            return;
                        var h = u.fragments
                          , d = h.length
                          , c = u.edge
                          , f = null
                          , g = this.fragPrevious;
                        if (s < c) {
                            var v = i.maxFragLookUpTolerance
                              , m = s > c - v ? 0 : v;
                            !(f = Ar(g, h, Math.max(h[0].start, s), m)) && g && g.start < h[0].start && (f = h[0])
                        } else
                            f = h[d - 1];
                        if (!f)
                            return;
                        if ("initSegment" !== (f = this.mapToInitFragWhenRequired(f)).sn) {
                            var p = h[f.sn - u.startSN - 1];
                            p && p.cc === f.cc && this.fragmentTracker.getState(p) === Xr && (f = p)
                        }
                        this.fragmentTracker.getState(f) === Xr && this.loadFragment(f, r, s)
                    }
                } else
                    this.state = Ti
            }
            ,
            r.getMaxBufferLength = function(e) {
                var r = t.prototype.getMaxBufferLength.call(this);
                return e ? Math.max(r, e) : r
            }
            ,
            r.loadFragment = function(e, r, i) {
                this.fragCurrent = e,
                "initSegment" === e.sn ? this._loadInitSegment(e, r) : (this.startFragRequested = !0,
                t.prototype.loadFragment.call(this, e, r, i))
            }
            ,
            s(e, [{
                key: "mediaBufferTimeRanges",
                get: function() {
                    return new ta(this.tracksBuffered[this.currentTrackId] || [])
                }
            }]),
            e
        }(_i)
          , ta = function(t) {
            this.buffered = void 0;
            var e = function(e, r, i) {
                if ((r >>>= 0) > i - 1)
                    throw new DOMException("Failed to execute '" + e + "' on 'TimeRanges': The index provided (" + r + ") is greater than the maximum bound (" + i + ")");
                return t[r][e]
            };
            this.buffered = {
                get length() {
                    return t.length
                },
                end: function(r) {
                    return e("end", r, t.length)
                },
                start: function(r) {
                    return e("start", r, t.length)
                }
            }
        }
          , ea = function(t) {
            function e(e) {
                var r;
                return (r = t.call(this, e, "[subtitle-track-controller]") || this).media = null,
                r.tracks = [],
                r.groupIds = null,
                r.tracksInGroup = [],
                r.trackId = -1,
                r.currentTrack = null,
                r.selectDefaultTrack = !0,
                r.queuedDefaultTrack = -1,
                r.asyncPollTrackChange = function() {
                    return r.pollTrackChange(0)
                }
                ,
                r.useTextTrackPolling = !1,
                r.subtitlePollingInterval = -1,
                r._subtitleDisplay = !0,
                r.onTextTracksChanged = function() {
                    if (r.useTextTrackPolling || self.clearInterval(r.subtitlePollingInterval),
                    r.media && r.hls.config.renderTextTracksNatively) {
                        for (var t = null, e = Ye(r.media.textTracks), i = 0; i < e.length; i++)
                            if ("hidden" === e[i].mode)
                                t = e[i];
                            else if ("showing" === e[i].mode) {
                                t = e[i];
                                break
                            }
                        var n = r.findTrackForTextTrack(t);
                        r.subtitleTrack !== n && r.setSubtitleTrack(n)
                    }
                }
                ,
                r.registerListeners(),
                r
            }
            l(e, t);
            var r = e.prototype;
            return r.destroy = function() {
                this.unregisterListeners(),
                this.tracks.length = 0,
                this.tracksInGroup.length = 0,
                this.currentTrack = null,
                this.onTextTracksChanged = this.asyncPollTrackChange = null,
                t.prototype.destroy.call(this)
            }
            ,
            r.registerListeners = function() {
                var t = this.hls;
                t.on(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.on(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.on(S.LEVEL_LOADING, this.onLevelLoading, this),
                t.on(S.LEVEL_SWITCHING, this.onLevelSwitching, this),
                t.on(S.SUBTITLE_TRACK_LOADED, this.onSubtitleTrackLoaded, this),
                t.on(S.ERROR, this.onError, this)
            }
            ,
            r.unregisterListeners = function() {
                var t = this.hls;
                t.off(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.off(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.off(S.LEVEL_LOADING, this.onLevelLoading, this),
                t.off(S.LEVEL_SWITCHING, this.onLevelSwitching, this),
                t.off(S.SUBTITLE_TRACK_LOADED, this.onSubtitleTrackLoaded, this),
                t.off(S.ERROR, this.onError, this)
            }
            ,
            r.onMediaAttached = function(t, e) {
                this.media = e.media,
                this.media && (this.queuedDefaultTrack > -1 && (this.subtitleTrack = this.queuedDefaultTrack,
                this.queuedDefaultTrack = -1),
                this.useTextTrackPolling = !(this.media.textTracks && "onchange"in this.media.textTracks),
                this.useTextTrackPolling ? this.pollTrackChange(500) : this.media.textTracks.addEventListener("change", this.asyncPollTrackChange))
            }
            ,
            r.pollTrackChange = function(t) {
                self.clearInterval(this.subtitlePollingInterval),
                this.subtitlePollingInterval = self.setInterval(this.onTextTracksChanged, t)
            }
            ,
            r.onMediaDetaching = function() {
                this.media && (self.clearInterval(this.subtitlePollingInterval),
                this.useTextTrackPolling || this.media.textTracks.removeEventListener("change", this.asyncPollTrackChange),
                this.trackId > -1 && (this.queuedDefaultTrack = this.trackId),
                Ye(this.media.textTracks).forEach((function(t) {
                    He(t)
                }
                )),
                this.subtitleTrack = -1,
                this.media = null)
            }
            ,
            r.onManifestLoading = function() {
                this.tracks = [],
                this.groupIds = null,
                this.tracksInGroup = [],
                this.trackId = -1,
                this.currentTrack = null,
                this.selectDefaultTrack = !0
            }
            ,
            r.onManifestParsed = function(t, e) {
                this.tracks = e.subtitleTracks
            }
            ,
            r.onSubtitleTrackLoaded = function(t, e) {
                var r = e.id
                  , i = e.groupId
                  , n = e.details
                  , a = this.tracksInGroup[r];
                if (a && a.groupId === i) {
                    var s = a.details;
                    a.details = e.details,
                    this.log("Subtitle track " + r + ' "' + a.name + '" lang:' + a.lang + " group:" + i + " loaded [" + n.startSN + "-" + n.endSN + "]"),
                    r === this.trackId && this.playlistLoaded(r, e, s)
                } else
                    this.warn("Subtitle track with id:" + r + " and group:" + i + " not found in active group " + (null == a ? void 0 : a.groupId))
            }
            ,
            r.onLevelLoading = function(t, e) {
                this.switchLevel(e.level)
            }
            ,
            r.onLevelSwitching = function(t, e) {
                this.switchLevel(e.level)
            }
            ,
            r.switchLevel = function(t) {
                var e = this.hls.levels[t];
                if (e) {
                    var r = e.subtitleGroups || null
                      , i = this.groupIds
                      , n = this.currentTrack;
                    if (!r || (null == i ? void 0 : i.length) !== (null == r ? void 0 : r.length) || null != r && r.some((function(t) {
                        return -1 === (null == i ? void 0 : i.indexOf(t))
                    }
                    ))) {
                        this.groupIds = r,
                        this.trackId = -1,
                        this.currentTrack = null;
                        var a = this.tracks.filter((function(t) {
                            return !r || -1 !== r.indexOf(t.groupId)
                        }
                        ));
                        if (a.length)
                            this.selectDefaultTrack && !a.some((function(t) {
                                return t.default
                            }
                            )) && (this.selectDefaultTrack = !1),
                            a.forEach((function(t, e) {
                                t.id = e
                            }
                            ));
                        else if (!n && !this.tracksInGroup.length)
                            return;
                        this.tracksInGroup = a;
                        var s = this.hls.config.subtitlePreference;
                        if (!n && s) {
                            this.selectDefaultTrack = !1;
                            var o = Hr(s, a);
                            if (o > -1)
                                n = a[o];
                            else {
                                var l = Hr(s, this.tracks);
                                n = this.tracks[l]
                            }
                        }
                        var u = this.findTrackId(n);
                        -1 === u && n && (u = this.findTrackId(null));
                        var h = {
                            subtitleTracks: a
                        };
                        this.log("Updating subtitle tracks, " + a.length + ' track(s) found in "' + (null == r ? void 0 : r.join(",")) + '" group-id'),
                        this.hls.trigger(S.SUBTITLE_TRACKS_UPDATED, h),
                        -1 !== u && -1 === this.trackId && this.setSubtitleTrack(u)
                    } else
                        this.shouldReloadPlaylist(n) && this.setSubtitleTrack(this.trackId)
                }
            }
            ,
            r.findTrackId = function(t) {
                for (var e = this.tracksInGroup, r = this.selectDefaultTrack, i = 0; i < e.length; i++) {
                    var n = e[i];
                    if ((!r || n.default) && (r || t) && (!t || Vr(n, t)))
                        return i
                }
                if (t) {
                    for (var a = 0; a < e.length; a++) {
                        var s = e[a];
                        if (zn(t.attrs, s.attrs, ["LANGUAGE", "ASSOC-LANGUAGE", "CHARACTERISTICS"]))
                            return a
                    }
                    for (var o = 0; o < e.length; o++) {
                        var l = e[o];
                        if (zn(t.attrs, l.attrs, ["LANGUAGE"]))
                            return o
                    }
                }
                return -1
            }
            ,
            r.findTrackForTextTrack = function(t) {
                if (t)
                    for (var e = this.tracksInGroup, r = 0; r < e.length; r++)
                        if (Qn(e[r], t))
                            return r;
                return -1
            }
            ,
            r.onError = function(t, e) {
                !e.fatal && e.context && (e.context.type !== Pe || e.context.id !== this.trackId || this.groupIds && -1 === this.groupIds.indexOf(e.context.groupId) || this.checkRetry(e))
            }
            ,
            r.setSubtitleOption = function(t) {
                if (this.hls.config.subtitlePreference = t,
                t) {
                    var e = this.allSubtitleTracks;
                    if (this.selectDefaultTrack = !1,
                    e.length) {
                        var r = this.currentTrack;
                        if (r && Vr(t, r))
                            return r;
                        var i = Hr(t, this.tracksInGroup);
                        if (i > -1) {
                            var n = this.tracksInGroup[i];
                            return this.setSubtitleTrack(i),
                            n
                        }
                        if (r)
                            return null;
                        var a = Hr(t, e);
                        if (a > -1)
                            return e[a]
                    }
                }
                return null
            }
            ,
            r.loadPlaylist = function(e) {
                t.prototype.loadPlaylist.call(this);
                var r = this.currentTrack;
                if (this.shouldLoadPlaylist(r) && r) {
                    var i = r.id
                      , n = r.groupId
                      , a = r.url;
                    if (e)
                        try {
                            a = e.addDirectives(a)
                        } catch (t) {
                            this.warn("Could not construct new URL with HLS Delivery Directives: " + t)
                        }
                    this.log("Loading subtitle playlist for id " + i),
                    this.hls.trigger(S.SUBTITLE_TRACK_LOADING, {
                        url: a,
                        id: i,
                        groupId: n,
                        deliveryDirectives: e || null
                    })
                }
            }
            ,
            r.toggleTrackModes = function() {
                var t = this.media;
                if (t) {
                    var e, r = Ye(t.textTracks), i = this.currentTrack;
                    if (i && ((e = r.filter((function(t) {
                        return Qn(i, t)
                    }
                    ))[0]) || this.warn('Unable to find subtitle TextTrack with name "' + i.name + '" and language "' + i.lang + '"')),
                    [].slice.call(r).forEach((function(t) {
                        "disabled" !== t.mode && t !== e && (t.mode = "disabled")
                    }
                    )),
                    e) {
                        var n = this.subtitleDisplay ? "showing" : "hidden";
                        e.mode !== n && (e.mode = n)
                    }
                }
            }
            ,
            r.setSubtitleTrack = function(t) {
                var e = this.tracksInGroup;
                if (this.media)
                    if (t < -1 || t >= e.length || !y(t))
                        this.warn("Invalid subtitle track id: " + t);
                    else {
                        this.clearTimer(),
                        this.selectDefaultTrack = !1;
                        var r = this.currentTrack
                          , i = e[t] || null;
                        if (this.trackId = t,
                        this.currentTrack = i,
                        this.toggleTrackModes(),
                        i) {
                            var n = !!i.details && !i.details.live;
                            if (t !== this.trackId || i !== r || !n) {
                                this.log("Switching to subtitle-track " + t + (i ? ' "' + i.name + '" lang:' + i.lang + " group:" + i.groupId : ""));
                                var a = i.id
                                  , s = i.groupId
                                  , o = void 0 === s ? "" : s
                                  , l = i.name
                                  , u = i.type
                                  , h = i.url;
                                this.hls.trigger(S.SUBTITLE_TRACK_SWITCH, {
                                    id: a,
                                    groupId: o,
                                    name: l,
                                    type: u,
                                    url: h
                                });
                                var d = this.switchParams(i.url, null == r ? void 0 : r.details, i.details);
                                this.loadPlaylist(d)
                            }
                        } else
                            this.hls.trigger(S.SUBTITLE_TRACK_SWITCH, {
                                id: t
                            })
                    }
                else
                    this.queuedDefaultTrack = t
            }
            ,
            s(e, [{
                key: "subtitleDisplay",
                get: function() {
                    return this._subtitleDisplay
                },
                set: function(t) {
                    this._subtitleDisplay = t,
                    this.trackId > -1 && this.toggleTrackModes()
                }
            }, {
                key: "allSubtitleTracks",
                get: function() {
                    return this.tracks
                }
            }, {
                key: "subtitleTracks",
                get: function() {
                    return this.tracksInGroup
                }
            }, {
                key: "subtitleTrack",
                get: function() {
                    return this.trackId
                },
                set: function(t) {
                    this.selectDefaultTrack = !1,
                    this.setSubtitleTrack(t)
                }
            }]),
            e
        }(Fr)
          , ra = function() {
            function t(t) {
                this.buffers = void 0,
                this.queues = {
                    video: [],
                    audio: [],
                    audiovideo: []
                },
                this.buffers = t
            }
            var e = t.prototype;
            return e.append = function(t, e, r) {
                var i = this.queues[e];
                i.push(t),
                1 !== i.length || r || this.executeNext(e)
            }
            ,
            e.insertAbort = function(t, e) {
                this.queues[e].unshift(t),
                this.executeNext(e)
            }
            ,
            e.appendBlocker = function(t) {
                var e, r = new Promise((function(t) {
                    e = t
                }
                )), i = {
                    execute: e,
                    onStart: function() {},
                    onComplete: function() {},
                    onError: function() {}
                };
                return this.append(i, t),
                r
            }
            ,
            e.executeNext = function(t) {
                var e = this.queues[t];
                if (e.length) {
                    var r = e[0];
                    try {
                        r.execute()
                    } catch (e) {
                        w.warn('[buffer-operation-queue]: Exception executing "' + t + '" SourceBuffer operation: ' + e),
                        r.onError(e);
                        var i = this.buffers[t];
                        null != i && i.updating || this.shiftAndExecuteNext(t)
                    }
                }
            }
            ,
            e.shiftAndExecuteNext = function(t) {
                this.queues[t].shift(),
                this.executeNext(t)
            }
            ,
            e.current = function(t) {
                return this.queues[t][0]
            }
            ,
            t
        }()
          , ia = /(avc[1234]|hvc1|hev1|dvh[1e]|vp09|av01)(?:\.[^.,]+)+/
          , na = function() {
            function t(t) {
                var e = this;
                this.details = null,
                this._objectUrl = null,
                this.operationQueue = void 0,
                this.listeners = void 0,
                this.hls = void 0,
                this.bufferCodecEventsExpected = 0,
                this._bufferCodecEventsTotal = 0,
                this.media = null,
                this.mediaSource = null,
                this.lastMpegAudioChunk = null,
                this.appendSource = void 0,
                this.appendErrors = {
                    audio: 0,
                    video: 0,
                    audiovideo: 0
                },
                this.tracks = {},
                this.pendingTracks = {},
                this.sourceBuffer = void 0,
                this.log = void 0,
                this.warn = void 0,
                this.error = void 0,
                this._onEndStreaming = function(t) {
                    e.hls && e.hls.pauseBuffering()
                }
                ,
                this._onStartStreaming = function(t) {
                    e.hls && e.hls.resumeBuffering()
                }
                ,
                this._onMediaSourceOpen = function() {
                    var t = e.media
                      , r = e.mediaSource;
                    e.log("Media source opened"),
                    t && (t.removeEventListener("emptied", e._onMediaEmptied),
                    e.updateMediaElementDuration(),
                    e.hls.trigger(S.MEDIA_ATTACHED, {
                        media: t,
                        mediaSource: r
                    })),
                    r && r.removeEventListener("sourceopen", e._onMediaSourceOpen),
                    e.checkPendingTracks()
                }
                ,
                this._onMediaSourceClose = function() {
                    e.log("Media source closed")
                }
                ,
                this._onMediaSourceEnded = function() {
                    e.log("Media source ended")
                }
                ,
                this._onMediaEmptied = function() {
                    var t = e.mediaSrc
                      , r = e._objectUrl;
                    t !== r && w.error("Media element src was set while attaching MediaSource (" + r + " > " + t + ")")
                }
                ,
                this.hls = t;
                var r, i = "[buffer-controller]";
                this.appendSource = (r = se(t.config.preferManagedMediaSource),
                "undefined" != typeof self && r === self.ManagedMediaSource),
                this.log = w.log.bind(w, i),
                this.warn = w.warn.bind(w, i),
                this.error = w.error.bind(w, i),
                this._initSourceBuffer(),
                this.registerListeners()
            }
            var e = t.prototype;
            return e.hasSourceTypes = function() {
                return this.getSourceBufferTypes().length > 0 || Object.keys(this.pendingTracks).length > 0
            }
            ,
            e.destroy = function() {
                this.unregisterListeners(),
                this.details = null,
                this.lastMpegAudioChunk = null,
                this.hls = null
            }
            ,
            e.registerListeners = function() {
                var t = this.hls;
                t.on(S.MEDIA_ATTACHING, this.onMediaAttaching, this),
                t.on(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.on(S.BUFFER_RESET, this.onBufferReset, this),
                t.on(S.BUFFER_APPENDING, this.onBufferAppending, this),
                t.on(S.BUFFER_CODECS, this.onBufferCodecs, this),
                t.on(S.BUFFER_EOS, this.onBufferEos, this),
                t.on(S.BUFFER_FLUSHING, this.onBufferFlushing, this),
                t.on(S.LEVEL_UPDATED, this.onLevelUpdated, this),
                t.on(S.FRAG_PARSED, this.onFragParsed, this),
                t.on(S.FRAG_CHANGED, this.onFragChanged, this)
            }
            ,
            e.unregisterListeners = function() {
                var t = this.hls;
                t.off(S.MEDIA_ATTACHING, this.onMediaAttaching, this),
                t.off(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.off(S.BUFFER_RESET, this.onBufferReset, this),
                t.off(S.BUFFER_APPENDING, this.onBufferAppending, this),
                t.off(S.BUFFER_CODECS, this.onBufferCodecs, this),
                t.off(S.BUFFER_EOS, this.onBufferEos, this),
                t.off(S.BUFFER_FLUSHING, this.onBufferFlushing, this),
                t.off(S.LEVEL_UPDATED, this.onLevelUpdated, this),
                t.off(S.FRAG_PARSED, this.onFragParsed, this),
                t.off(S.FRAG_CHANGED, this.onFragChanged, this)
            }
            ,
            e._initSourceBuffer = function() {
                this.sourceBuffer = {},
                this.operationQueue = new ra(this.sourceBuffer),
                this.listeners = {
                    audio: [],
                    video: [],
                    audiovideo: []
                },
                this.appendErrors = {
                    audio: 0,
                    video: 0,
                    audiovideo: 0
                },
                this.lastMpegAudioChunk = null
            }
            ,
            e.onManifestLoading = function() {
                this.bufferCodecEventsExpected = this._bufferCodecEventsTotal = 0,
                this.details = null
            }
            ,
            e.onManifestParsed = function(t, e) {
                var r = 2;
                (e.audio && !e.video || !e.altAudio) && (r = 1),
                this.bufferCodecEventsExpected = this._bufferCodecEventsTotal = r,
                this.log(this.bufferCodecEventsExpected + " bufferCodec event(s) expected")
            }
            ,
            e.onMediaAttaching = function(t, e) {
                var r = this.media = e.media
                  , i = se(this.appendSource);
                if (r && i) {
                    var n, a = this.mediaSource = new i;
                    this.log("created media source: " + (null == (n = a.constructor) ? void 0 : n.name)),
                    a.addEventListener("sourceopen", this._onMediaSourceOpen),
                    a.addEventListener("sourceended", this._onMediaSourceEnded),
                    a.addEventListener("sourceclose", this._onMediaSourceClose),
                    this.appendSource && (a.addEventListener("startstreaming", this._onStartStreaming),
                    a.addEventListener("endstreaming", this._onEndStreaming));
                    var s = this._objectUrl = self.URL.createObjectURL(a);
                    if (this.appendSource)
                        try {
                            r.removeAttribute("src");
                            var o = self.ManagedMediaSource;
                            r.disableRemotePlayback = r.disableRemotePlayback || o && a instanceof o,
                            aa(r),
                            function(t, e) {
                                var r = self.document.createElement("source");
                                r.type = "video/mp4",
                                r.src = e,
                                t.appendChild(r)
                            }(r, s),
                            r.load()
                        } catch (t) {
                            r.src = s
                        }
                    else
                        r.src = s;
                    r.addEventListener("emptied", this._onMediaEmptied)
                }
            }
            ,
            e.onMediaDetaching = function() {
                var t = this.media
                  , e = this.mediaSource
                  , r = this._objectUrl;
                if (e) {
                    if (this.log("media source detaching"),
                    "open" === e.readyState)
                        try {
                            e.endOfStream()
                        } catch (t) {
                            this.warn("onMediaDetaching: " + t.message + " while calling endOfStream")
                        }
                    this.onBufferReset(),
                    e.removeEventListener("sourceopen", this._onMediaSourceOpen),
                    e.removeEventListener("sourceended", this._onMediaSourceEnded),
                    e.removeEventListener("sourceclose", this._onMediaSourceClose),
                    this.appendSource && (e.removeEventListener("startstreaming", this._onStartStreaming),
                    e.removeEventListener("endstreaming", this._onEndStreaming)),
                    t && (t.removeEventListener("emptied", this._onMediaEmptied),
                    r && self.URL.revokeObjectURL(r),
                    this.mediaSrc === r ? (t.removeAttribute("src"),
                    this.appendSource && aa(t),
                    t.load()) : this.warn("media|source.src was changed by a third party - skip cleanup")),
                    this.mediaSource = null,
                    this.media = null,
                    this._objectUrl = null,
                    this.bufferCodecEventsExpected = this._bufferCodecEventsTotal,
                    this.pendingTracks = {},
                    this.tracks = {}
                }
                this.hls.trigger(S.MEDIA_DETACHED, void 0)
            }
            ,
            e.onBufferReset = function() {
                var t = this;
                this.getSourceBufferTypes().forEach((function(e) {
                    t.resetBuffer(e)
                }
                )),
                this._initSourceBuffer()
            }
            ,
            e.resetBuffer = function(t) {
                var e = this.sourceBuffer[t];
                try {
                    var r;
                    e && (this.removeBufferListeners(t),
                    this.sourceBuffer[t] = void 0,
                    null != (r = this.mediaSource) && r.sourceBuffers.length && this.mediaSource.removeSourceBuffer(e))
                } catch (e) {
                    this.warn("onBufferReset " + t, e)
                }
            }
            ,
            e.onBufferCodecs = function(t, e) {
                var r = this
                  , i = this.getSourceBufferTypes().length
                  , n = Object.keys(e);
                if (n.forEach((function(t) {
                    if (i) {
                        var n = r.tracks[t];
                        if (n && "function" == typeof n.buffer.changeType) {
                            var a, s = e[t], o = s.id, l = s.codec, u = s.levelCodec, h = s.container, d = s.metadata, c = me(n.codec, n.levelCodec), f = null == c ? void 0 : c.replace(ia, "$1"), g = me(l, u), v = null == (a = g) ? void 0 : a.replace(ia, "$1");
                            if (g && f !== v) {
                                "audio" === t.slice(0, 5) && (g = ve(g, r.appendSource));
                                var m = h + ";codecs=" + g;
                                r.appendChangeType(t, m),
                                r.log("switching codec " + c + " to " + g),
                                r.tracks[t] = {
                                    buffer: n.buffer,
                                    codec: l,
                                    container: h,
                                    levelCodec: u,
                                    metadata: d,
                                    id: o
                                }
                            }
                        }
                    } else
                        r.pendingTracks[t] = e[t]
                }
                )),
                !i) {
                    var a = Math.max(this.bufferCodecEventsExpected - 1, 0);
                    this.bufferCodecEventsExpected !== a && (this.log(a + " bufferCodec event(s) expected " + n.join(",")),
                    this.bufferCodecEventsExpected = a),
                    this.mediaSource && "open" === this.mediaSource.readyState && this.checkPendingTracks()
                }
            }
            ,
            e.appendChangeType = function(t, e) {
                var r = this
                  , i = this.operationQueue
                  , n = {
                    execute: function() {
                        var n = r.sourceBuffer[t];
                        n && (r.log("changing " + t + " sourceBuffer type to " + e),
                        n.changeType(e)),
                        i.shiftAndExecuteNext(t)
                    },
                    onStart: function() {},
                    onComplete: function() {},
                    onError: function(e) {
                        r.warn("Failed to change " + t + " SourceBuffer type", e)
                    }
                };
                i.append(n, t, !!this.pendingTracks[t])
            }
            ,
            e.onBufferAppending = function(t, e) {
                var r = this
                  , i = this.hls
                  , n = this.operationQueue
                  , a = this.tracks
                  , s = e.data
                  , o = e.type
                  , l = e.frag
                  , u = e.part
                  , h = e.chunkMeta
                  , d = h.buffering[o]
                  , c = self.performance.now();
                d.start = c;
                var f = l.stats.buffering
                  , g = u ? u.stats.buffering : null;
                0 === f.start && (f.start = c),
                g && 0 === g.start && (g.start = c);
                var v = a.audio
                  , m = !1;
                "audio" === o && "audio/mpeg" === (null == v ? void 0 : v.container) && (m = !this.lastMpegAudioChunk || 1 === h.id || this.lastMpegAudioChunk.sn !== h.sn,
                this.lastMpegAudioChunk = h);
                var p = l.start
                  , y = {
                    execute: function() {
                        if (d.executeStart = self.performance.now(),
                        m) {
                            var t = r.sourceBuffer[o];
                            if (t) {
                                var e = p - t.timestampOffset;
                                Math.abs(e) >= .1 && (r.log("Updating audio SourceBuffer timestampOffset to " + p + " (delta: " + e + ") sn: " + l.sn + ")"),
                                t.timestampOffset = p)
                            }
                        }
                        r.appendExecutor(s, o)
                    },
                    onStart: function() {},
                    onComplete: function() {
                        var t = self.performance.now();
                        d.executeEnd = d.end = t,
                        0 === f.first && (f.first = t),
                        g && 0 === g.first && (g.first = t);
                        var e = r.sourceBuffer
                          , i = {};
                        for (var n in e)
                            i[n] = ri.getBuffered(e[n]);
                        r.appendErrors[o] = 0,
                        "audio" === o || "video" === o ? r.appendErrors.audiovideo = 0 : (r.appendErrors.audio = 0,
                        r.appendErrors.video = 0),
                        r.hls.trigger(S.BUFFER_APPENDED, {
                            type: o,
                            frag: l,
                            part: u,
                            chunkMeta: h,
                            parent: l.type,
                            timeRanges: i
                        })
                    },
                    onError: function(t) {
                        var e = {
                            type: L.MEDIA_ERROR,
                            parent: l.type,
                            details: A.BUFFER_APPEND_ERROR,
                            sourceBufferName: o,
                            frag: l,
                            part: u,
                            chunkMeta: h,
                            error: t,
                            err: t,
                            fatal: !1
                        };
                        if (t.code === DOMException.QUOTA_EXCEEDED_ERR)
                            e.details = A.BUFFER_FULL_ERROR;
                        else {
                            var n = ++r.appendErrors[o];
                            e.details = A.BUFFER_APPEND_ERROR,
                            r.warn("Failed " + n + "/" + i.config.appendErrorMaxRetry + ' times to append segment in "' + o + '" sourceBuffer'),
                            n >= i.config.appendErrorMaxRetry && (e.fatal = !0)
                        }
                        i.trigger(S.ERROR, e)
                    }
                };
                n.append(y, o, !!this.pendingTracks[o])
            }
            ,
            e.onBufferFlushing = function(t, e) {
                var r = this
                  , i = this.operationQueue
                  , n = function(t) {
                    return {
                        execute: r.removeExecutor.bind(r, t, e.startOffset, e.endOffset),
                        onStart: function() {},
                        onComplete: function() {
                            r.hls.trigger(S.BUFFER_FLUSHED, {
                                type: t
                            })
                        },
                        onError: function(e) {
                            r.warn("Failed to remove from " + t + " SourceBuffer", e)
                        }
                    }
                };
                e.type ? i.append(n(e.type), e.type) : this.getSourceBufferTypes().forEach((function(t) {
                    i.append(n(t), t)
                }
                ))
            }
            ,
            e.onFragParsed = function(t, e) {
                var r = this
                  , i = e.frag
                  , n = e.part
                  , a = []
                  , s = n ? n.elementaryStreams : i.elementaryStreams;
                s[U] ? a.push("audiovideo") : (s[O] && a.push("audio"),
                s[N] && a.push("video")),
                0 === a.length && this.warn("Fragments must have at least one ElementaryStreamType set. type: " + i.type + " level: " + i.level + " sn: " + i.sn),
                this.blockBuffers((function() {
                    var t = self.performance.now();
                    i.stats.buffering.end = t,
                    n && (n.stats.buffering.end = t);
                    var e = n ? n.stats : i.stats;
                    r.hls.trigger(S.FRAG_BUFFERED, {
                        frag: i,
                        part: n,
                        stats: e,
                        id: i.type
                    })
                }
                ), a)
            }
            ,
            e.onFragChanged = function(t, e) {
                this.trimBuffers()
            }
            ,
            e.onBufferEos = function(t, e) {
                var r = this;
                this.getSourceBufferTypes().reduce((function(t, i) {
                    var n = r.sourceBuffer[i];
                    return !n || e.type && e.type !== i || (n.ending = !0,
                    n.ended || (n.ended = !0,
                    r.log(i + " sourceBuffer now EOS"))),
                    t && !(n && !n.ended)
                }
                ), !0) && (this.log("Queueing mediaSource.endOfStream()"),
                this.blockBuffers((function() {
                    r.getSourceBufferTypes().forEach((function(t) {
                        var e = r.sourceBuffer[t];
                        e && (e.ending = !1)
                    }
                    ));
                    var t = r.mediaSource;
                    t && "open" === t.readyState ? (r.log("Calling mediaSource.endOfStream()"),
                    t.endOfStream()) : t && r.log("Could not call mediaSource.endOfStream(). mediaSource.readyState: " + t.readyState)
                }
                )))
            }
            ,
            e.onLevelUpdated = function(t, e) {
                var r = e.details;
                r.fragments.length && (this.details = r,
                this.getSourceBufferTypes().length ? this.blockBuffers(this.updateMediaElementDuration.bind(this)) : this.updateMediaElementDuration())
            }
            ,
            e.trimBuffers = function() {
                var t = this.hls
                  , e = this.details
                  , r = this.media;
                if (r && null !== e && this.getSourceBufferTypes().length) {
                    var i = t.config
                      , n = r.currentTime
                      , a = e.levelTargetDuration
                      , s = e.live && null !== i.liveBackBufferLength ? i.liveBackBufferLength : i.backBufferLength;
                    if (y(s) && s > 0) {
                        var o = Math.max(s, a)
                          , l = Math.floor(n / a) * a - o;
                        this.flushBackBuffer(n, a, l)
                    }
                    if (y(i.frontBufferFlushThreshold) && i.frontBufferFlushThreshold > 0) {
                        var u = Math.max(i.maxBufferLength, i.frontBufferFlushThreshold)
                          , h = Math.max(u, a)
                          , d = Math.floor(n / a) * a + h;
                        this.flushFrontBuffer(n, a, d)
                    }
                }
            }
            ,
            e.flushBackBuffer = function(t, e, r) {
                var i = this
                  , n = this.details
                  , a = this.sourceBuffer;
                this.getSourceBufferTypes().forEach((function(s) {
                    var o = a[s];
                    if (o) {
                        var l = ri.getBuffered(o);
                        if (l.length > 0 && r > l.start(0)) {
                            if (i.hls.trigger(S.BACK_BUFFER_REACHED, {
                                bufferEnd: r
                            }),
                            null != n && n.live)
                                i.hls.trigger(S.LIVE_BACK_BUFFER_REACHED, {
                                    bufferEnd: r
                                });
                            else if (o.ended && l.end(l.length - 1) - t < 2 * e)
                                return void i.log("Cannot flush " + s + " back buffer while SourceBuffer is in ended state");
                            i.hls.trigger(S.BUFFER_FLUSHING, {
                                startOffset: 0,
                                endOffset: r,
                                type: s
                            })
                        }
                    }
                }
                ))
            }
            ,
            e.flushFrontBuffer = function(t, e, r) {
                var i = this
                  , n = this.sourceBuffer;
                this.getSourceBufferTypes().forEach((function(a) {
                    var s = n[a];
                    if (s) {
                        var o = ri.getBuffered(s)
                          , l = o.length;
                        if (l < 2)
                            return;
                        var u = o.start(l - 1)
                          , h = o.end(l - 1);
                        if (r > u || t >= u && t <= h)
                            return;
                        if (s.ended && t - h < 2 * e)
                            return void i.log("Cannot flush " + a + " front buffer while SourceBuffer is in ended state");
                        i.hls.trigger(S.BUFFER_FLUSHING, {
                            startOffset: u,
                            endOffset: 1 / 0,
                            type: a
                        })
                    }
                }
                ))
            }
            ,
            e.updateMediaElementDuration = function() {
                if (this.details && this.media && this.mediaSource && "open" === this.mediaSource.readyState) {
                    var t = this.details
                      , e = this.hls
                      , r = this.media
                      , i = this.mediaSource
                      , n = t.fragments[0].start + t.totalduration
                      , a = r.duration
                      , s = y(i.duration) ? i.duration : 0;
                    t.live && e.config.liveDurationInfinity ? (i.duration = 1 / 0,
                    this.updateSeekableRange(t)) : (n > s && n > a || !y(a)) && (this.log("Updating Media Source duration to " + n.toFixed(3)),
                    i.duration = n)
                }
            }
            ,
            e.updateSeekableRange = function(t) {
                var e = this.mediaSource
                  , r = t.fragments;
                if (r.length && t.live && null != e && e.setLiveSeekableRange) {
                    var i = Math.max(0, r[0].start)
                      , n = Math.max(i, i + t.totalduration);
                    this.log("Media Source duration is set to " + e.duration + ". Setting seekable range to " + i + "-" + n + "."),
                    e.setLiveSeekableRange(i, n)
                }
            }
            ,
            e.checkPendingTracks = function() {
                var t = this.bufferCodecEventsExpected
                  , e = this.operationQueue
                  , r = this.pendingTracks
                  , i = Object.keys(r).length;
                if (i && (!t || 2 === i || "audiovideo"in r)) {
                    this.createSourceBuffers(r),
                    this.pendingTracks = {};
                    var n = this.getSourceBufferTypes();
                    if (n.length)
                        this.hls.trigger(S.BUFFER_CREATED, {
                            tracks: this.tracks
                        }),
                        n.forEach((function(t) {
                            e.executeNext(t)
                        }
                        ));
                    else {
                        var a = new Error("could not create source buffer for media codec(s)");
                        this.hls.trigger(S.ERROR, {
                            type: L.MEDIA_ERROR,
                            details: A.BUFFER_INCOMPATIBLE_CODECS_ERROR,
                            fatal: !0,
                            error: a,
                            reason: a.message
                        })
                    }
                }
            }
            ,
            e.createSourceBuffers = function(t) {
                var e = this
                  , r = this.sourceBuffer
                  , i = this.mediaSource;
                if (!i)
                    throw Error("createSourceBuffers called when mediaSource was null");
                var n = function(n) {
                    if (!r[n]) {
                        var a, s = t[n];
                        if (!s)
                            throw Error("source buffer exists for track " + n + ", however track does not");
                        var o = -1 === (null == (a = s.levelCodec) ? void 0 : a.indexOf(",")) ? s.levelCodec : s.codec;
                        o && "audio" === n.slice(0, 5) && (o = ve(o, e.appendSource));
                        var l = s.container + ";codecs=" + o;
                        e.log("creating sourceBuffer(" + l + ")");
                        try {
                            var u = r[n] = i.addSourceBuffer(l)
                              , h = n;
                            e.addBufferListener(h, "updatestart", e._onSBUpdateStart),
                            e.addBufferListener(h, "updateend", e._onSBUpdateEnd),
                            e.addBufferListener(h, "error", e._onSBUpdateError),
                            e.appendSource && e.addBufferListener(h, "bufferedchange", (function(t, r) {
                                var i = r.removedRanges;
                                null != i && i.length && e.hls.trigger(S.BUFFER_FLUSHED, {
                                    type: n
                                })
                            }
                            )),
                            e.tracks[n] = {
                                buffer: u,
                                codec: o,
                                container: s.container,
                                levelCodec: s.levelCodec,
                                metadata: s.metadata,
                                id: s.id
                            }
                        } catch (t) {
                            e.error("error while trying to add sourceBuffer: " + t.message),
                            e.hls.trigger(S.ERROR, {
                                type: L.MEDIA_ERROR,
                                details: A.BUFFER_ADD_CODEC_ERROR,
                                fatal: !1,
                                error: t,
                                sourceBufferName: n,
                                mimeType: l
                            })
                        }
                    }
                };
                for (var a in t)
                    n(a)
            }
            ,
            e._onSBUpdateStart = function(t) {
                this.operationQueue.current(t).onStart()
            }
            ,
            e._onSBUpdateEnd = function(t) {
                var e;
                if ("closed" !== (null == (e = this.mediaSource) ? void 0 : e.readyState)) {
                    var r = this.operationQueue;
                    r.current(t).onComplete(),
                    r.shiftAndExecuteNext(t)
                } else
                    this.resetBuffer(t)
            }
            ,
            e._onSBUpdateError = function(t, e) {
                var r, i = new Error(t + " SourceBuffer error. MediaSource readyState: " + (null == (r = this.mediaSource) ? void 0 : r.readyState));
                this.error("" + i, e),
                this.hls.trigger(S.ERROR, {
                    type: L.MEDIA_ERROR,
                    details: A.BUFFER_APPENDING_ERROR,
                    sourceBufferName: t,
                    error: i,
                    fatal: !1
                });
                var n = this.operationQueue.current(t);
                n && n.onError(i)
            }
            ,
            e.removeExecutor = function(t, e, r) {
                var i = this.media
                  , n = this.mediaSource
                  , a = this.operationQueue
                  , s = this.sourceBuffer[t];
                if (!i || !n || !s)
                    return this.warn("Attempting to remove from the " + t + " SourceBuffer, but it does not exist"),
                    void a.shiftAndExecuteNext(t);
                var o = y(i.duration) ? i.duration : 1 / 0
                  , l = y(n.duration) ? n.duration : 1 / 0
                  , u = Math.max(0, e)
                  , h = Math.min(r, o, l);
                h > u && (!s.ending || s.ended) ? (s.ended = !1,
                this.log("Removing [" + u + "," + h + "] from the " + t + " SourceBuffer"),
                s.remove(u, h)) : a.shiftAndExecuteNext(t)
            }
            ,
            e.appendExecutor = function(t, e) {
                var r = this.sourceBuffer[e];
                if (r)
                    r.ended = !1,
                    r.appendBuffer(t);
                else if (!this.pendingTracks[e])
                    throw new Error("Attempting to append to the " + e + " SourceBuffer, but it does not exist")
            }
            ,
            e.blockBuffers = function(t, e) {
                var r = this;
                if (void 0 === e && (e = this.getSourceBufferTypes()),
                !e.length)
                    return this.log("Blocking operation requested, but no SourceBuffers exist"),
                    void Promise.resolve().then(t);
                var i = this.operationQueue
                  , n = e.map((function(t) {
                    return i.appendBlocker(t)
                }
                ));
                Promise.all(n).then((function() {
                    t(),
                    e.forEach((function(t) {
                        var e = r.sourceBuffer[t];
                        null != e && e.updating || i.shiftAndExecuteNext(t)
                    }
                    ))
                }
                ))
            }
            ,
            e.getSourceBufferTypes = function() {
                return Object.keys(this.sourceBuffer)
            }
            ,
            e.addBufferListener = function(t, e, r) {
                var i = this.sourceBuffer[t];
                if (i) {
                    var n = r.bind(this, t);
                    this.listeners[t].push({
                        event: e,
                        listener: n
                    }),
                    i.addEventListener(e, n)
                }
            }
            ,
            e.removeBufferListeners = function(t) {
                var e = this.sourceBuffer[t];
                e && this.listeners[t].forEach((function(t) {
                    e.removeEventListener(t.event, t.listener)
                }
                ))
            }
            ,
            s(t, [{
                key: "mediaSrc",
                get: function() {
                    var t, e, r = (null == (t = this.media) || null == (e = t.querySelector) ? void 0 : e.call(t, "source")) || this.media;
                    return null == r ? void 0 : r.src
                }
            }]),
            t
        }();
        function aa(t) {
            var e = t.querySelectorAll("source");
            [].slice.call(e).forEach((function(e) {
                t.removeChild(e)
            }
            ))
        }
        var sa = {
            42: 225,
            92: 233,
            94: 237,
            95: 243,
            96: 250,
            123: 231,
            124: 247,
            125: 209,
            126: 241,
            127: 9608,
            128: 174,
            129: 176,
            130: 189,
            131: 191,
            132: 8482,
            133: 162,
            134: 163,
            135: 9834,
            136: 224,
            137: 32,
            138: 232,
            139: 226,
            140: 234,
            141: 238,
            142: 244,
            143: 251,
            144: 193,
            145: 201,
            146: 211,
            147: 218,
            148: 220,
            149: 252,
            150: 8216,
            151: 161,
            152: 42,
            153: 8217,
            154: 9473,
            155: 169,
            156: 8480,
            157: 8226,
            158: 8220,
            159: 8221,
            160: 192,
            161: 194,
            162: 199,
            163: 200,
            164: 202,
            165: 203,
            166: 235,
            167: 206,
            168: 207,
            169: 239,
            170: 212,
            171: 217,
            172: 249,
            173: 219,
            174: 171,
            175: 187,
            176: 195,
            177: 227,
            178: 205,
            179: 204,
            180: 236,
            181: 210,
            182: 242,
            183: 213,
            184: 245,
            185: 123,
            186: 125,
            187: 92,
            188: 94,
            189: 95,
            190: 124,
            191: 8764,
            192: 196,
            193: 228,
            194: 214,
            195: 246,
            196: 223,
            197: 165,
            198: 164,
            199: 9475,
            200: 197,
            201: 229,
            202: 216,
            203: 248,
            204: 9487,
            205: 9491,
            206: 9495,
            207: 9499
        }
          , oa = function(t) {
            return String.fromCharCode(sa[t] || t)
        }
          , la = 15
          , ua = 100
          , ha = {
            17: 1,
            18: 3,
            21: 5,
            22: 7,
            23: 9,
            16: 11,
            19: 12,
            20: 14
        }
          , da = {
            17: 2,
            18: 4,
            21: 6,
            22: 8,
            23: 10,
            19: 13,
            20: 15
        }
          , ca = {
            25: 1,
            26: 3,
            29: 5,
            30: 7,
            31: 9,
            24: 11,
            27: 12,
            28: 14
        }
          , fa = {
            25: 2,
            26: 4,
            29: 6,
            30: 8,
            31: 10,
            27: 13,
            28: 15
        }
          , ga = ["white", "green", "blue", "cyan", "red", "yellow", "magenta", "black", "transparent"]
          , va = function() {
            function t() {
                this.time = null,
                this.verboseLevel = 0
            }
            return t.prototype.log = function(t, e) {
                if (this.verboseLevel >= t) {
                    var r = "function" == typeof e ? e() : e;
                    w.log(this.time + " [" + t + "] " + r)
                }
            }
            ,
            t
        }()
          , ma = function(t) {
            for (var e = [], r = 0; r < t.length; r++)
                e.push(t[r].toString(16));
            return e
        }
          , pa = function() {
            function t() {
                this.foreground = "white",
                this.underline = !1,
                this.italics = !1,
                this.background = "black",
                this.flash = !1
            }
            var e = t.prototype;
            return e.reset = function() {
                this.foreground = "white",
                this.underline = !1,
                this.italics = !1,
                this.background = "black",
                this.flash = !1
            }
            ,
            e.setStyles = function(t) {
                for (var e = ["foreground", "underline", "italics", "background", "flash"], r = 0; r < e.length; r++) {
                    var i = e[r];
                    t.hasOwnProperty(i) && (this[i] = t[i])
                }
            }
            ,
            e.isDefault = function() {
                return "white" === this.foreground && !this.underline && !this.italics && "black" === this.background && !this.flash
            }
            ,
            e.equals = function(t) {
                return this.foreground === t.foreground && this.underline === t.underline && this.italics === t.italics && this.background === t.background && this.flash === t.flash
            }
            ,
            e.copy = function(t) {
                this.foreground = t.foreground,
                this.underline = t.underline,
                this.italics = t.italics,
                this.background = t.background,
                this.flash = t.flash
            }
            ,
            e.toString = function() {
                return "color=" + this.foreground + ", underline=" + this.underline + ", italics=" + this.italics + ", background=" + this.background + ", flash=" + this.flash
            }
            ,
            t
        }()
          , ya = function() {
            function t() {
                this.uchar = " ",
                this.penState = new pa
            }
            var e = t.prototype;
            return e.reset = function() {
                this.uchar = " ",
                this.penState.reset()
            }
            ,
            e.setChar = function(t, e) {
                this.uchar = t,
                this.penState.copy(e)
            }
            ,
            e.setPenState = function(t) {
                this.penState.copy(t)
            }
            ,
            e.equals = function(t) {
                return this.uchar === t.uchar && this.penState.equals(t.penState)
            }
            ,
            e.copy = function(t) {
                this.uchar = t.uchar,
                this.penState.copy(t.penState)
            }
            ,
            e.isEmpty = function() {
                return " " === this.uchar && this.penState.isDefault()
            }
            ,
            t
        }()
          , Ea = function() {
            function t(t) {
                this.chars = [],
                this.pos = 0,
                this.currPenState = new pa,
                this.cueStartTime = null,
                this.logger = void 0;
                for (var e = 0; e < ua; e++)
                    this.chars.push(new ya);
                this.logger = t
            }
            var e = t.prototype;
            return e.equals = function(t) {
                for (var e = 0; e < ua; e++)
                    if (!this.chars[e].equals(t.chars[e]))
                        return !1;
                return !0
            }
            ,
            e.copy = function(t) {
                for (var e = 0; e < ua; e++)
                    this.chars[e].copy(t.chars[e])
            }
            ,
            e.isEmpty = function() {
                for (var t = !0, e = 0; e < ua; e++)
                    if (!this.chars[e].isEmpty()) {
                        t = !1;
                        break
                    }
                return t
            }
            ,
            e.setCursor = function(t) {
                this.pos !== t && (this.pos = t),
                this.pos < 0 ? (this.logger.log(3, "Negative cursor position " + this.pos),
                this.pos = 0) : this.pos > ua && (this.logger.log(3, "Too large cursor position " + this.pos),
                this.pos = ua)
            }
            ,
            e.moveCursor = function(t) {
                var e = this.pos + t;
                if (t > 1)
                    for (var r = this.pos + 1; r < e + 1; r++)
                        this.chars[r].setPenState(this.currPenState);
                this.setCursor(e)
            }
            ,
            e.backSpace = function() {
                this.moveCursor(-1),
                this.chars[this.pos].setChar(" ", this.currPenState)
            }
            ,
            e.insertChar = function(t) {
                var e = this;
                t >= 144 && this.backSpace();
                var r = oa(t);
                this.pos >= ua ? this.logger.log(0, (function() {
                    return "Cannot insert " + t.toString(16) + " (" + r + ") at position " + e.pos + ". Skipping it!"
                }
                )) : (this.chars[this.pos].setChar(r, this.currPenState),
                this.moveCursor(1))
            }
            ,
            e.clearFromPos = function(t) {
                var e;
                for (e = t; e < ua; e++)
                    this.chars[e].reset()
            }
            ,
            e.clear = function() {
                this.clearFromPos(0),
                this.pos = 0,
                this.currPenState.reset()
            }
            ,
            e.clearToEndOfRow = function() {
                this.clearFromPos(this.pos)
            }
            ,
            e.getTextString = function() {
                for (var t = [], e = !0, r = 0; r < ua; r++) {
                    var i = this.chars[r].uchar;
                    " " !== i && (e = !1),
                    t.push(i)
                }
                return e ? "" : t.join("")
            }
            ,
            e.setPenStyles = function(t) {
                this.currPenState.setStyles(t),
                this.chars[this.pos].setPenState(this.currPenState)
            }
            ,
            t
        }()
          , Ta = function() {
            function t(t) {
                this.rows = [],
                this.currRow = 14,
                this.nrRollUpRows = null,
                this.lastOutputScreen = null,
                this.logger = void 0;
                for (var e = 0; e < la; e++)
                    this.rows.push(new Ea(t));
                this.logger = t
            }
            var e = t.prototype;
            return e.reset = function() {
                for (var t = 0; t < la; t++)
                    this.rows[t].clear();
                this.currRow = 14
            }
            ,
            e.equals = function(t) {
                for (var e = !0, r = 0; r < la; r++)
                    if (!this.rows[r].equals(t.rows[r])) {
                        e = !1;
                        break
                    }
                return e
            }
            ,
            e.copy = function(t) {
                for (var e = 0; e < la; e++)
                    this.rows[e].copy(t.rows[e])
            }
            ,
            e.isEmpty = function() {
                for (var t = !0, e = 0; e < la; e++)
                    if (!this.rows[e].isEmpty()) {
                        t = !1;
                        break
                    }
                return t
            }
            ,
            e.backSpace = function() {
                this.rows[this.currRow].backSpace()
            }
            ,
            e.clearToEndOfRow = function() {
                this.rows[this.currRow].clearToEndOfRow()
            }
            ,
            e.insertChar = function(t) {
                this.rows[this.currRow].insertChar(t)
            }
            ,
            e.setPen = function(t) {
                this.rows[this.currRow].setPenStyles(t)
            }
            ,
            e.moveCursor = function(t) {
                this.rows[this.currRow].moveCursor(t)
            }
            ,
            e.setCursor = function(t) {
                this.logger.log(2, "setCursor: " + t),
                this.rows[this.currRow].setCursor(t)
            }
            ,
            e.setPAC = function(t) {
                this.logger.log(2, (function() {
                    return "pacData = " + JSON.stringify(t)
                }
                ));
                var e = t.row - 1;
                if (this.nrRollUpRows && e < this.nrRollUpRows - 1 && (e = this.nrRollUpRows - 1),
                this.nrRollUpRows && this.currRow !== e) {
                    for (var r = 0; r < la; r++)
                        this.rows[r].clear();
                    var i = this.currRow + 1 - this.nrRollUpRows
                      , n = this.lastOutputScreen;
                    if (n) {
                        var a = n.rows[i].cueStartTime
                          , s = this.logger.time;
                        if (null !== a && null !== s && a < s)
                            for (var o = 0; o < this.nrRollUpRows; o++)
                                this.rows[e - this.nrRollUpRows + o + 1].copy(n.rows[i + o])
                    }
                }
                this.currRow = e;
                var l = this.rows[this.currRow];
                if (null !== t.indent) {
                    var u = t.indent
                      , h = Math.max(u - 1, 0);
                    l.setCursor(t.indent),
                    t.color = l.chars[h].penState.foreground
                }
                var d = {
                    foreground: t.color,
                    underline: t.underline,
                    italics: t.italics,
                    background: "black",
                    flash: !1
                };
                this.setPen(d)
            }
            ,
            e.setBkgData = function(t) {
                this.logger.log(2, (function() {
                    return "bkgData = " + JSON.stringify(t)
                }
                )),
                this.backSpace(),
                this.setPen(t),
                this.insertChar(32)
            }
            ,
            e.setRollUpRows = function(t) {
                this.nrRollUpRows = t
            }
            ,
            e.rollUp = function() {
                var t = this;
                if (null !== this.nrRollUpRows) {
                    this.logger.log(1, (function() {
                        return t.getDisplayText()
                    }
                    ));
                    var e = this.currRow + 1 - this.nrRollUpRows
                      , r = this.rows.splice(e, 1)[0];
                    r.clear(),
                    this.rows.splice(this.currRow, 0, r),
                    this.logger.log(2, "Rolling up")
                } else
                    this.logger.log(3, "roll_up but nrRollUpRows not set yet")
            }
            ,
            e.getDisplayText = function(t) {
                t = t || !1;
                for (var e = [], r = "", i = -1, n = 0; n < la; n++) {
                    var a = this.rows[n].getTextString();
                    a && (i = n + 1,
                    t ? e.push("Row " + i + ": '" + a + "'") : e.push(a.trim()))
                }
                return e.length > 0 && (r = t ? "[" + e.join(" | ") + "]" : e.join("\n")),
                r
            }
            ,
            e.getTextAndFormat = function() {
                return this.rows
            }
            ,
            t
        }()
          , Sa = function() {
            function t(t, e, r) {
                this.chNr = void 0,
                this.outputFilter = void 0,
                this.mode = void 0,
                this.verbose = void 0,
                this.displayedMemory = void 0,
                this.nonDisplayedMemory = void 0,
                this.lastOutputScreen = void 0,
                this.currRollUpRow = void 0,
                this.writeScreen = void 0,
                this.cueStartTime = void 0,
                this.logger = void 0,
                this.chNr = t,
                this.outputFilter = e,
                this.mode = null,
                this.verbose = 0,
                this.displayedMemory = new Ta(r),
                this.nonDisplayedMemory = new Ta(r),
                this.lastOutputScreen = new Ta(r),
                this.currRollUpRow = this.displayedMemory.rows[14],
                this.writeScreen = this.displayedMemory,
                this.mode = null,
                this.cueStartTime = null,
                this.logger = r
            }
            var e = t.prototype;
            return e.reset = function() {
                this.mode = null,
                this.displayedMemory.reset(),
                this.nonDisplayedMemory.reset(),
                this.lastOutputScreen.reset(),
                this.outputFilter.reset(),
                this.currRollUpRow = this.displayedMemory.rows[14],
                this.writeScreen = this.displayedMemory,
                this.mode = null,
                this.cueStartTime = null
            }
            ,
            e.getHandler = function() {
                return this.outputFilter
            }
            ,
            e.setHandler = function(t) {
                this.outputFilter = t
            }
            ,
            e.setPAC = function(t) {
                this.writeScreen.setPAC(t)
            }
            ,
            e.setBkgData = function(t) {
                this.writeScreen.setBkgData(t)
            }
            ,
            e.setMode = function(t) {
                t !== this.mode && (this.mode = t,
                this.logger.log(2, (function() {
                    return "MODE=" + t
                }
                )),
                "MODE_POP-ON" === this.mode ? this.writeScreen = this.nonDisplayedMemory : (this.writeScreen = this.displayedMemory,
                this.writeScreen.reset()),
                "MODE_ROLL-UP" !== this.mode && (this.displayedMemory.nrRollUpRows = null,
                this.nonDisplayedMemory.nrRollUpRows = null),
                this.mode = t)
            }
            ,
            e.insertChars = function(t) {
                for (var e = this, r = 0; r < t.length; r++)
                    this.writeScreen.insertChar(t[r]);
                var i = this.writeScreen === this.displayedMemory ? "DISP" : "NON_DISP";
                this.logger.log(2, (function() {
                    return i + ": " + e.writeScreen.getDisplayText(!0)
                }
                )),
                "MODE_PAINT-ON" !== this.mode && "MODE_ROLL-UP" !== this.mode || (this.logger.log(1, (function() {
                    return "DISPLAYED: " + e.displayedMemory.getDisplayText(!0)
                }
                )),
                this.outputDataUpdate())
            }
            ,
            e.ccRCL = function() {
                this.logger.log(2, "RCL - Resume Caption Loading"),
                this.setMode("MODE_POP-ON")
            }
            ,
            e.ccBS = function() {
                this.logger.log(2, "BS - BackSpace"),
                "MODE_TEXT" !== this.mode && (this.writeScreen.backSpace(),
                this.writeScreen === this.displayedMemory && this.outputDataUpdate())
            }
            ,
            e.ccAOF = function() {}
            ,
            e.ccAON = function() {}
            ,
            e.ccDER = function() {
                this.logger.log(2, "DER- Delete to End of Row"),
                this.writeScreen.clearToEndOfRow(),
                this.outputDataUpdate()
            }
            ,
            e.ccRU = function(t) {
                this.logger.log(2, "RU(" + t + ") - Roll Up"),
                this.writeScreen = this.displayedMemory,
                this.setMode("MODE_ROLL-UP"),
                this.writeScreen.setRollUpRows(t)
            }
            ,
            e.ccFON = function() {
                this.logger.log(2, "FON - Flash On"),
                this.writeScreen.setPen({
                    flash: !0
                })
            }
            ,
            e.ccRDC = function() {
                this.logger.log(2, "RDC - Resume Direct Captioning"),
                this.setMode("MODE_PAINT-ON")
            }
            ,
            e.ccTR = function() {
                this.logger.log(2, "TR"),
                this.setMode("MODE_TEXT")
            }
            ,
            e.ccRTD = function() {
                this.logger.log(2, "RTD"),
                this.setMode("MODE_TEXT")
            }
            ,
            e.ccEDM = function() {
                this.logger.log(2, "EDM - Erase Displayed Memory"),
                this.displayedMemory.reset(),
                this.outputDataUpdate(!0)
            }
            ,
            e.ccCR = function() {
                this.logger.log(2, "CR - Carriage Return"),
                this.writeScreen.rollUp(),
                this.outputDataUpdate(!0)
            }
            ,
            e.ccENM = function() {
                this.logger.log(2, "ENM - Erase Non-displayed Memory"),
                this.nonDisplayedMemory.reset()
            }
            ,
            e.ccEOC = function() {
                var t = this;
                if (this.logger.log(2, "EOC - End Of Caption"),
                "MODE_POP-ON" === this.mode) {
                    var e = this.displayedMemory;
                    this.displayedMemory = this.nonDisplayedMemory,
                    this.nonDisplayedMemory = e,
                    this.writeScreen = this.nonDisplayedMemory,
                    this.logger.log(1, (function() {
                        return "DISP: " + t.displayedMemory.getDisplayText()
                    }
                    ))
                }
                this.outputDataUpdate(!0)
            }
            ,
            e.ccTO = function(t) {
                this.logger.log(2, "TO(" + t + ") - Tab Offset"),
                this.writeScreen.moveCursor(t)
            }
            ,
            e.ccMIDROW = function(t) {
                var e = {
                    flash: !1
                };
                if (e.underline = t % 2 == 1,
                e.italics = t >= 46,
                e.italics)
                    e.foreground = "white";
                else {
                    var r = Math.floor(t / 2) - 16;
                    e.foreground = ["white", "green", "blue", "cyan", "red", "yellow", "magenta"][r]
                }
                this.logger.log(2, "MIDROW: " + JSON.stringify(e)),
                this.writeScreen.setPen(e)
            }
            ,
            e.outputDataUpdate = function(t) {
                void 0 === t && (t = !1);
                var e = this.logger.time;
                null !== e && this.outputFilter && (null !== this.cueStartTime || this.displayedMemory.isEmpty() ? this.displayedMemory.equals(this.lastOutputScreen) || (this.outputFilter.newCue(this.cueStartTime, e, this.lastOutputScreen),
                t && this.outputFilter.dispatchCue && this.outputFilter.dispatchCue(),
                this.cueStartTime = this.displayedMemory.isEmpty() ? null : e) : this.cueStartTime = e,
                this.lastOutputScreen.copy(this.displayedMemory))
            }
            ,
            e.cueSplitAtTime = function(t) {
                this.outputFilter && (this.displayedMemory.isEmpty() || (this.outputFilter.newCue && this.outputFilter.newCue(this.cueStartTime, t, this.displayedMemory),
                this.cueStartTime = t))
            }
            ,
            t
        }()
          , La = function() {
            function t(t, e, r) {
                this.channels = void 0,
                this.currentChannel = 0,
                this.cmdHistory = {
                    a: null,
                    b: null
                },
                this.logger = void 0;
                var i = this.logger = new va;
                this.channels = [null, new Sa(t,e,i), new Sa(t + 1,r,i)]
            }
            var e = t.prototype;
            return e.getHandler = function(t) {
                return this.channels[t].getHandler()
            }
            ,
            e.setHandler = function(t, e) {
                this.channels[t].setHandler(e)
            }
            ,
            e.addData = function(t, e) {
                var r = this;
                this.logger.time = t;
                for (var i = function(t) {
                    var i = 127 & e[t]
                      , n = 127 & e[t + 1]
                      , a = !1
                      , s = null;
                    if (0 === i && 0 === n)
                        return 0;
                    r.logger.log(3, (function() {
                        return "[" + ma([e[t], e[t + 1]]) + "] -> (" + ma([i, n]) + ")"
                    }
                    ));
                    var o = r.cmdHistory;
                    if (i >= 16 && i <= 31) {
                        if (function(t, e, r) {
                            return r.a === t && r.b === e
                        }(i, n, o))
                            return Aa(null, null, o),
                            r.logger.log(3, (function() {
                                return "Repeated command (" + ma([i, n]) + ") is dropped"
                            }
                            )),
                            0;
                        Aa(i, n, r.cmdHistory),
                        (a = r.parseCmd(i, n)) || (a = r.parseMidrow(i, n)),
                        a || (a = r.parsePAC(i, n)),
                        a || (a = r.parseBackgroundAttributes(i, n))
                    } else
                        Aa(null, null, o);
                    if (!a && (s = r.parseChars(i, n))) {
                        var l = r.currentChannel;
                        l && l > 0 ? r.channels[l].insertChars(s) : r.logger.log(2, "No channel found yet. TEXT-MODE?")
                    }
                    a || s || r.logger.log(2, (function() {
                        return "Couldn't parse cleaned data " + ma([i, n]) + " orig: " + ma([e[t], e[t + 1]])
                    }
                    ))
                }, n = 0; n < e.length; n += 2)
                    i(n)
            }
            ,
            e.parseCmd = function(t, e) {
                if (!((20 === t || 28 === t || 21 === t || 29 === t) && e >= 32 && e <= 47 || (23 === t || 31 === t) && e >= 33 && e <= 35))
                    return !1;
                var r = 20 === t || 21 === t || 23 === t ? 1 : 2
                  , i = this.channels[r];
                return 20 === t || 21 === t || 28 === t || 29 === t ? 32 === e ? i.ccRCL() : 33 === e ? i.ccBS() : 34 === e ? i.ccAOF() : 35 === e ? i.ccAON() : 36 === e ? i.ccDER() : 37 === e ? i.ccRU(2) : 38 === e ? i.ccRU(3) : 39 === e ? i.ccRU(4) : 40 === e ? i.ccFON() : 41 === e ? i.ccRDC() : 42 === e ? i.ccTR() : 43 === e ? i.ccRTD() : 44 === e ? i.ccEDM() : 45 === e ? i.ccCR() : 46 === e ? i.ccENM() : 47 === e && i.ccEOC() : i.ccTO(e - 32),
                this.currentChannel = r,
                !0
            }
            ,
            e.parseMidrow = function(t, e) {
                var r = 0;
                if ((17 === t || 25 === t) && e >= 32 && e <= 47) {
                    if ((r = 17 === t ? 1 : 2) !== this.currentChannel)
                        return this.logger.log(0, "Mismatch channel in midrow parsing"),
                        !1;
                    var i = this.channels[r];
                    return !!i && (i.ccMIDROW(e),
                    this.logger.log(3, (function() {
                        return "MIDROW (" + ma([t, e]) + ")"
                    }
                    )),
                    !0)
                }
                return !1
            }
            ,
            e.parsePAC = function(t, e) {
                var r;
                if (!((t >= 17 && t <= 23 || t >= 25 && t <= 31) && e >= 64 && e <= 127 || (16 === t || 24 === t) && e >= 64 && e <= 95))
                    return !1;
                var i = t <= 23 ? 1 : 2;
                r = e >= 64 && e <= 95 ? 1 === i ? ha[t] : ca[t] : 1 === i ? da[t] : fa[t];
                var n = this.channels[i];
                return !!n && (n.setPAC(this.interpretPAC(r, e)),
                this.currentChannel = i,
                !0)
            }
            ,
            e.interpretPAC = function(t, e) {
                var r, i = {
                    color: null,
                    italics: !1,
                    indent: null,
                    underline: !1,
                    row: t
                };
                return r = e > 95 ? e - 96 : e - 64,
                i.underline = 1 == (1 & r),
                r <= 13 ? i.color = ["white", "green", "blue", "cyan", "red", "yellow", "magenta", "white"][Math.floor(r / 2)] : r <= 15 ? (i.italics = !0,
                i.color = "white") : i.indent = 4 * Math.floor((r - 16) / 2),
                i
            }
            ,
            e.parseChars = function(t, e) {
                var r, i, n = null, a = null;
                return t >= 25 ? (r = 2,
                a = t - 8) : (r = 1,
                a = t),
                a >= 17 && a <= 19 ? (i = 17 === a ? e + 80 : 18 === a ? e + 112 : e + 144,
                this.logger.log(2, (function() {
                    return "Special char '" + oa(i) + "' in channel " + r
                }
                )),
                n = [i]) : t >= 32 && t <= 127 && (n = 0 === e ? [t] : [t, e]),
                n && this.logger.log(3, (function() {
                    return "Char codes =  " + ma(n).join(",")
                }
                )),
                n
            }
            ,
            e.parseBackgroundAttributes = function(t, e) {
                var r;
                if (!((16 === t || 24 === t) && e >= 32 && e <= 47 || (23 === t || 31 === t) && e >= 45 && e <= 47))
                    return !1;
                var i = {};
                16 === t || 24 === t ? (r = Math.floor((e - 32) / 2),
                i.background = ga[r],
                e % 2 == 1 && (i.background = i.background + "_semi")) : 45 === e ? i.background = "transparent" : (i.foreground = "black",
                47 === e && (i.underline = !0));
                var n = t <= 23 ? 1 : 2;
                return this.channels[n].setBkgData(i),
                !0
            }
            ,
            e.reset = function() {
                for (var t = 0; t < Object.keys(this.channels).length; t++) {
                    var e = this.channels[t];
                    e && e.reset()
                }
                Aa(null, null, this.cmdHistory)
            }
            ,
            e.cueSplitAtTime = function(t) {
                for (var e = 0; e < this.channels.length; e++) {
                    var r = this.channels[e];
                    r && r.cueSplitAtTime(t)
                }
            }
            ,
            t
        }();
        function Aa(t, e, r) {
            r.a = t,
            r.b = e
        }
        var Ra = function() {
            function t(t, e) {
                this.timelineController = void 0,
                this.cueRanges = [],
                this.trackName = void 0,
                this.startTime = null,
                this.endTime = null,
                this.screen = null,
                this.timelineController = t,
                this.trackName = e
            }
            var e = t.prototype;
            return e.dispatchCue = function() {
                null !== this.startTime && (this.timelineController.addCues(this.trackName, this.startTime, this.endTime, this.screen, this.cueRanges),
                this.startTime = null)
            }
            ,
            e.newCue = function(t, e, r) {
                (null === this.startTime || this.startTime > t) && (this.startTime = t),
                this.endTime = e,
                this.screen = r,
                this.timelineController.createCaptionsTrack(this.trackName)
            }
            ,
            e.reset = function() {
                this.cueRanges = [],
                this.startTime = null
            }
            ,
            t
        }()
          , ba = function() {
            if (null != j && j.VTTCue)
                return self.VTTCue;
            var t = ["", "lr", "rl"]
              , e = ["start", "middle", "end", "left", "right"];
            function r(t, e) {
                if ("string" != typeof e)
                    return !1;
                if (!Array.isArray(t))
                    return !1;
                var r = e.toLowerCase();
                return !!~t.indexOf(r) && r
            }
            function i(t) {
                return r(e, t)
            }
            function n(t) {
                for (var e = arguments.length, r = new Array(e > 1 ? e - 1 : 0), i = 1; i < e; i++)
                    r[i - 1] = arguments[i];
                for (var n = 1; n < arguments.length; n++) {
                    var a = arguments[n];
                    for (var s in a)
                        t[s] = a[s]
                }
                return t
            }
            function a(e, a, s) {
                var o = this
                  , l = {
                    enumerable: !0
                };
                o.hasBeenReset = !1;
                var u = ""
                  , h = !1
                  , d = e
                  , c = a
                  , f = s
                  , g = null
                  , v = ""
                  , m = !0
                  , p = "auto"
                  , y = "start"
                  , E = 50
                  , T = "middle"
                  , S = 50
                  , L = "middle";
                Object.defineProperty(o, "id", n({}, l, {
                    get: function() {
                        return u
                    },
                    set: function(t) {
                        u = "" + t
                    }
                })),
                Object.defineProperty(o, "pauseOnExit", n({}, l, {
                    get: function() {
                        return h
                    },
                    set: function(t) {
                        h = !!t
                    }
                })),
                Object.defineProperty(o, "startTime", n({}, l, {
                    get: function() {
                        return d
                    },
                    set: function(t) {
                        if ("number" != typeof t)
                            throw new TypeError("Start time must be set to a number.");
                        d = t,
                        this.hasBeenReset = !0
                    }
                })),
                Object.defineProperty(o, "endTime", n({}, l, {
                    get: function() {
                        return c
                    },
                    set: function(t) {
                        if ("number" != typeof t)
                            throw new TypeError("End time must be set to a number.");
                        c = t,
                        this.hasBeenReset = !0
                    }
                })),
                Object.defineProperty(o, "text", n({}, l, {
                    get: function() {
                        return f
                    },
                    set: function(t) {
                        f = "" + t,
                        this.hasBeenReset = !0
                    }
                })),
                Object.defineProperty(o, "region", n({}, l, {
                    get: function() {
                        return g
                    },
                    set: function(t) {
                        g = t,
                        this.hasBeenReset = !0
                    }
                })),
                Object.defineProperty(o, "vertical", n({}, l, {
                    get: function() {
                        return v
                    },
                    set: function(e) {
                        var i = function(e) {
                            return r(t, e)
                        }(e);
                        if (!1 === i)
                            throw new SyntaxError("An invalid or illegal string was specified.");
                        v = i,
                        this.hasBeenReset = !0
                    }
                })),
                Object.defineProperty(o, "snapToLines", n({}, l, {
                    get: function() {
                        return m
                    },
                    set: function(t) {
                        m = !!t,
                        this.hasBeenReset = !0
                    }
                })),
                Object.defineProperty(o, "line", n({}, l, {
                    get: function() {
                        return p
                    },
                    set: function(t) {
                        if ("number" != typeof t && "auto" !== t)
                            throw new SyntaxError("An invalid number or illegal string was specified.");
                        p = t,
                        this.hasBeenReset = !0
                    }
                })),
                Object.defineProperty(o, "lineAlign", n({}, l, {
                    get: function() {
                        return y
                    },
                    set: function(t) {
                        var e = i(t);
                        if (!e)
                            throw new SyntaxError("An invalid or illegal string was specified.");
                        y = e,
                        this.hasBeenReset = !0
                    }
                })),
                Object.defineProperty(o, "position", n({}, l, {
                    get: function() {
                        return E
                    },
                    set: function(t) {
                        if (t < 0 || t > 100)
                            throw new Error("Position must be between 0 and 100.");
                        E = t,
                        this.hasBeenReset = !0
                    }
                })),
                Object.defineProperty(o, "positionAlign", n({}, l, {
                    get: function() {
                        return T
                    },
                    set: function(t) {
                        var e = i(t);
                        if (!e)
                            throw new SyntaxError("An invalid or illegal string was specified.");
                        T = e,
                        this.hasBeenReset = !0
                    }
                })),
                Object.defineProperty(o, "size", n({}, l, {
                    get: function() {
                        return S
                    },
                    set: function(t) {
                        if (t < 0 || t > 100)
                            throw new Error("Size must be between 0 and 100.");
                        S = t,
                        this.hasBeenReset = !0
                    }
                })),
                Object.defineProperty(o, "align", n({}, l, {
                    get: function() {
                        return L
                    },
                    set: function(t) {
                        var e = i(t);
                        if (!e)
                            throw new SyntaxError("An invalid or illegal string was specified.");
                        L = e,
                        this.hasBeenReset = !0
                    }
                })),
                o.displayState = void 0
            }
            return a.prototype.getCueAsHTML = function() {
                return self.WebVTT.convertCueToDOMTree(self, this.text)
            }
            ,
            a
        }()
          , ka = function() {
            function t() {}
            return t.prototype.decode = function(t, e) {
                if (!t)
                    return "";
                if ("string" != typeof t)
                    throw new Error("Error - expected string data.");
                return decodeURIComponent(encodeURIComponent(t))
            }
            ,
            t
        }();
        function Da(t) {
            function e(t, e, r, i) {
                return 3600 * (0 | t) + 60 * (0 | e) + (0 | r) + parseFloat(i || 0)
            }
            var r = t.match(/^(?:(\d+):)?(\d{2}):(\d{2})(\.\d+)?/);
            return r ? parseFloat(r[2]) > 59 ? e(r[2], r[3], 0, r[4]) : e(r[1], r[2], r[3], r[4]) : null
        }
        var Ia = function() {
            function t() {
                this.values = Object.create(null)
            }
            var e = t.prototype;
            return e.set = function(t, e) {
                this.get(t) || "" === e || (this.values[t] = e)
            }
            ,
            e.get = function(t, e, r) {
                return r ? this.has(t) ? this.values[t] : e[r] : this.has(t) ? this.values[t] : e
            }
            ,
            e.has = function(t) {
                return t in this.values
            }
            ,
            e.alt = function(t, e, r) {
                for (var i = 0; i < r.length; ++i)
                    if (e === r[i]) {
                        this.set(t, e);
                        break
                    }
            }
            ,
            e.integer = function(t, e) {
                /^-?\d+$/.test(e) && this.set(t, parseInt(e, 10))
            }
            ,
            e.percent = function(t, e) {
                if (/^([\d]{1,3})(\.[\d]*)?%$/.test(e)) {
                    var r = parseFloat(e);
                    if (r >= 0 && r <= 100)
                        return this.set(t, r),
                        !0
                }
                return !1
            }
            ,
            t
        }();
        function wa(t, e, r, i) {
            var n = i ? t.split(i) : [t];
            for (var a in n)
                if ("string" == typeof n[a]) {
                    var s = n[a].split(r);
                    2 === s.length && e(s[0], s[1])
                }
        }
        var Ca = new ba(0,0,"")
          , _a = "middle" === Ca.align ? "middle" : "center";
        function xa(t, e, r) {
            var i = t;
            function n() {
                var e = Da(t);
                if (null === e)
                    throw new Error("Malformed timestamp: " + i);
                return t = t.replace(/^[^\sa-zA-Z-]+/, ""),
                e
            }
            function a() {
                t = t.replace(/^\s+/, "")
            }
            if (a(),
            e.startTime = n(),
            a(),
            "--\x3e" !== t.slice(0, 3))
                throw new Error("Malformed time stamp (time stamps must be separated by '--\x3e'): " + i);
            t = t.slice(3),
            a(),
            e.endTime = n(),
            a(),
            function(t, e) {
                var i = new Ia;
                wa(t, (function(t, e) {
                    var n;
                    switch (t) {
                    case "region":
                        for (var a = r.length - 1; a >= 0; a--)
                            if (r[a].id === e) {
                                i.set(t, r[a].region);
                                break
                            }
                        break;
                    case "vertical":
                        i.alt(t, e, ["rl", "lr"]);
                        break;
                    case "line":
                        n = e.split(","),
                        i.integer(t, n[0]),
                        i.percent(t, n[0]) && i.set("snapToLines", !1),
                        i.alt(t, n[0], ["auto"]),
                        2 === n.length && i.alt("lineAlign", n[1], ["start", _a, "end"]);
                        break;
                    case "position":
                        n = e.split(","),
                        i.percent(t, n[0]),
                        2 === n.length && i.alt("positionAlign", n[1], ["start", _a, "end", "line-left", "line-right", "auto"]);
                        break;
                    case "size":
                        i.percent(t, e);
                        break;
                    case "align":
                        i.alt(t, e, ["start", _a, "end", "left", "right"])
                    }
                }
                ), /:/, /\s/),
                e.region = i.get("region", null),
                e.vertical = i.get("vertical", "");
                var n = i.get("line", "auto");
                "auto" === n && -1 === Ca.line && (n = -1),
                e.line = n,
                e.lineAlign = i.get("lineAlign", "start"),
                e.snapToLines = i.get("snapToLines", !0),
                e.size = i.get("size", 100),
                e.align = i.get("align", _a);
                var a = i.get("position", "auto");
                "auto" === a && 50 === Ca.position && (a = "start" === e.align || "left" === e.align ? 0 : "end" === e.align || "right" === e.align ? 100 : 50),
                e.position = a
            }(t, e)
        }
        function Pa(t) {
            return t.replace(/<br(?: \/)?>/gi, "\n")
        }
        var Fa = function() {
            function t() {
                this.state = "INITIAL",
                this.buffer = "",
                this.decoder = new ka,
                this.regionList = [],
                this.cue = null,
                this.oncue = void 0,
                this.onparsingerror = void 0,
                this.onflush = void 0
            }
            var e = t.prototype;
            return e.parse = function(t) {
                var e = this;
                function r() {
                    var t = e.buffer
                      , r = 0;
                    for (t = Pa(t); r < t.length && "\r" !== t[r] && "\n" !== t[r]; )
                        ++r;
                    var i = t.slice(0, r);
                    return "\r" === t[r] && ++r,
                    "\n" === t[r] && ++r,
                    e.buffer = t.slice(r),
                    i
                }
                t && (e.buffer += e.decoder.decode(t, {
                    stream: !0
                }));
                try {
                    var i = "";
                    if ("INITIAL" === e.state) {
                        if (!/\r\n|\n/.test(e.buffer))
                            return this;
                        var n = (i = r()).match(/^(ï»¿)?WEBVTT([ \t].*)?$/);
                        if (null == n || !n[0])
                            throw new Error("Malformed WebVTT signature.");
                        e.state = "HEADER"
                    }
                    for (var a = !1; e.buffer; ) {
                        if (!/\r\n|\n/.test(e.buffer))
                            return this;
                        switch (a ? a = !1 : i = r(),
                        e.state) {
                        case "HEADER":
                            /:/.test(i) ? wa(i, (function(t, e) {}
                            ), /:/) : i || (e.state = "ID");
                            continue;
                        case "NOTE":
                            i || (e.state = "ID");
                            continue;
                        case "ID":
                            if (/^NOTE($|[ \t])/.test(i)) {
                                e.state = "NOTE";
                                break
                            }
                            if (!i)
                                continue;
                            if (e.cue = new ba(0,0,""),
                            e.state = "CUE",
                            -1 === i.indexOf("--\x3e")) {
                                e.cue.id = i;
                                continue
                            }
                        case "CUE":
                            if (!e.cue) {
                                e.state = "BADCUE";
                                continue
                            }
                            try {
                                xa(i, e.cue, e.regionList)
                            } catch (t) {
                                e.cue = null,
                                e.state = "BADCUE";
                                continue
                            }
                            e.state = "CUETEXT";
                            continue;
                        case "CUETEXT":
                            var s = -1 !== i.indexOf("--\x3e");
                            if (!i || s && (a = !0)) {
                                e.oncue && e.cue && e.oncue(e.cue),
                                e.cue = null,
                                e.state = "ID";
                                continue
                            }
                            if (null === e.cue)
                                continue;
                            e.cue.text && (e.cue.text += "\n"),
                            e.cue.text += i;
                            continue;
                        case "BADCUE":
                            i || (e.state = "ID")
                        }
                    }
                } catch (t) {
                    "CUETEXT" === e.state && e.cue && e.oncue && e.oncue(e.cue),
                    e.cue = null,
                    e.state = "INITIAL" === e.state ? "BADWEBVTT" : "BADCUE"
                }
                return this
            }
            ,
            e.flush = function() {
                var t = this;
                try {
                    if ((t.cue || "HEADER" === t.state) && (t.buffer += "\n\n",
                    t.parse()),
                    "INITIAL" === t.state || "BADWEBVTT" === t.state)
                        throw new Error("Malformed WebVTT signature.")
                } catch (e) {
                    t.onparsingerror && t.onparsingerror(e)
                }
                return t.onflush && t.onflush(),
                this
            }
            ,
            t
        }()
          , Ma = /\r\n|\n\r|\n|\r/g
          , Oa = function(t, e, r) {
            return void 0 === r && (r = 0),
            t.slice(r, r + e.length) === e
        }
          , Na = function(t) {
            for (var e = 5381, r = t.length; r; )
                e = 33 * e ^ t.charCodeAt(--r);
            return (e >>> 0).toString()
        };
        function Ua(t, e, r) {
            return Na(t.toString()) + Na(e.toString()) + Na(r)
        }
        function Ba(t, e, r, i, n, a, s) {
            var o, l, u, h = new Fa, d = Rt(new Uint8Array(t)).trim().replace(Ma, "\n").split("\n"), c = [], f = e ? (o = e.baseTime,
            void 0 === (l = e.timescale) && (l = 1),
            Rn(o, An, 1 / l)) : 0, g = "00:00.000", v = 0, m = 0, p = !0;
            h.oncue = function(t) {
                var a = r[i]
                  , s = r.ccOffset
                  , o = (v - f) / 9e4;
                if (null != a && a.new && (void 0 !== m ? s = r.ccOffset = a.start : function(t, e, r) {
                    var i = t[e]
                      , n = t[i.prevCC];
                    if (!n || !n.new && i.new)
                        return t.ccOffset = t.presentationOffset = i.start,
                        void (i.new = !1);
                    for (; null != (a = n) && a.new; ) {
                        var a;
                        t.ccOffset += i.start - n.start,
                        i.new = !1,
                        n = t[(i = n).prevCC]
                    }
                    t.presentationOffset = r
                }(r, i, o)),
                o) {
                    if (!e)
                        return void (u = new Error("Missing initPTS for VTT MPEGTS"));
                    s = o - r.presentationOffset
                }
                var l = t.endTime - t.startTime
                  , h = wn(9e4 * (t.startTime + s - m), 9e4 * n) / 9e4;
                t.startTime = Math.max(h, 0),
                t.endTime = Math.max(h + l, 0);
                var d = t.text.trim();
                t.text = decodeURIComponent(encodeURIComponent(d)),
                t.id || (t.id = Ua(t.startTime, t.endTime, d)),
                t.endTime > 0 && c.push(t)
            }
            ,
            h.onparsingerror = function(t) {
                u = t
            }
            ,
            h.onflush = function() {
                u ? s(u) : a(c)
            }
            ,
            d.forEach((function(t) {
                if (p) {
                    if (Oa(t, "X-TIMESTAMP-MAP=")) {
                        p = !1,
                        t.slice(16).split(",").forEach((function(t) {
                            Oa(t, "LOCAL:") ? g = t.slice(6) : Oa(t, "MPEGTS:") && (v = parseInt(t.slice(7)))
                        }
                        ));
                        try {
                            m = function(t) {
                                var e = parseInt(t.slice(-3))
                                  , r = parseInt(t.slice(-6, -4))
                                  , i = parseInt(t.slice(-9, -7))
                                  , n = t.length > 9 ? parseInt(t.substring(0, t.indexOf(":"))) : 0;
                                if (!(y(e) && y(r) && y(i) && y(n)))
                                    throw Error("Malformed X-TIMESTAMP-MAP: Local:" + t);
                                return e += 1e3 * r,
                                (e += 6e4 * i) + 36e5 * n
                            }(g) / 1e3
                        } catch (t) {
                            u = t
                        }
                        return
                    }
                    "" === t && (p = !1)
                }
                h.parse(t + "\n")
            }
            )),
            h.flush()
        }
        var Ga = "stpp.ttml.im1t"
          , Ka = /^(\d{2,}):(\d{2}):(\d{2}):(\d{2})\.?(\d+)?$/
          , Ha = /^(\d*(?:\.\d*)?)(h|m|s|ms|f|t)$/
          , Va = {
            left: "start",
            center: "center",
            right: "end",
            start: "start",
            end: "end"
        };
        function Ya(t, e, r, i) {
            var n = Ot(new Uint8Array(t), ["mdat"]);
            if (0 !== n.length) {
                var a, s, l, u, h = n.map((function(t) {
                    return Rt(t)
                }
                )), d = (a = e.baseTime,
                s = 1,
                void 0 === (l = e.timescale) && (l = 1),
                void 0 === u && (u = !1),
                Rn(a, s, 1 / l, u));
                try {
                    h.forEach((function(t) {
                        return r(function(t, e) {
                            var r = (new DOMParser).parseFromString(t, "text/xml")
                              , i = r.getElementsByTagName("tt")[0];
                            if (!i)
                                throw new Error("Invalid ttml");
                            var n = {
                                frameRate: 30,
                                subFrameRate: 1,
                                frameRateMultiplier: 0,
                                tickRate: 0
                            }
                              , a = Object.keys(n).reduce((function(t, e) {
                                return t[e] = i.getAttribute("ttp:" + e) || n[e],
                                t
                            }
                            ), {})
                              , s = "preserve" !== i.getAttribute("xml:space")
                              , l = ja(Wa(i, "styling", "style"))
                              , u = ja(Wa(i, "layout", "region"))
                              , h = Wa(i, "body", "[begin]");
                            return [].map.call(h, (function(t) {
                                var r = qa(t, s);
                                if (!r || !t.hasAttribute("begin"))
                                    return null;
                                var i = Qa(t.getAttribute("begin"), a)
                                  , n = Qa(t.getAttribute("dur"), a)
                                  , h = Qa(t.getAttribute("end"), a);
                                if (null === i)
                                    throw za(t);
                                if (null === h) {
                                    if (null === n)
                                        throw za(t);
                                    h = i + n
                                }
                                var d = new ba(i - e,h - e,r);
                                d.id = Ua(d.startTime, d.endTime, d.text);
                                var c = function(t, e, r) {
                                    var i = "http://www.w3.org/ns/ttml#styling"
                                      , n = null
                                      , a = ["displayAlign", "textAlign", "color", "backgroundColor", "fontSize", "fontFamily"]
                                      , s = null != t && t.hasAttribute("style") ? t.getAttribute("style") : null;
                                    return s && r.hasOwnProperty(s) && (n = r[s]),
                                    a.reduce((function(r, a) {
                                        var s = Xa(e, i, a) || Xa(t, i, a) || Xa(n, i, a);
                                        return s && (r[a] = s),
                                        r
                                    }
                                    ), {})
                                }(u[t.getAttribute("region")], l[t.getAttribute("style")], l)
                                  , f = c.textAlign;
                                if (f) {
                                    var g = Va[f];
                                    g && (d.lineAlign = g),
                                    d.align = f
                                }
                                return o(d, c),
                                d
                            }
                            )).filter((function(t) {
                                return null !== t
                            }
                            ))
                        }(t, d))
                    }
                    ))
                } catch (t) {
                    i(t)
                }
            } else
                i(new Error("Could not parse IMSC1 mdat"))
        }
        function Wa(t, e, r) {
            var i = t.getElementsByTagName(e)[0];
            return i ? [].slice.call(i.querySelectorAll(r)) : []
        }
        function ja(t) {
            return t.reduce((function(t, e) {
                var r = e.getAttribute("xml:id");
                return r && (t[r] = e),
                t
            }
            ), {})
        }
        function qa(t, e) {
            return [].slice.call(t.childNodes).reduce((function(t, r, i) {
                var n;
                return "br" === r.nodeName && i ? t + "\n" : null != (n = r.childNodes) && n.length ? qa(r, e) : e ? t + r.textContent.trim().replace(/\s+/g, " ") : t + r.textContent
            }
            ), "")
        }
        function Xa(t, e, r) {
            return t && t.hasAttributeNS(e, r) ? t.getAttributeNS(e, r) : null
        }
        function za(t) {
            return new Error("Could not parse ttml timestamp " + t)
        }
        function Qa(t, e) {
            if (!t)
                return null;
            var r = Da(t);
            return null === r && (Ka.test(t) ? r = function(t, e) {
                var r = Ka.exec(t)
                  , i = (0 | r[4]) + (0 | r[5]) / e.subFrameRate;
                return 3600 * (0 | r[1]) + 60 * (0 | r[2]) + (0 | r[3]) + i / e.frameRate
            }(t, e) : Ha.test(t) && (r = function(t, e) {
                var r = Ha.exec(t)
                  , i = Number(r[1]);
                switch (r[2]) {
                case "h":
                    return 3600 * i;
                case "m":
                    return 60 * i;
                case "ms":
                    return 1e3 * i;
                case "f":
                    return i / e.frameRate;
                case "t":
                    return i / e.tickRate
                }
                return i
            }(t, e))),
            r
        }
        var Ja = function() {
            function t(t) {
                this.hls = void 0,
                this.media = null,
                this.config = void 0,
                this.enabled = !0,
                this.Cues = void 0,
                this.textTracks = [],
                this.tracks = [],
                this.initPTS = [],
                this.unparsedVttFrags = [],
                this.captionsTracks = {},
                this.nonNativeCaptionsTracks = {},
                this.cea608Parser1 = void 0,
                this.cea608Parser2 = void 0,
                this.lastCc = -1,
                this.lastSn = -1,
                this.lastPartIndex = -1,
                this.prevCC = -1,
                this.vttCCs = {
                    ccOffset: 0,
                    presentationOffset: 0,
                    0: {
                        start: 0,
                        prevCC: -1,
                        new: !0
                    }
                },
                this.captionsProperties = void 0,
                this.hls = t,
                this.config = t.config,
                this.Cues = t.config.cueHandler,
                this.captionsProperties = {
                    textTrack1: {
                        label: this.config.captionsTextTrack1Label,
                        languageCode: this.config.captionsTextTrack1LanguageCode
                    },
                    textTrack2: {
                        label: this.config.captionsTextTrack2Label,
                        languageCode: this.config.captionsTextTrack2LanguageCode
                    },
                    textTrack3: {
                        label: this.config.captionsTextTrack3Label,
                        languageCode: this.config.captionsTextTrack3LanguageCode
                    },
                    textTrack4: {
                        label: this.config.captionsTextTrack4Label,
                        languageCode: this.config.captionsTextTrack4LanguageCode
                    }
                },
                t.on(S.MEDIA_ATTACHING, this.onMediaAttaching, this),
                t.on(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.MANIFEST_LOADED, this.onManifestLoaded, this),
                t.on(S.SUBTITLE_TRACKS_UPDATED, this.onSubtitleTracksUpdated, this),
                t.on(S.FRAG_LOADING, this.onFragLoading, this),
                t.on(S.FRAG_LOADED, this.onFragLoaded, this),
                t.on(S.FRAG_PARSING_USERDATA, this.onFragParsingUserdata, this),
                t.on(S.FRAG_DECRYPTED, this.onFragDecrypted, this),
                t.on(S.INIT_PTS_FOUND, this.onInitPtsFound, this),
                t.on(S.SUBTITLE_TRACKS_CLEARED, this.onSubtitleTracksCleared, this),
                t.on(S.BUFFER_FLUSHING, this.onBufferFlushing, this)
            }
            var e = t.prototype;
            return e.destroy = function() {
                var t = this.hls;
                t.off(S.MEDIA_ATTACHING, this.onMediaAttaching, this),
                t.off(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.MANIFEST_LOADED, this.onManifestLoaded, this),
                t.off(S.SUBTITLE_TRACKS_UPDATED, this.onSubtitleTracksUpdated, this),
                t.off(S.FRAG_LOADING, this.onFragLoading, this),
                t.off(S.FRAG_LOADED, this.onFragLoaded, this),
                t.off(S.FRAG_PARSING_USERDATA, this.onFragParsingUserdata, this),
                t.off(S.FRAG_DECRYPTED, this.onFragDecrypted, this),
                t.off(S.INIT_PTS_FOUND, this.onInitPtsFound, this),
                t.off(S.SUBTITLE_TRACKS_CLEARED, this.onSubtitleTracksCleared, this),
                t.off(S.BUFFER_FLUSHING, this.onBufferFlushing, this),
                this.hls = this.config = null,
                this.cea608Parser1 = this.cea608Parser2 = void 0
            }
            ,
            e.initCea608Parsers = function() {
                if (this.config.enableCEA708Captions && (!this.cea608Parser1 || !this.cea608Parser2)) {
                    var t = new Ra(this,"textTrack1")
                      , e = new Ra(this,"textTrack2")
                      , r = new Ra(this,"textTrack3")
                      , i = new Ra(this,"textTrack4");
                    this.cea608Parser1 = new La(1,t,e),
                    this.cea608Parser2 = new La(3,r,i)
                }
            }
            ,
            e.addCues = function(t, e, r, i, n) {
                for (var a, s, o, l, u = !1, h = n.length; h--; ) {
                    var d = n[h]
                      , c = (a = d[0],
                    s = d[1],
                    o = e,
                    l = r,
                    Math.min(s, l) - Math.max(a, o));
                    if (c >= 0 && (d[0] = Math.min(d[0], e),
                    d[1] = Math.max(d[1], r),
                    u = !0,
                    c / (r - e) > .5))
                        return
                }
                if (u || n.push([e, r]),
                this.config.renderTextTracksNatively) {
                    var f = this.captionsTracks[t];
                    this.Cues.newCue(f, e, r, i)
                } else {
                    var g = this.Cues.newCue(null, e, r, i);
                    this.hls.trigger(S.CUES_PARSED, {
                        type: "captions",
                        cues: g,
                        track: t
                    })
                }
            }
            ,
            e.onInitPtsFound = function(t, e) {
                var r = this
                  , i = e.frag
                  , n = e.id
                  , a = e.initPTS
                  , s = e.timescale
                  , o = this.unparsedVttFrags;
                "main" === n && (this.initPTS[i.cc] = {
                    baseTime: a,
                    timescale: s
                }),
                o.length && (this.unparsedVttFrags = [],
                o.forEach((function(t) {
                    r.onFragLoaded(S.FRAG_LOADED, t)
                }
                )))
            }
            ,
            e.getExistingTrack = function(t, e) {
                var r = this.media;
                if (r)
                    for (var i = 0; i < r.textTracks.length; i++) {
                        var n = r.textTracks[i];
                        if (Za(n, {
                            name: t,
                            lang: e,
                            attrs: {}
                        }))
                            return n
                    }
                return null
            }
            ,
            e.createCaptionsTrack = function(t) {
                this.config.renderTextTracksNatively ? this.createNativeTrack(t) : this.createNonNativeTrack(t)
            }
            ,
            e.createNativeTrack = function(t) {
                if (!this.captionsTracks[t]) {
                    var e = this.captionsProperties
                      , r = this.captionsTracks
                      , i = this.media
                      , n = e[t]
                      , a = n.label
                      , s = n.languageCode
                      , o = this.getExistingTrack(a, s);
                    if (o)
                        r[t] = o,
                        He(r[t]),
                        Ge(r[t], i);
                    else {
                        var l = this.createTextTrack("captions", a, s);
                        l && (l[t] = !0,
                        r[t] = l)
                    }
                }
            }
            ,
            e.createNonNativeTrack = function(t) {
                if (!this.nonNativeCaptionsTracks[t]) {
                    var e = this.captionsProperties[t];
                    if (e) {
                        var r = {
                            _id: t,
                            label: e.label,
                            kind: "captions",
                            default: !!e.media && !!e.media.default,
                            closedCaptions: e.media
                        };
                        this.nonNativeCaptionsTracks[t] = r,
                        this.hls.trigger(S.NON_NATIVE_TEXT_TRACKS_FOUND, {
                            tracks: [r]
                        })
                    }
                }
            }
            ,
            e.createTextTrack = function(t, e, r) {
                var i = this.media;
                if (i)
                    return i.addTextTrack(t, e, r)
            }
            ,
            e.onMediaAttaching = function(t, e) {
                this.media = e.media,
                this._cleanTracks()
            }
            ,
            e.onMediaDetaching = function() {
                var t = this.captionsTracks;
                Object.keys(t).forEach((function(e) {
                    He(t[e]),
                    delete t[e]
                }
                )),
                this.nonNativeCaptionsTracks = {}
            }
            ,
            e.onManifestLoading = function() {
                this.lastCc = -1,
                this.lastSn = -1,
                this.lastPartIndex = -1,
                this.prevCC = -1,
                this.vttCCs = {
                    ccOffset: 0,
                    presentationOffset: 0,
                    0: {
                        start: 0,
                        prevCC: -1,
                        new: !0
                    }
                },
                this._cleanTracks(),
                this.tracks = [],
                this.captionsTracks = {},
                this.nonNativeCaptionsTracks = {},
                this.textTracks = [],
                this.unparsedVttFrags = [],
                this.initPTS = [],
                this.cea608Parser1 && this.cea608Parser2 && (this.cea608Parser1.reset(),
                this.cea608Parser2.reset())
            }
            ,
            e._cleanTracks = function() {
                var t = this.media;
                if (t) {
                    var e = t.textTracks;
                    if (e)
                        for (var r = 0; r < e.length; r++)
                            He(e[r])
                }
            }
            ,
            e.onSubtitleTracksUpdated = function(t, e) {
                var r = this
                  , i = e.subtitleTracks || []
                  , n = i.some((function(t) {
                    return t.textCodec === Ga
                }
                ));
                if (this.config.enableWebVTT || n && this.config.enableIMSC1) {
                    if (Xn(this.tracks, i))
                        return void (this.tracks = i);
                    if (this.textTracks = [],
                    this.tracks = i,
                    this.config.renderTextTracksNatively) {
                        var a = this.media
                          , s = a ? Ye(a.textTracks) : null;
                        if (this.tracks.forEach((function(t, e) {
                            var i;
                            if (s) {
                                for (var n = null, a = 0; a < s.length; a++)
                                    if (s[a] && Za(s[a], t)) {
                                        n = s[a],
                                        s[a] = null;
                                        break
                                    }
                                n && (i = n)
                            }
                            if (i)
                                He(i);
                            else {
                                var o = $a(t);
                                (i = r.createTextTrack(o, t.name, t.lang)) && (i.mode = "disabled")
                            }
                            i && r.textTracks.push(i)
                        }
                        )),
                        null != s && s.length) {
                            var o = s.filter((function(t) {
                                return null !== t
                            }
                            )).map((function(t) {
                                return t.label
                            }
                            ));
                            o.length && w.warn("Media element contains unused subtitle tracks: " + o.join(", ") + ". Replace media element for each source to clear TextTracks and captions menu.")
                        }
                    } else if (this.tracks.length) {
                        var l = this.tracks.map((function(t) {
                            return {
                                label: t.name,
                                kind: t.type.toLowerCase(),
                                default: t.default,
                                subtitleTrack: t
                            }
                        }
                        ));
                        this.hls.trigger(S.NON_NATIVE_TEXT_TRACKS_FOUND, {
                            tracks: l
                        })
                    }
                }
            }
            ,
            e.onManifestLoaded = function(t, e) {
                var r = this;
                this.config.enableCEA708Captions && e.captions && e.captions.forEach((function(t) {
                    var e = /(?:CC|SERVICE)([1-4])/.exec(t.instreamId);
                    if (e) {
                        var i = "textTrack" + e[1]
                          , n = r.captionsProperties[i];
                        n && (n.label = t.name,
                        t.lang && (n.languageCode = t.lang),
                        n.media = t)
                    }
                }
                ))
            }
            ,
            e.closedCaptionsForLevel = function(t) {
                var e = this.hls.levels[t.level];
                return null == e ? void 0 : e.attrs["CLOSED-CAPTIONS"]
            }
            ,
            e.onFragLoading = function(t, e) {
                if (this.enabled && e.frag.type === Fe) {
                    var r, i, n = this.cea608Parser1, a = this.cea608Parser2, s = this.lastSn, o = e.frag, l = o.cc, u = o.sn, h = null != (r = null == (i = e.part) ? void 0 : i.index) ? r : -1;
                    n && a && (u !== s + 1 || u === s && h !== this.lastPartIndex + 1 || l !== this.lastCc) && (n.reset(),
                    a.reset()),
                    this.lastCc = l,
                    this.lastSn = u,
                    this.lastPartIndex = h
                }
            }
            ,
            e.onFragLoaded = function(t, e) {
                var r = e.frag
                  , i = e.payload;
                if (r.type === Oe)
                    if (i.byteLength) {
                        var n = r.decryptdata
                          , a = "stats"in e;
                        if (null == n || !n.encrypted || a) {
                            var s = this.tracks[r.level]
                              , o = this.vttCCs;
                            o[r.cc] || (o[r.cc] = {
                                start: r.start,
                                prevCC: this.prevCC,
                                new: !0
                            },
                            this.prevCC = r.cc),
                            s && s.textCodec === Ga ? this._parseIMSC1(r, i) : this._parseVTTs(e)
                        }
                    } else
                        this.hls.trigger(S.SUBTITLE_FRAG_PROCESSED, {
                            success: !1,
                            frag: r,
                            error: new Error("Empty subtitle payload")
                        })
            }
            ,
            e._parseIMSC1 = function(t, e) {
                var r = this
                  , i = this.hls;
                Ya(e, this.initPTS[t.cc], (function(e) {
                    r._appendCues(e, t.level),
                    i.trigger(S.SUBTITLE_FRAG_PROCESSED, {
                        success: !0,
                        frag: t
                    })
                }
                ), (function(e) {
                    w.log("Failed to parse IMSC1: " + e),
                    i.trigger(S.SUBTITLE_FRAG_PROCESSED, {
                        success: !1,
                        frag: t,
                        error: e
                    })
                }
                ))
            }
            ,
            e._parseVTTs = function(t) {
                var e, r = this, i = t.frag, n = t.payload, a = this.initPTS, s = this.unparsedVttFrags, o = a.length - 1;
                if (a[i.cc] || -1 !== o) {
                    var l = this.hls;
                    Ba(null != (e = i.initSegment) && e.data ? Wt(i.initSegment.data, new Uint8Array(n)) : n, this.initPTS[i.cc], this.vttCCs, i.cc, i.start, (function(t) {
                        r._appendCues(t, i.level),
                        l.trigger(S.SUBTITLE_FRAG_PROCESSED, {
                            success: !0,
                            frag: i
                        })
                    }
                    ), (function(e) {
                        var a = "Missing initPTS for VTT MPEGTS" === e.message;
                        a ? s.push(t) : r._fallbackToIMSC1(i, n),
                        w.log("Failed to parse VTT cue: " + e),
                        a && o > i.cc || l.trigger(S.SUBTITLE_FRAG_PROCESSED, {
                            success: !1,
                            frag: i,
                            error: e
                        })
                    }
                    ))
                } else
                    s.push(t)
            }
            ,
            e._fallbackToIMSC1 = function(t, e) {
                var r = this
                  , i = this.tracks[t.level];
                i.textCodec || Ya(e, this.initPTS[t.cc], (function() {
                    i.textCodec = Ga,
                    r._parseIMSC1(t, e)
                }
                ), (function() {
                    i.textCodec = "wvtt"
                }
                ))
            }
            ,
            e._appendCues = function(t, e) {
                var r = this.hls;
                if (this.config.renderTextTracksNatively) {
                    var i = this.textTracks[e];
                    if (!i || "disabled" === i.mode)
                        return;
                    t.forEach((function(t) {
                        return Ke(i, t)
                    }
                    ))
                } else {
                    var n = this.tracks[e];
                    if (!n)
                        return;
                    var a = n.default ? "default" : "subtitles" + e;
                    r.trigger(S.CUES_PARSED, {
                        type: "subtitles",
                        cues: t,
                        track: a
                    })
                }
            }
            ,
            e.onFragDecrypted = function(t, e) {
                e.frag.type === Oe && this.onFragLoaded(S.FRAG_LOADED, e)
            }
            ,
            e.onSubtitleTracksCleared = function() {
                this.tracks = [],
                this.captionsTracks = {}
            }
            ,
            e.onFragParsingUserdata = function(t, e) {
                this.initCea608Parsers();
                var r = this.cea608Parser1
                  , i = this.cea608Parser2;
                if (this.enabled && r && i) {
                    var n = e.frag
                      , a = e.samples;
                    if (n.type !== Fe || "NONE" !== this.closedCaptionsForLevel(n))
                        for (var s = 0; s < a.length; s++) {
                            var o = a[s].bytes;
                            if (o) {
                                var l = this.extractCea608Data(o);
                                r.addData(a[s].pts, l[0]),
                                i.addData(a[s].pts, l[1])
                            }
                        }
                }
            }
            ,
            e.onBufferFlushing = function(t, e) {
                var r = e.startOffset
                  , i = e.endOffset
                  , n = e.endOffsetSubtitles
                  , a = e.type
                  , s = this.media;
                if (s && !(s.currentTime < i)) {
                    if (!a || "video" === a) {
                        var o = this.captionsTracks;
                        Object.keys(o).forEach((function(t) {
                            return Ve(o[t], r, i)
                        }
                        ))
                    }
                    if (this.config.renderTextTracksNatively && 0 === r && void 0 !== n) {
                        var l = this.textTracks;
                        Object.keys(l).forEach((function(t) {
                            return Ve(l[t], r, n)
                        }
                        ))
                    }
                }
            }
            ,
            e.extractCea608Data = function(t) {
                for (var e = [[], []], r = 31 & t[0], i = 2, n = 0; n < r; n++) {
                    var a = t[i++]
                      , s = 127 & t[i++]
                      , o = 127 & t[i++];
                    if ((0 !== s || 0 !== o) && 0 != (4 & a)) {
                        var l = 3 & a;
                        0 !== l && 1 !== l || (e[l].push(s),
                        e[l].push(o))
                    }
                }
                return e
            }
            ,
            t
        }();
        function $a(t) {
            return t.characteristics && /transcribes-spoken-dialog/gi.test(t.characteristics) && /describes-music-and-sound/gi.test(t.characteristics) ? "captions" : "subtitles"
        }
        function Za(t, e) {
            return !!t && t.kind === $a(e) && Qn(e, t)
        }
        var ts = function() {
            function t(t) {
                this.hls = void 0,
                this.autoLevelCapping = void 0,
                this.firstLevel = void 0,
                this.media = void 0,
                this.restrictedLevels = void 0,
                this.timer = void 0,
                this.clientRect = void 0,
                this.streamController = void 0,
                this.hls = t,
                this.autoLevelCapping = Number.POSITIVE_INFINITY,
                this.firstLevel = -1,
                this.media = null,
                this.restrictedLevels = [],
                this.timer = void 0,
                this.clientRect = null,
                this.registerListeners()
            }
            var e = t.prototype;
            return e.setStreamController = function(t) {
                this.streamController = t
            }
            ,
            e.destroy = function() {
                this.hls && this.unregisterListener(),
                this.timer && this.stopCapping(),
                this.media = null,
                this.clientRect = null,
                this.hls = this.streamController = null
            }
            ,
            e.registerListeners = function() {
                var t = this.hls;
                t.on(S.FPS_DROP_LEVEL_CAPPING, this.onFpsDropLevelCapping, this),
                t.on(S.MEDIA_ATTACHING, this.onMediaAttaching, this),
                t.on(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.on(S.LEVELS_UPDATED, this.onLevelsUpdated, this),
                t.on(S.BUFFER_CODECS, this.onBufferCodecs, this),
                t.on(S.MEDIA_DETACHING, this.onMediaDetaching, this)
            }
            ,
            e.unregisterListener = function() {
                var t = this.hls;
                t.off(S.FPS_DROP_LEVEL_CAPPING, this.onFpsDropLevelCapping, this),
                t.off(S.MEDIA_ATTACHING, this.onMediaAttaching, this),
                t.off(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.off(S.LEVELS_UPDATED, this.onLevelsUpdated, this),
                t.off(S.BUFFER_CODECS, this.onBufferCodecs, this),
                t.off(S.MEDIA_DETACHING, this.onMediaDetaching, this)
            }
            ,
            e.onFpsDropLevelCapping = function(t, e) {
                var r = this.hls.levels[e.droppedLevel];
                this.isLevelAllowed(r) && this.restrictedLevels.push({
                    bitrate: r.bitrate,
                    height: r.height,
                    width: r.width
                })
            }
            ,
            e.onMediaAttaching = function(t, e) {
                this.media = e.media instanceof HTMLVideoElement ? e.media : null,
                this.clientRect = null,
                this.timer && this.hls.levels.length && this.detectPlayerSize()
            }
            ,
            e.onManifestParsed = function(t, e) {
                var r = this.hls;
                this.restrictedLevels = [],
                this.firstLevel = e.firstLevel,
                r.config.capLevelToPlayerSize && e.video && this.startCapping()
            }
            ,
            e.onLevelsUpdated = function(t, e) {
                this.timer && y(this.autoLevelCapping) && this.detectPlayerSize()
            }
            ,
            e.onBufferCodecs = function(t, e) {
                this.hls.config.capLevelToPlayerSize && e.video && this.startCapping()
            }
            ,
            e.onMediaDetaching = function() {
                this.stopCapping()
            }
            ,
            e.detectPlayerSize = function() {
                if (this.media) {
                    if (this.mediaHeight <= 0 || this.mediaWidth <= 0)
                        return void (this.clientRect = null);
                    var t = this.hls.levels;
                    if (t.length) {
                        var e = this.hls
                          , r = this.getMaxLevel(t.length - 1);
                        r !== this.autoLevelCapping && w.log("Setting autoLevelCapping to " + r + ": " + t[r].height + "p@" + t[r].bitrate + " for media " + this.mediaWidth + "x" + this.mediaHeight),
                        e.autoLevelCapping = r,
                        e.autoLevelCapping > this.autoLevelCapping && this.streamController && this.streamController.nextLevelSwitch(),
                        this.autoLevelCapping = e.autoLevelCapping
                    }
                }
            }
            ,
            e.getMaxLevel = function(e) {
                var r = this
                  , i = this.hls.levels;
                if (!i.length)
                    return -1;
                var n = i.filter((function(t, i) {
                    return r.isLevelAllowed(t) && i <= e
                }
                ));
                return this.clientRect = null,
                t.getMaxLevelByMediaSize(n, this.mediaWidth, this.mediaHeight)
            }
            ,
            e.startCapping = function() {
                this.timer || (this.autoLevelCapping = Number.POSITIVE_INFINITY,
                self.clearInterval(this.timer),
                this.timer = self.setInterval(this.detectPlayerSize.bind(this), 1e3),
                this.detectPlayerSize())
            }
            ,
            e.stopCapping = function() {
                this.restrictedLevels = [],
                this.firstLevel = -1,
                this.autoLevelCapping = Number.POSITIVE_INFINITY,
                this.timer && (self.clearInterval(this.timer),
                this.timer = void 0)
            }
            ,
            e.getDimensions = function() {
                if (this.clientRect)
                    return this.clientRect;
                var t = this.media
                  , e = {
                    width: 0,
                    height: 0
                };
                if (t) {
                    var r = t.getBoundingClientRect();
                    e.width = r.width,
                    e.height = r.height,
                    e.width || e.height || (e.width = r.right - r.left || t.width || 0,
                    e.height = r.bottom - r.top || t.height || 0)
                }
                return this.clientRect = e,
                e
            }
            ,
            e.isLevelAllowed = function(t) {
                return !this.restrictedLevels.some((function(e) {
                    return t.bitrate === e.bitrate && t.width === e.width && t.height === e.height
                }
                ))
            }
            ,
            t.getMaxLevelByMediaSize = function(t, e, r) {
                if (null == t || !t.length)
                    return -1;
                for (var i, n, a = t.length - 1, s = Math.max(e, r), o = 0; o < t.length; o += 1) {
                    var l = t[o];
                    if ((l.width >= s || l.height >= s) && (i = l,
                    !(n = t[o + 1]) || i.width !== n.width || i.height !== n.height)) {
                        a = o;
                        break
                    }
                }
                return a
            }
            ,
            s(t, [{
                key: "mediaWidth",
                get: function() {
                    return this.getDimensions().width * this.contentScaleFactor
                }
            }, {
                key: "mediaHeight",
                get: function() {
                    return this.getDimensions().height * this.contentScaleFactor
                }
            }, {
                key: "contentScaleFactor",
                get: function() {
                    var t = 1;
                    if (!this.hls.config.ignoreDevicePixelRatio)
                        try {
                            t = self.devicePixelRatio
                        } catch (t) {}
                    return t
                }
            }]),
            t
        }()
          , es = function() {
            function t(t) {
                this.hls = void 0,
                this.isVideoPlaybackQualityAvailable = !1,
                this.timer = void 0,
                this.media = null,
                this.lastTime = void 0,
                this.lastDroppedFrames = 0,
                this.lastDecodedFrames = 0,
                this.streamController = void 0,
                this.hls = t,
                this.registerListeners()
            }
            var e = t.prototype;
            return e.setStreamController = function(t) {
                this.streamController = t
            }
            ,
            e.registerListeners = function() {
                this.hls.on(S.MEDIA_ATTACHING, this.onMediaAttaching, this)
            }
            ,
            e.unregisterListeners = function() {
                this.hls.off(S.MEDIA_ATTACHING, this.onMediaAttaching, this)
            }
            ,
            e.destroy = function() {
                this.timer && clearInterval(this.timer),
                this.unregisterListeners(),
                this.isVideoPlaybackQualityAvailable = !1,
                this.media = null
            }
            ,
            e.onMediaAttaching = function(t, e) {
                var r = this.hls.config;
                if (r.capLevelOnFPSDrop) {
                    var i = e.media instanceof self.HTMLVideoElement ? e.media : null;
                    this.media = i,
                    i && "function" == typeof i.getVideoPlaybackQuality && (this.isVideoPlaybackQualityAvailable = !0),
                    self.clearInterval(this.timer),
                    this.timer = self.setInterval(this.checkFPSInterval.bind(this), r.fpsDroppedMonitoringPeriod)
                }
            }
            ,
            e.checkFPS = function(t, e, r) {
                var i = performance.now();
                if (e) {
                    if (this.lastTime) {
                        var n = i - this.lastTime
                          , a = r - this.lastDroppedFrames
                          , s = e - this.lastDecodedFrames
                          , o = 1e3 * a / n
                          , l = this.hls;
                        if (l.trigger(S.FPS_DROP, {
                            currentDropped: a,
                            currentDecoded: s,
                            totalDroppedFrames: r
                        }),
                        o > 0 && a > l.config.fpsDroppedMonitoringThreshold * s) {
                            var u = l.currentLevel;
                            w.warn("drop FPS ratio greater than max allowed value for currentLevel: " + u),
                            u > 0 && (-1 === l.autoLevelCapping || l.autoLevelCapping >= u) && (u -= 1,
                            l.trigger(S.FPS_DROP_LEVEL_CAPPING, {
                                level: u,
                                droppedLevel: l.currentLevel
                            }),
                            l.autoLevelCapping = u,
                            this.streamController.nextLevelSwitch())
                        }
                    }
                    this.lastTime = i,
                    this.lastDroppedFrames = r,
                    this.lastDecodedFrames = e
                }
            }
            ,
            e.checkFPSInterval = function() {
                var t = this.media;
                if (t)
                    if (this.isVideoPlaybackQualityAvailable) {
                        var e = t.getVideoPlaybackQuality();
                        this.checkFPS(t, e.totalVideoFrames, e.droppedVideoFrames)
                    } else
                        this.checkFPS(t, t.webkitDecodedFrameCount, t.webkitDroppedFrameCount)
            }
            ,
            t
        }()
          , rs = "[eme]"
          , is = function() {
            function t(e) {
                this.hls = void 0,
                this.config = void 0,
                this.media = null,
                this.keyFormatPromise = null,
                this.keySystemAccessPromises = {},
                this._requestLicenseFailureCount = 0,
                this.mediaKeySessions = [],
                this.keyIdToKeySessionPromise = {},
                this.setMediaKeysQueue = t.CDMCleanupPromise ? [t.CDMCleanupPromise] : [],
                this.onMediaEncrypted = this._onMediaEncrypted.bind(this),
                this.onWaitingForKey = this._onWaitingForKey.bind(this),
                this.debug = w.debug.bind(w, rs),
                this.log = w.log.bind(w, rs),
                this.warn = w.warn.bind(w, rs),
                this.error = w.error.bind(w, rs),
                this.hls = e,
                this.config = e.config,
                this.registerListeners()
            }
            var e = t.prototype;
            return e.destroy = function() {
                this.unregisterListeners(),
                this.onMediaDetached();
                var t = this.config;
                t.requestMediaKeySystemAccessFunc = null,
                t.licenseXhrSetup = t.licenseResponseCallback = void 0,
                t.drmSystems = t.drmSystemOptions = {},
                this.hls = this.onMediaEncrypted = this.onWaitingForKey = this.keyIdToKeySessionPromise = null,
                this.config = null
            }
            ,
            e.registerListeners = function() {
                this.hls.on(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                this.hls.on(S.MEDIA_DETACHED, this.onMediaDetached, this),
                this.hls.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                this.hls.on(S.MANIFEST_LOADED, this.onManifestLoaded, this)
            }
            ,
            e.unregisterListeners = function() {
                this.hls.off(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                this.hls.off(S.MEDIA_DETACHED, this.onMediaDetached, this),
                this.hls.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                this.hls.off(S.MANIFEST_LOADED, this.onManifestLoaded, this)
            }
            ,
            e.getLicenseServerUrl = function(t) {
                var e = this.config
                  , r = e.drmSystems
                  , i = e.widevineLicenseUrl
                  , n = r[t];
                if (n)
                    return n.licenseUrl;
                if (t === q.WIDEVINE && i)
                    return i;
                throw new Error('no license server URL configured for key-system "' + t + '"')
            }
            ,
            e.getServerCertificateUrl = function(t) {
                var e = this.config.drmSystems[t];
                if (e)
                    return e.serverCertificateUrl;
                this.log('No Server Certificate in config.drmSystems["' + t + '"]')
            }
            ,
            e.attemptKeySystemAccess = function(t) {
                var e = this
                  , r = this.hls.levels
                  , i = function(t, e, r) {
                    return !!t && r.indexOf(t) === e
                }
                  , n = r.map((function(t) {
                    return t.audioCodec
                }
                )).filter(i)
                  , a = r.map((function(t) {
                    return t.videoCodec
                }
                )).filter(i);
                return n.length + a.length === 0 && a.push("avc1.42e01e"),
                new Promise((function(r, i) {
                    !function t(s) {
                        var o = s.shift();
                        e.getMediaKeysPromise(o, n, a).then((function(t) {
                            return r({
                                keySystem: o,
                                mediaKeys: t
                            })
                        }
                        )).catch((function(e) {
                            s.length ? t(s) : i(e instanceof ls ? e : new ls({
                                type: L.KEY_SYSTEM_ERROR,
                                details: A.KEY_SYSTEM_NO_ACCESS,
                                error: e,
                                fatal: !0
                            },e.message))
                        }
                        ))
                    }(t)
                }
                ))
            }
            ,
            e.requestMediaKeySystemAccess = function(t, e) {
                var r = this.config.requestMediaKeySystemAccessFunc;
                if ("function" != typeof r) {
                    var i = "Configured requestMediaKeySystemAccess is not a function " + r;
                    return null === ot && "http:" === self.location.protocol && (i = "navigator.requestMediaKeySystemAccess is not available over insecure protocol " + location.protocol),
                    Promise.reject(new Error(i))
                }
                return r(t, e)
            }
            ,
            e.getMediaKeysPromise = function(t, e, r) {
                var i = this
                  , n = function(t, e, r, i) {
                    var n;
                    switch (t) {
                    case q.FAIRPLAY:
                        n = ["cenc", "sinf"];
                        break;
                    case q.WIDEVINE:
                    case q.PLAYREADY:
                        n = ["cenc"];
                        break;
                    case q.CLEARKEY:
                        n = ["cenc", "keyids"];
                        break;
                    default:
                        throw new Error("Unknown key-system: " + t)
                    }
                    return function(t, e, r, i) {
                        return [{
                            initDataTypes: t,
                            persistentState: i.persistentState || "optional",
                            distinctiveIdentifier: i.distinctiveIdentifier || "optional",
                            sessionTypes: i.sessionTypes || [i.sessionType || "temporary"],
                            audioCapabilities: e.map((function(t) {
                                return {
                                    contentType: 'audio/mp4; codecs="' + t + '"',
                                    robustness: i.audioRobustness || "",
                                    encryptionScheme: i.audioEncryptionScheme || null
                                }
                            }
                            )),
                            videoCapabilities: r.map((function(t) {
                                return {
                                    contentType: 'video/mp4; codecs="' + t + '"',
                                    robustness: i.videoRobustness || "",
                                    encryptionScheme: i.videoEncryptionScheme || null
                                }
                            }
                            ))
                        }]
                    }(n, e, r, i)
                }(t, e, r, this.config.drmSystemOptions)
                  , a = this.keySystemAccessPromises[t]
                  , s = null == a ? void 0 : a.keySystemAccess;
                if (!s) {
                    this.log('Requesting encrypted media "' + t + '" key-system access with config: ' + JSON.stringify(n)),
                    s = this.requestMediaKeySystemAccess(t, n);
                    var o = this.keySystemAccessPromises[t] = {
                        keySystemAccess: s
                    };
                    return s.catch((function(e) {
                        i.log('Failed to obtain access to key-system "' + t + '": ' + e)
                    }
                    )),
                    s.then((function(e) {
                        i.log('Access for key-system "' + e.keySystem + '" obtained');
                        var r = i.fetchServerCertificate(t);
                        return i.log('Create media-keys for "' + t + '"'),
                        o.mediaKeys = e.createMediaKeys().then((function(e) {
                            return i.log('Media-keys created for "' + t + '"'),
                            r.then((function(r) {
                                return r ? i.setMediaKeysServerCertificate(e, t, r) : e
                            }
                            ))
                        }
                        )),
                        o.mediaKeys.catch((function(e) {
                            i.error('Failed to create media-keys for "' + t + '"}: ' + e)
                        }
                        )),
                        o.mediaKeys
                    }
                    ))
                }
                return s.then((function() {
                    return a.mediaKeys
                }
                ))
            }
            ,
            e.createMediaKeySessionContext = function(t) {
                var e = t.decryptdata
                  , r = t.keySystem
                  , i = t.mediaKeys;
                this.log('Creating key-system session "' + r + '" keyId: ' + kt.hexDump(e.keyId || []));
                var n = i.createSession()
                  , a = {
                    decryptdata: e,
                    keySystem: r,
                    mediaKeys: i,
                    mediaKeysSession: n,
                    keyStatus: "status-pending"
                };
                return this.mediaKeySessions.push(a),
                a
            }
            ,
            e.renewKeySession = function(t) {
                var e = t.decryptdata;
                if (e.pssh) {
                    var r = this.createMediaKeySessionContext(t)
                      , i = this.getKeyIdString(e);
                    this.keyIdToKeySessionPromise[i] = this.generateRequestWithPreferredKeySession(r, "cenc", e.pssh, "expired")
                } else
                    this.warn("Could not renew expired session. Missing pssh initData.");
                this.removeSession(t)
            }
            ,
            e.getKeyIdString = function(t) {
                if (!t)
                    throw new Error("Could not read keyId of undefined decryptdata");
                if (null === t.keyId)
                    throw new Error("keyId is null");
                return kt.hexDump(t.keyId)
            }
            ,
            e.updateKeySession = function(t, e) {
                var r, i = t.mediaKeysSession;
                return this.log('Updating key-session "' + i.sessionId + '" for keyID ' + kt.hexDump((null == (r = t.decryptdata) ? void 0 : r.keyId) || []) + "\n      } (data length: " + (e ? e.byteLength : e) + ")"),
                i.update(e)
            }
            ,
            e.selectKeySystemFormat = function(t) {
                var e = Object.keys(t.levelkeys || {});
                return this.keyFormatPromise || (this.log("Selecting key-system from fragment (sn: " + t.sn + " " + t.type + ": " + t.level + ") key formats " + e.join(", ")),
                this.keyFormatPromise = this.getKeyFormatPromise(e)),
                this.keyFormatPromise
            }
            ,
            e.getKeyFormatPromise = function(t) {
                var e = this;
                return new Promise((function(r, i) {
                    var n = at(e.config)
                      , a = t.map($).filter((function(t) {
                        return !!t && -1 !== n.indexOf(t)
                    }
                    ));
                    return e.getKeySystemSelectionPromise(a).then((function(t) {
                        var e = t.keySystem
                          , n = nt(e);
                        n ? r(n) : i(new Error('Unable to find format for key-system "' + e + '"'))
                    }
                    )).catch(i)
                }
                ))
            }
            ,
            e.loadKey = function(t) {
                var e = this
                  , r = t.keyInfo.decryptdata
                  , i = this.getKeyIdString(r)
                  , n = "(keyId: " + i + ' format: "' + r.keyFormat + '" method: ' + r.method + " uri: " + r.uri + ")";
                this.log("Starting session for key " + n);
                var a = this.keyIdToKeySessionPromise[i];
                return a || (a = this.keyIdToKeySessionPromise[i] = this.getKeySystemForKeyPromise(r).then((function(i) {
                    var a = i.keySystem
                      , s = i.mediaKeys;
                    return e.throwIfDestroyed(),
                    e.log("Handle encrypted media sn: " + t.frag.sn + " " + t.frag.type + ": " + t.frag.level + " using key " + n),
                    e.attemptSetMediaKeys(a, s).then((function() {
                        e.throwIfDestroyed();
                        var t = e.createMediaKeySessionContext({
                            keySystem: a,
                            mediaKeys: s,
                            decryptdata: r
                        });
                        return e.generateRequestWithPreferredKeySession(t, "cenc", r.pssh, "playlist-key")
                    }
                    ))
                }
                ))).catch((function(t) {
                    return e.handleError(t)
                }
                )),
                a
            }
            ,
            e.throwIfDestroyed = function(t) {
                if (!this.hls)
                    throw new Error("invalid state")
            }
            ,
            e.handleError = function(t) {
                this.hls && (this.error(t.message),
                t instanceof ls ? this.hls.trigger(S.ERROR, t.data) : this.hls.trigger(S.ERROR, {
                    type: L.KEY_SYSTEM_ERROR,
                    details: A.KEY_SYSTEM_NO_KEYS,
                    error: t,
                    fatal: !0
                }))
            }
            ,
            e.getKeySystemForKeyPromise = function(t) {
                var e = this.getKeyIdString(t)
                  , r = this.keyIdToKeySessionPromise[e];
                if (!r) {
                    var i = $(t.keyFormat)
                      , n = i ? [i] : at(this.config);
                    return this.attemptKeySystemAccess(n)
                }
                return r
            }
            ,
            e.getKeySystemSelectionPromise = function(t) {
                if (t.length || (t = at(this.config)),
                0 === t.length)
                    throw new ls({
                        type: L.KEY_SYSTEM_ERROR,
                        details: A.KEY_SYSTEM_NO_CONFIGURED_LICENSE,
                        fatal: !0
                    },"Missing key-system license configuration options " + JSON.stringify({
                        drmSystems: this.config.drmSystems
                    }));
                return this.attemptKeySystemAccess(t)
            }
            ,
            e._onMediaEncrypted = function(t) {
                var e = this
                  , r = t.initDataType
                  , i = t.initData
                  , n = '"' + t.type + '" event: init data type: "' + r + '"';
                if (this.debug(n),
                null !== i) {
                    var a, s;
                    if ("sinf" === r && this.config.drmSystems[q.FAIRPLAY]) {
                        var o = Ct(new Uint8Array(i));
                        try {
                            var l = V(JSON.parse(o).sinf)
                              , u = Vt(new Uint8Array(l));
                            if (!u)
                                throw new Error("'schm' box missing or not cbcs/cenc with schi > tenc");
                            a = u.subarray(8, 24),
                            s = q.FAIRPLAY
                        } catch (t) {
                            return void this.warn(n + " Failed to parse sinf: " + t)
                        }
                    } else {
                        var h = function(t) {
                            var e = [];
                            if (t instanceof ArrayBuffer)
                                for (var r = t.byteLength, i = 0; i + 32 < r; ) {
                                    var n = Jt(new DataView(t,i));
                                    e.push(n),
                                    i += n.size
                                }
                            return e
                        }(i)
                          , d = h.filter((function(t) {
                            return t.systemId === rt
                        }
                        ))[0];
                        if (!d)
                            return void (0 === h.length || h.some((function(t) {
                                return !t.systemId
                            }
                            )) ? this.warn(n + " contains incomplete or invalid pssh data") : this.log("ignoring " + n + " for " + h.map((function(t) {
                                return it(t.systemId)
                            }
                            )).join(",") + " pssh data in favor of playlist keys"));
                        if (s = it(d.systemId),
                        0 === d.version && d.data) {
                            var c = d.data.length - 22;
                            a = d.data.subarray(c, c + 16)
                        }
                    }
                    if (s && a) {
                        for (var f, g = kt.hexDump(a), v = this.keyIdToKeySessionPromise, m = this.mediaKeySessions, p = v[g], y = function() {
                            var t = m[E]
                              , n = t.decryptdata;
                            if (!n.keyId)
                                return 0;
                            var s = kt.hexDump(n.keyId);
                            return g === s || -1 !== n.uri.replace(/-/g, "").indexOf(g) ? (p = v[s],
                            n.pssh || (delete v[s],
                            n.pssh = new Uint8Array(i),
                            n.keyId = a,
                            p = v[g] = p.then((function() {
                                return e.generateRequestWithPreferredKeySession(t, r, i, "encrypted-event-key-match")
                            }
                            ))),
                            1) : void 0
                        }, E = 0; E < m.length && (0 === (f = y()) || 1 !== f); E++)
                            ;
                        p || (p = v[g] = this.getKeySystemSelectionPromise([s]).then((function(t) {
                            var n, s = t.keySystem, o = t.mediaKeys;
                            e.throwIfDestroyed();
                            var l = new Zt("ISO-23001-7",g,null != (n = nt(s)) ? n : "");
                            return l.pssh = new Uint8Array(i),
                            l.keyId = a,
                            e.attemptSetMediaKeys(s, o).then((function() {
                                e.throwIfDestroyed();
                                var t = e.createMediaKeySessionContext({
                                    decryptdata: l,
                                    keySystem: s,
                                    mediaKeys: o
                                });
                                return e.generateRequestWithPreferredKeySession(t, r, i, "encrypted-event-no-match")
                            }
                            ))
                        }
                        ))),
                        p.catch((function(t) {
                            return e.handleError(t)
                        }
                        ))
                    }
                }
            }
            ,
            e._onWaitingForKey = function(t) {
                this.log('"' + t.type + '" event')
            }
            ,
            e.attemptSetMediaKeys = function(t, e) {
                var r = this
                  , i = this.setMediaKeysQueue.slice();
                this.log('Setting media-keys for "' + t + '"');
                var n = Promise.all(i).then((function() {
                    if (!r.media)
                        throw new Error("Attempted to set mediaKeys without media element attached");
                    return r.media.setMediaKeys(e)
                }
                ));
                return this.setMediaKeysQueue.push(n),
                n.then((function() {
                    r.log('Media-keys set for "' + t + '"'),
                    i.push(n),
                    r.setMediaKeysQueue = r.setMediaKeysQueue.filter((function(t) {
                        return -1 === i.indexOf(t)
                    }
                    ))
                }
                ))
            }
            ,
            e.generateRequestWithPreferredKeySession = function(t, e, r, i) {
                var n, a, s = this, o = null == (n = this.config.drmSystems) || null == (a = n[t.keySystem]) ? void 0 : a.generateRequest;
                if (o)
                    try {
                        var l = o.call(this.hls, e, r, t);
                        if (!l)
                            throw new Error("Invalid response from configured generateRequest filter");
                        e = l.initDataType,
                        r = t.decryptdata.pssh = l.initData ? new Uint8Array(l.initData) : null
                    } catch (t) {
                        var u;
                        if (this.warn(t.message),
                        null != (u = this.hls) && u.config.debug)
                            throw t
                    }
                if (null === r)
                    return this.log('Skipping key-session request for "' + i + '" (no initData)'),
                    Promise.resolve(t);
                var h = this.getKeyIdString(t.decryptdata);
                this.log('Generating key-session request for "' + i + '": ' + h + " (init data type: " + e + " length: " + (r ? r.byteLength : null) + ")");
                var d = new Vn
                  , c = t._onmessage = function(e) {
                    var r = t.mediaKeysSession;
                    if (r) {
                        var i = e.messageType
                          , n = e.message;
                        s.log('"' + i + '" message event for session "' + r.sessionId + '" message size: ' + n.byteLength),
                        "license-request" === i || "license-renewal" === i ? s.renewLicense(t, n).catch((function(t) {
                            s.handleError(t),
                            d.emit("error", t)
                        }
                        )) : "license-release" === i ? t.keySystem === q.FAIRPLAY && (s.updateKeySession(t, W("acknowledged")),
                        s.removeSession(t)) : s.warn('unhandled media key message type "' + i + '"')
                    } else
                        d.emit("error", new Error("invalid state"))
                }
                  , f = t._onkeystatuseschange = function(e) {
                    if (t.mediaKeysSession) {
                        s.onKeyStatusChange(t);
                        var r = t.keyStatus;
                        d.emit("keyStatus", r),
                        "expired" === r && (s.warn(t.keySystem + " expired for key " + h),
                        s.renewKeySession(t))
                    } else
                        d.emit("error", new Error("invalid state"))
                }
                ;
                t.mediaKeysSession.addEventListener("message", c),
                t.mediaKeysSession.addEventListener("keystatuseschange", f);
                var g = new Promise((function(t, e) {
                    d.on("error", e),
                    d.on("keyStatus", (function(r) {
                        r.startsWith("usable") ? t() : "output-restricted" === r ? e(new ls({
                            type: L.KEY_SYSTEM_ERROR,
                            details: A.KEY_SYSTEM_STATUS_OUTPUT_RESTRICTED,
                            fatal: !1
                        },"HDCP level output restricted")) : "internal-error" === r ? e(new ls({
                            type: L.KEY_SYSTEM_ERROR,
                            details: A.KEY_SYSTEM_STATUS_INTERNAL_ERROR,
                            fatal: !0
                        },'key status changed to "' + r + '"')) : "expired" === r ? e(new Error("key expired while generating request")) : s.warn('unhandled key status change "' + r + '"')
                    }
                    ))
                }
                ));
                return t.mediaKeysSession.generateRequest(e, r).then((function() {
                    var e;
                    s.log('Request generated for key-session "' + (null == (e = t.mediaKeysSession) ? void 0 : e.sessionId) + '" keyId: ' + h)
                }
                )).catch((function(t) {
                    throw new ls({
                        type: L.KEY_SYSTEM_ERROR,
                        details: A.KEY_SYSTEM_NO_SESSION,
                        error: t,
                        fatal: !1
                    },"Error generating key-session request: " + t)
                }
                )).then((function() {
                    return g
                }
                )).catch((function(e) {
                    throw d.removeAllListeners(),
                    s.removeSession(t),
                    e
                }
                )).then((function() {
                    return d.removeAllListeners(),
                    t
                }
                ))
            }
            ,
            e.onKeyStatusChange = function(t) {
                var e = this;
                t.mediaKeysSession.keyStatuses.forEach((function(r, i) {
                    e.log('key status change "' + r + '" for keyStatuses keyId: ' + kt.hexDump("buffer"in i ? new Uint8Array(i.buffer,i.byteOffset,i.byteLength) : new Uint8Array(i)) + " session keyId: " + kt.hexDump(new Uint8Array(t.decryptdata.keyId || [])) + " uri: " + t.decryptdata.uri),
                    t.keyStatus = r
                }
                ))
            }
            ,
            e.fetchServerCertificate = function(t) {
                var e = this.config
                  , r = new (0,
                e.loader)(e)
                  , n = this.getServerCertificateUrl(t);
                return n ? (this.log('Fetching server certificate for "' + t + '"'),
                new Promise((function(a, s) {
                    var o = {
                        responseType: "arraybuffer",
                        url: n
                    }
                      , l = e.certLoadPolicy.default
                      , u = {
                        loadPolicy: l,
                        timeout: l.maxLoadTimeMs,
                        maxRetry: 0,
                        retryDelay: 0,
                        maxRetryDelay: 0
                    }
                      , h = {
                        onSuccess: function(t, e, r, i) {
                            a(t.data)
                        },
                        onError: function(e, r, a, l) {
                            s(new ls({
                                type: L.KEY_SYSTEM_ERROR,
                                details: A.KEY_SYSTEM_SERVER_CERTIFICATE_REQUEST_FAILED,
                                fatal: !0,
                                networkDetails: a,
                                response: i({
                                    url: o.url,
                                    data: void 0
                                }, e)
                            },'"' + t + '" certificate request failed (' + n + "). Status: " + e.code + " (" + e.text + ")"))
                        },
                        onTimeout: function(e, r, i) {
                            s(new ls({
                                type: L.KEY_SYSTEM_ERROR,
                                details: A.KEY_SYSTEM_SERVER_CERTIFICATE_REQUEST_FAILED,
                                fatal: !0,
                                networkDetails: i,
                                response: {
                                    url: o.url,
                                    data: void 0
                                }
                            },'"' + t + '" certificate request timed out (' + n + ")"))
                        },
                        onAbort: function(t, e, r) {
                            s(new Error("aborted"))
                        }
                    };
                    r.load(o, u, h)
                }
                ))) : Promise.resolve()
            }
            ,
            e.setMediaKeysServerCertificate = function(t, e, r) {
                var i = this;
                return new Promise((function(n, a) {
                    t.setServerCertificate(r).then((function(a) {
                        i.log("setServerCertificate " + (a ? "success" : "not supported by CDM") + " (" + (null == r ? void 0 : r.byteLength) + ') on "' + e + '"'),
                        n(t)
                    }
                    )).catch((function(t) {
                        a(new ls({
                            type: L.KEY_SYSTEM_ERROR,
                            details: A.KEY_SYSTEM_SERVER_CERTIFICATE_UPDATE_FAILED,
                            error: t,
                            fatal: !0
                        },t.message))
                    }
                    ))
                }
                ))
            }
            ,
            e.renewLicense = function(t, e) {
                var r = this;
                return this.requestLicense(t, new Uint8Array(e)).then((function(e) {
                    return r.updateKeySession(t, new Uint8Array(e)).catch((function(t) {
                        throw new ls({
                            type: L.KEY_SYSTEM_ERROR,
                            details: A.KEY_SYSTEM_SESSION_UPDATE_FAILED,
                            error: t,
                            fatal: !0
                        },t.message)
                    }
                    ))
                }
                ))
            }
            ,
            e.unpackPlayReadyKeyMessage = function(t, e) {
                var r = String.fromCharCode.apply(null, new Uint16Array(e.buffer));
                if (!r.includes("PlayReadyKeyMessage"))
                    return t.setRequestHeader("Content-Type", "text/xml; charset=utf-8"),
                    e;
                var i = (new DOMParser).parseFromString(r, "application/xml")
                  , n = i.querySelectorAll("HttpHeader");
                if (n.length > 0)
                    for (var a, s = 0, o = n.length; s < o; s++) {
                        var l, u, h = null == (l = (a = n[s]).querySelector("name")) ? void 0 : l.textContent, d = null == (u = a.querySelector("value")) ? void 0 : u.textContent;
                        h && d && t.setRequestHeader(h, d)
                    }
                var c = i.querySelector("Challenge")
                  , f = null == c ? void 0 : c.textContent;
                if (!f)
                    throw new Error("Cannot find <Challenge> in key message");
                return W(atob(f))
            }
            ,
            e.setupLicenseXHR = function(t, e, r, i) {
                var n = this
                  , a = this.config.licenseXhrSetup;
                return a ? Promise.resolve().then((function() {
                    if (!r.decryptdata)
                        throw new Error("Key removed");
                    return a.call(n.hls, t, e, r, i)
                }
                )).catch((function(s) {
                    if (!r.decryptdata)
                        throw s;
                    return t.open("POST", e, !0),
                    a.call(n.hls, t, e, r, i)
                }
                )).then((function(r) {
                    return t.readyState || t.open("POST", e, !0),
                    {
                        xhr: t,
                        licenseChallenge: r || i
                    }
                }
                )) : (t.open("POST", e, !0),
                Promise.resolve({
                    xhr: t,
                    licenseChallenge: i
                }))
            }
            ,
            e.requestLicense = function(t, e) {
                var r = this
                  , i = this.config.keyLoadPolicy.default;
                return new Promise((function(n, a) {
                    var s = r.getLicenseServerUrl(t.keySystem);
                    r.log("Sending license request to URL: " + s);
                    var o = new XMLHttpRequest;
                    o.responseType = "arraybuffer",
                    o.onreadystatechange = function() {
                        if (!r.hls || !t.mediaKeysSession)
                            return a(new Error("invalid state"));
                        if (4 === o.readyState)
                            if (200 === o.status) {
                                r._requestLicenseFailureCount = 0;
                                var l = o.response;
                                r.log("License received " + (l instanceof ArrayBuffer ? l.byteLength : l));
                                var u = r.config.licenseResponseCallback;
                                if (u)
                                    try {
                                        l = u.call(r.hls, o, s, t)
                                    } catch (t) {
                                        r.error(t)
                                    }
                                n(l)
                            } else {
                                var h = i.errorRetry
                                  , d = h ? h.maxNumRetry : 0;
                                if (r._requestLicenseFailureCount++,
                                r._requestLicenseFailureCount > d || o.status >= 400 && o.status < 500)
                                    a(new ls({
                                        type: L.KEY_SYSTEM_ERROR,
                                        details: A.KEY_SYSTEM_LICENSE_REQUEST_FAILED,
                                        fatal: !0,
                                        networkDetails: o,
                                        response: {
                                            url: s,
                                            data: void 0,
                                            code: o.status,
                                            text: o.statusText
                                        }
                                    },"License Request XHR failed (" + s + "). Status: " + o.status + " (" + o.statusText + ")"));
                                else {
                                    var c = d - r._requestLicenseFailureCount + 1;
                                    r.warn("Retrying license request, " + c + " attempts left"),
                                    r.requestLicense(t, e).then(n, a)
                                }
                            }
                    }
                    ,
                    t.licenseXhr && t.licenseXhr.readyState !== XMLHttpRequest.DONE && t.licenseXhr.abort(),
                    t.licenseXhr = o,
                    r.setupLicenseXHR(o, s, t, e).then((function(e) {
                        var i = e.xhr
                          , n = e.licenseChallenge;
                        t.keySystem == q.PLAYREADY && (n = r.unpackPlayReadyKeyMessage(i, n)),
                        i.send(n)
                    }
                    ))
                }
                ))
            }
            ,
            e.onMediaAttached = function(t, e) {
                if (this.config.emeEnabled) {
                    var r = e.media;
                    this.media = r,
                    r.addEventListener("encrypted", this.onMediaEncrypted),
                    r.addEventListener("waitingforkey", this.onWaitingForKey)
                }
            }
            ,
            e.onMediaDetached = function() {
                var e = this
                  , r = this.media
                  , i = this.mediaKeySessions;
                r && (r.removeEventListener("encrypted", this.onMediaEncrypted),
                r.removeEventListener("waitingforkey", this.onWaitingForKey),
                this.media = null),
                this._requestLicenseFailureCount = 0,
                this.setMediaKeysQueue = [],
                this.mediaKeySessions = [],
                this.keyIdToKeySessionPromise = {},
                Zt.clearKeyUriToKeyIdMap();
                var n = i.length;
                t.CDMCleanupPromise = Promise.all(i.map((function(t) {
                    return e.removeSession(t)
                }
                )).concat(null == r ? void 0 : r.setMediaKeys(null).catch((function(t) {
                    e.log("Could not clear media keys: " + t)
                }
                )))).then((function() {
                    n && (e.log("finished closing key sessions and clearing media keys"),
                    i.length = 0)
                }
                )).catch((function(t) {
                    e.log("Could not close sessions and clear media keys: " + t)
                }
                ))
            }
            ,
            e.onManifestLoading = function() {
                this.keyFormatPromise = null
            }
            ,
            e.onManifestLoaded = function(t, e) {
                var r = e.sessionKeys;
                if (r && this.config.emeEnabled && !this.keyFormatPromise) {
                    var i = r.reduce((function(t, e) {
                        return -1 === t.indexOf(e.keyFormat) && t.push(e.keyFormat),
                        t
                    }
                    ), []);
                    this.log("Selecting key-system from session-keys " + i.join(", ")),
                    this.keyFormatPromise = this.getKeyFormatPromise(i)
                }
            }
            ,
            e.removeSession = function(t) {
                var e = this
                  , r = t.mediaKeysSession
                  , i = t.licenseXhr;
                if (r) {
                    this.log("Remove licenses and keys and close session " + r.sessionId),
                    t._onmessage && (r.removeEventListener("message", t._onmessage),
                    t._onmessage = void 0),
                    t._onkeystatuseschange && (r.removeEventListener("keystatuseschange", t._onkeystatuseschange),
                    t._onkeystatuseschange = void 0),
                    i && i.readyState !== XMLHttpRequest.DONE && i.abort(),
                    t.mediaKeysSession = t.decryptdata = t.licenseXhr = void 0;
                    var n = this.mediaKeySessions.indexOf(t);
                    return n > -1 && this.mediaKeySessions.splice(n, 1),
                    r.remove().catch((function(t) {
                        e.log("Could not remove session: " + t)
                    }
                    )).then((function() {
                        return r.close()
                    }
                    )).catch((function(t) {
                        e.log("Could not close session: " + t)
                    }
                    ))
                }
            }
            ,
            t
        }();
        is.CDMCleanupPromise = void 0;
        var ns, as, ss, os, ls = function(t) {
            function e(e, r) {
                var i;
                return (i = t.call(this, r) || this).data = void 0,
                e.error || (e.error = new Error(r)),
                i.data = e,
                e.err = e.error,
                i
            }
            return l(e, t),
            e
        }(c(Error));
        !function(t) {
            t.MANIFEST = "m",
            t.AUDIO = "a",
            t.VIDEO = "v",
            t.MUXED = "av",
            t.INIT = "i",
            t.CAPTION = "c",
            t.TIMED_TEXT = "tt",
            t.KEY = "k",
            t.OTHER = "o"
        }(ns || (ns = {})),
        function(t) {
            t.DASH = "d",
            t.HLS = "h",
            t.SMOOTH = "s",
            t.OTHER = "o"
        }(as || (as = {})),
        function(t) {
            t.OBJECT = "CMCD-Object",
            t.REQUEST = "CMCD-Request",
            t.SESSION = "CMCD-Session",
            t.STATUS = "CMCD-Status"
        }(ss || (ss = {}));
        var us = ((os = {})[ss.OBJECT] = ["br", "d", "ot", "tb"],
        os[ss.REQUEST] = ["bl", "dl", "mtp", "nor", "nrr", "su"],
        os[ss.SESSION] = ["cid", "pr", "sf", "sid", "st", "v"],
        os[ss.STATUS] = ["bs", "rtp"],
        os)
          , hs = function t(e, r) {
            this.value = void 0,
            this.params = void 0,
            Array.isArray(e) && (e = e.map((function(e) {
                return e instanceof t ? e : new t(e)
            }
            ))),
            this.value = e,
            this.params = r
        }
          , ds = function(t) {
            this.description = void 0,
            this.description = t
        }
          , cs = "Dict";
        function fs(t, e, r, i) {
            return new Error("failed to " + t + ' "' + (n = e,
            (Array.isArray(n) ? JSON.stringify(n) : n instanceof Map ? "Map{}" : n instanceof Set ? "Set{}" : "object" == typeof n ? JSON.stringify(n) : String(n)) + '" as ') + r,{
                cause: i
            });
            var n
        }
        var gs = "Bare Item"
          , vs = "Boolean"
          , ms = "Byte Sequence"
          , ps = "Decimal"
          , ys = "Integer"
          , Es = /[\x00-\x1f\x7f]+/
          , Ts = "Token"
          , Ss = "Key";
        function Ls(t, e, r) {
            return fs("serialize", t, e, r)
        }
        function As(t) {
            if (!1 === ArrayBuffer.isView(t))
                throw Ls(t, ms);
            return ":" + (e = t,
            btoa(String.fromCharCode.apply(String, e)) + ":");
            var e
        }
        function Rs(t) {
            if (function(t) {
                return t < -999999999999999 || 999999999999999 < t
            }(t))
                throw Ls(t, ys);
            return t.toString()
        }
        function bs(t, e) {
            if (t < 0)
                return -bs(-t, e);
            var r = Math.pow(10, e);
            if (Math.abs(t * r % 1 - .5) < Number.EPSILON) {
                var i = Math.floor(t * r);
                return (i % 2 == 0 ? i : i + 1) / r
            }
            return Math.round(t * r) / r
        }
        function ks(t) {
            var e = bs(t, 3);
            if (Math.floor(Math.abs(e)).toString().length > 12)
                throw Ls(t, ps);
            var r = e.toString();
            return r.includes(".") ? r : r + ".0"
        }
        var Ds = "String";
        function Is(t) {
            var e, r = (e = t).description || e.toString().slice(7, -1);
            if (!1 === /^([a-zA-Z*])([!#$%&'*+\-.^_`|~\w:/]*)$/.test(r))
                throw Ls(r, Ts);
            return r
        }
        function ws(t) {
            switch (typeof t) {
            case "number":
                if (!y(t))
                    throw Ls(t, gs);
                return Number.isInteger(t) ? Rs(t) : ks(t);
            case "string":
                return function(t) {
                    if (Es.test(t))
                        throw Ls(t, Ds);
                    return '"' + t.replace(/\\/g, "\\\\").replace(/"/g, '\\"') + '"'
                }(t);
            case "symbol":
                return Is(t);
            case "boolean":
                return function(t) {
                    if ("boolean" != typeof t)
                        throw Ls(t, vs);
                    return t ? "?1" : "?0"
                }(t);
            case "object":
                if (t instanceof Date)
                    return function(t) {
                        return "@" + Rs(t.getTime() / 1e3)
                    }(t);
                if (t instanceof Uint8Array)
                    return As(t);
                if (t instanceof ds)
                    return Is(t);
            default:
                throw Ls(t, gs)
            }
        }
        function Cs(t) {
            if (!1 === /^[a-z*][a-z0-9\-_.*]*$/.test(t))
                throw Ls(t, Ss);
            return t
        }
        function _s(t) {
            return null == t ? "" : Object.entries(t).map((function(t) {
                var e = t[0]
                  , r = t[1];
                return !0 === r ? ";" + Cs(e) : ";" + Cs(e) + "=" + ws(r)
            }
            )).join("")
        }
        function xs(t) {
            return t instanceof hs ? "" + ws(t.value) + _s(t.params) : ws(t)
        }
        function Ps(t, e) {
            var r;
            if (void 0 === e && (e = {
                whitespace: !0
            }),
            "object" != typeof t)
                throw Ls(t, cs);
            var i = t instanceof Map ? t.entries() : Object.entries(t)
              , n = null != (r = e) && r.whitespace ? " " : "";
            return Array.from(i).map((function(t) {
                var e = t[0]
                  , r = t[1];
                r instanceof hs == 0 && (r = new hs(r));
                var i, n = Cs(e);
                return !0 === r.value ? n += _s(r.params) : (n += "=",
                Array.isArray(r.value) ? n += "(" + (i = r).value.map(xs).join(" ") + ")" + _s(i.params) : n += xs(r)),
                n
            }
            )).join("," + n)
        }
        var Fs = function(t) {
            return "ot" === t || "sf" === t || "st" === t
        }
          , Ms = function(t) {
            return "number" == typeof t ? y(t) : null != t && "" !== t && !1 !== t
        }
          , Os = function(t) {
            return Math.round(t)
        }
          , Ns = function(t) {
            return 100 * Os(t / 100)
        }
          , Us = {
            br: Os,
            d: Os,
            bl: Ns,
            dl: Ns,
            mtp: Ns,
            nor: function(t, e) {
                return null != e && e.baseUrl && (t = function(t, e) {
                    var r = new URL(t)
                      , i = new URL(e);
                    if (r.origin !== i.origin)
                        return t;
                    for (var n = r.pathname.split("/").slice(1), a = i.pathname.split("/").slice(1, -1); n[0] === a[0]; )
                        n.shift(),
                        a.shift();
                    for (; a.length; )
                        a.shift(),
                        n.unshift("..");
                    return n.join("/")
                }(t, e.baseUrl)),
                encodeURIComponent(t)
            },
            rtp: Ns,
            tb: Os
        };
        function Bs(t, e) {
            return void 0 === e && (e = {}),
            t ? function(t, e) {
                return Ps(t, e)
            }(function(t, e) {
                var r = {};
                if (null == t || "object" != typeof t)
                    return r;
                var i = Object.keys(t).sort()
                  , n = o({}, Us, null == e ? void 0 : e.formatters)
                  , a = null == e ? void 0 : e.filter;
                return i.forEach((function(i) {
                    if (null == a || !a(i)) {
                        var s = t[i]
                          , o = n[i];
                        o && (s = o(s, e)),
                        "v" === i && 1 === s || "pr" == i && 1 === s || Ms(s) && (Fs(i) && "string" == typeof s && (s = new ds(s)),
                        r[i] = s)
                    }
                }
                )),
                r
            }(t, e), o({
                whitespace: !1
            }, e)) : ""
        }
        function Gs(t, e, r) {
            return o(t, function(t, e) {
                var r;
                if (void 0 === e && (e = {}),
                !t)
                    return {};
                var i = Object.entries(t)
                  , n = Object.entries(us).concat(Object.entries((null == (r = e) ? void 0 : r.customHeaderMap) || {}))
                  , a = i.reduce((function(t, e) {
                    var r, i = e[0], a = e[1], s = (null == (r = n.find((function(t) {
                        return t[1].includes(i)
                    }
                    ))) ? void 0 : r[0]) || ss.REQUEST;
                    return null != t[s] || (t[s] = {}),
                    t[s][i] = a,
                    t
                }
                ), {});
                return Object.entries(a).reduce((function(t, r) {
                    var i = r[0]
                      , n = r[1];
                    return t[i] = Bs(n, e),
                    t
                }
                ), {})
            }(e, r))
        }
        var Ks = "CMCD"
          , Hs = /CMCD=[^&#]+/;
        function Vs(t, e, r) {
            var i = function(t, e) {
                if (void 0 === e && (e = {}),
                !t)
                    return "";
                var r = Bs(t, e);
                return Ks + "=" + encodeURIComponent(r)
            }(e, r);
            if (!i)
                return t;
            if (Hs.test(t))
                return t.replace(Hs, i);
            var n = t.includes("?") ? "&" : "?";
            return "" + t + n + i
        }
        var Ys = function() {
            function t(t) {
                var e = this;
                this.hls = void 0,
                this.config = void 0,
                this.media = void 0,
                this.sid = void 0,
                this.cid = void 0,
                this.useHeaders = !1,
                this.includeKeys = void 0,
                this.initialized = !1,
                this.starved = !1,
                this.buffering = !0,
                this.audioBuffer = void 0,
                this.videoBuffer = void 0,
                this.onWaiting = function() {
                    e.initialized && (e.starved = !0),
                    e.buffering = !0
                }
                ,
                this.onPlaying = function() {
                    e.initialized || (e.initialized = !0),
                    e.buffering = !1
                }
                ,
                this.applyPlaylistData = function(t) {
                    try {
                        e.apply(t, {
                            ot: ns.MANIFEST,
                            su: !e.initialized
                        })
                    } catch (t) {
                        w.warn("Could not generate manifest CMCD data.", t)
                    }
                }
                ,
                this.applyFragmentData = function(t) {
                    try {
                        var r = t.frag
                          , i = e.hls.levels[r.level]
                          , n = e.getObjectType(r)
                          , a = {
                            d: 1e3 * r.duration,
                            ot: n
                        };
                        n !== ns.VIDEO && n !== ns.AUDIO && n != ns.MUXED || (a.br = i.bitrate / 1e3,
                        a.tb = e.getTopBandwidth(n) / 1e3,
                        a.bl = e.getBufferLength(n)),
                        e.apply(t, a)
                    } catch (t) {
                        w.warn("Could not generate segment CMCD data.", t)
                    }
                }
                ,
                this.hls = t;
                var r = this.config = t.config
                  , i = r.cmcd;
                null != i && (r.pLoader = this.createPlaylistLoader(),
                r.fLoader = this.createFragmentLoader(),
                this.sid = i.sessionId || function() {
                    try {
                        return crypto.randomUUID()
                    } catch (i) {
                        try {
                            var t = URL.createObjectURL(new Blob)
                              , e = t.toString();
                            return URL.revokeObjectURL(t),
                            e.slice(e.lastIndexOf("/") + 1)
                        } catch (t) {
                            var r = (new Date).getTime();
                            return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (function(t) {
                                var e = (r + 16 * Math.random()) % 16 | 0;
                                return r = Math.floor(r / 16),
                                ("x" == t ? e : 3 & e | 8).toString(16)
                            }
                            ))
                        }
                    }
                }(),
                this.cid = i.contentId,
                this.useHeaders = !0 === i.useHeaders,
                this.includeKeys = i.includeKeys,
                this.registerListeners())
            }
            var e = t.prototype;
            return e.registerListeners = function() {
                var t = this.hls;
                t.on(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.on(S.MEDIA_DETACHED, this.onMediaDetached, this),
                t.on(S.BUFFER_CREATED, this.onBufferCreated, this)
            }
            ,
            e.unregisterListeners = function() {
                var t = this.hls;
                t.off(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.off(S.MEDIA_DETACHED, this.onMediaDetached, this),
                t.off(S.BUFFER_CREATED, this.onBufferCreated, this)
            }
            ,
            e.destroy = function() {
                this.unregisterListeners(),
                this.onMediaDetached(),
                this.hls = this.config = this.audioBuffer = this.videoBuffer = null,
                this.onWaiting = this.onPlaying = null
            }
            ,
            e.onMediaAttached = function(t, e) {
                this.media = e.media,
                this.media.addEventListener("waiting", this.onWaiting),
                this.media.addEventListener("playing", this.onPlaying)
            }
            ,
            e.onMediaDetached = function() {
                this.media && (this.media.removeEventListener("waiting", this.onWaiting),
                this.media.removeEventListener("playing", this.onPlaying),
                this.media = null)
            }
            ,
            e.onBufferCreated = function(t, e) {
                var r, i;
                this.audioBuffer = null == (r = e.tracks.audio) ? void 0 : r.buffer,
                this.videoBuffer = null == (i = e.tracks.video) ? void 0 : i.buffer
            }
            ,
            e.createData = function() {
                var t;
                return {
                    v: 1,
                    sf: as.HLS,
                    sid: this.sid,
                    cid: this.cid,
                    pr: null == (t = this.media) ? void 0 : t.playbackRate,
                    mtp: this.hls.bandwidthEstimate / 1e3
                }
            }
            ,
            e.apply = function(t, e) {
                void 0 === e && (e = {}),
                o(e, this.createData());
                var r = e.ot === ns.INIT || e.ot === ns.VIDEO || e.ot === ns.MUXED;
                this.starved && r && (e.bs = !0,
                e.su = !0,
                this.starved = !1),
                null == e.su && (e.su = this.buffering);
                var i = this.includeKeys;
                i && (e = Object.keys(e).reduce((function(t, r) {
                    return i.includes(r) && (t[r] = e[r]),
                    t
                }
                ), {})),
                this.useHeaders ? (t.headers || (t.headers = {}),
                Gs(t.headers, e)) : t.url = Vs(t.url, e)
            }
            ,
            e.getObjectType = function(t) {
                var e = t.type;
                return "subtitle" === e ? ns.TIMED_TEXT : "initSegment" === t.sn ? ns.INIT : "audio" === e ? ns.AUDIO : "main" === e ? this.hls.audioTracks.length ? ns.VIDEO : ns.MUXED : void 0
            }
            ,
            e.getTopBandwidth = function(t) {
                var e, r = 0, i = this.hls;
                if (t === ns.AUDIO)
                    e = i.audioTracks;
                else {
                    var n = i.maxAutoLevel
                      , a = n > -1 ? n + 1 : i.levels.length;
                    e = i.levels.slice(0, a)
                }
                for (var s, o = g(e); !(s = o()).done; ) {
                    var l = s.value;
                    l.bitrate > r && (r = l.bitrate)
                }
                return r > 0 ? r : NaN
            }
            ,
            e.getBufferLength = function(t) {
                var e = this.hls.media
                  , r = t === ns.AUDIO ? this.audioBuffer : this.videoBuffer;
                return r && e ? 1e3 * ri.bufferInfo(r, e.currentTime, this.config.maxBufferHole).len : NaN
            }
            ,
            e.createPlaylistLoader = function() {
                var t = this.config.pLoader
                  , e = this.applyPlaylistData
                  , r = t || this.config.loader;
                return function() {
                    function t(t) {
                        this.loader = void 0,
                        this.loader = new r(t)
                    }
                    var i = t.prototype;
                    return i.destroy = function() {
                        this.loader.destroy()
                    }
                    ,
                    i.abort = function() {
                        this.loader.abort()
                    }
                    ,
                    i.load = function(t, r, i) {
                        e(t),
                        this.loader.load(t, r, i)
                    }
                    ,
                    s(t, [{
                        key: "stats",
                        get: function() {
                            return this.loader.stats
                        }
                    }, {
                        key: "context",
                        get: function() {
                            return this.loader.context
                        }
                    }]),
                    t
                }()
            }
            ,
            e.createFragmentLoader = function() {
                var t = this.config.fLoader
                  , e = this.applyFragmentData
                  , r = t || this.config.loader;
                return function() {
                    function t(t) {
                        this.loader = void 0,
                        this.loader = new r(t)
                    }
                    var i = t.prototype;
                    return i.destroy = function() {
                        this.loader.destroy()
                    }
                    ,
                    i.abort = function() {
                        this.loader.abort()
                    }
                    ,
                    i.load = function(t, r, i) {
                        e(t),
                        this.loader.load(t, r, i)
                    }
                    ,
                    s(t, [{
                        key: "stats",
                        get: function() {
                            return this.loader.stats
                        }
                    }, {
                        key: "context",
                        get: function() {
                            return this.loader.context
                        }
                    }]),
                    t
                }()
            }
            ,
            t
        }()
          , Ws = function() {
            function t(t) {
                this.hls = void 0,
                this.log = void 0,
                this.loader = null,
                this.uri = null,
                this.pathwayId = ".",
                this.pathwayPriority = null,
                this.timeToLoad = 300,
                this.reloadTimer = -1,
                this.updated = 0,
                this.started = !1,
                this.enabled = !0,
                this.levels = null,
                this.audioTracks = null,
                this.subtitleTracks = null,
                this.penalizedPathways = {},
                this.hls = t,
                this.log = w.log.bind(w, "[content-steering]:"),
                this.registerListeners()
            }
            var e = t.prototype;
            return e.registerListeners = function() {
                var t = this.hls;
                t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.MANIFEST_LOADED, this.onManifestLoaded, this),
                t.on(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.on(S.ERROR, this.onError, this)
            }
            ,
            e.unregisterListeners = function() {
                var t = this.hls;
                t && (t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.MANIFEST_LOADED, this.onManifestLoaded, this),
                t.off(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.off(S.ERROR, this.onError, this))
            }
            ,
            e.startLoad = function() {
                if (this.started = !0,
                this.clearTimeout(),
                this.enabled && this.uri) {
                    if (this.updated) {
                        var t = 1e3 * this.timeToLoad - (performance.now() - this.updated);
                        if (t > 0)
                            return void this.scheduleRefresh(this.uri, t)
                    }
                    this.loadSteeringManifest(this.uri)
                }
            }
            ,
            e.stopLoad = function() {
                this.started = !1,
                this.loader && (this.loader.destroy(),
                this.loader = null),
                this.clearTimeout()
            }
            ,
            e.clearTimeout = function() {
                -1 !== this.reloadTimer && (self.clearTimeout(this.reloadTimer),
                this.reloadTimer = -1)
            }
            ,
            e.destroy = function() {
                this.unregisterListeners(),
                this.stopLoad(),
                this.hls = null,
                this.levels = this.audioTracks = this.subtitleTracks = null
            }
            ,
            e.removeLevel = function(t) {
                var e = this.levels;
                e && (this.levels = e.filter((function(e) {
                    return e !== t
                }
                )))
            }
            ,
            e.onManifestLoading = function() {
                this.stopLoad(),
                this.enabled = !0,
                this.timeToLoad = 300,
                this.updated = 0,
                this.uri = null,
                this.pathwayId = ".",
                this.levels = this.audioTracks = this.subtitleTracks = null
            }
            ,
            e.onManifestLoaded = function(t, e) {
                var r = e.contentSteering;
                null !== r && (this.pathwayId = r.pathwayId,
                this.uri = r.uri,
                this.started && this.startLoad())
            }
            ,
            e.onManifestParsed = function(t, e) {
                this.audioTracks = e.audioTracks,
                this.subtitleTracks = e.subtitleTracks
            }
            ,
            e.onError = function(t, e) {
                var r = e.errorAction;
                if ((null == r ? void 0 : r.action) === Dr && r.flags === _r) {
                    var i = this.levels
                      , n = this.pathwayPriority
                      , a = this.pathwayId;
                    if (e.context) {
                        var s = e.context
                          , o = s.groupId
                          , l = s.pathwayId
                          , u = s.type;
                        o && i ? a = this.getPathwayForGroupId(o, u, a) : l && (a = l)
                    }
                    a in this.penalizedPathways || (this.penalizedPathways[a] = performance.now()),
                    !n && i && (n = i.reduce((function(t, e) {
                        return -1 === t.indexOf(e.pathwayId) && t.push(e.pathwayId),
                        t
                    }
                    ), [])),
                    n && n.length > 1 && (this.updatePathwayPriority(n),
                    r.resolved = this.pathwayId !== a),
                    r.resolved || w.warn("Could not resolve " + e.details + ' ("' + e.error.message + '") with content-steering for Pathway: ' + a + " levels: " + (i ? i.length : i) + " priorities: " + JSON.stringify(n) + " penalized: " + JSON.stringify(this.penalizedPathways))
                }
            }
            ,
            e.filterParsedLevels = function(t) {
                this.levels = t;
                var e = this.getLevelsForPathway(this.pathwayId);
                if (0 === e.length) {
                    var r = t[0].pathwayId;
                    this.log("No levels found in Pathway " + this.pathwayId + '. Setting initial Pathway to "' + r + '"'),
                    e = this.getLevelsForPathway(r),
                    this.pathwayId = r
                }
                return e.length !== t.length && this.log("Found " + e.length + "/" + t.length + ' levels in Pathway "' + this.pathwayId + '"'),
                e
            }
            ,
            e.getLevelsForPathway = function(t) {
                return null === this.levels ? [] : this.levels.filter((function(e) {
                    return t === e.pathwayId
                }
                ))
            }
            ,
            e.updatePathwayPriority = function(t) {
                var e;
                this.pathwayPriority = t;
                var r = this.penalizedPathways
                  , i = performance.now();
                Object.keys(r).forEach((function(t) {
                    i - r[t] > 3e5 && delete r[t]
                }
                ));
                for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    if (!(a in r)) {
                        if (a === this.pathwayId)
                            return;
                        var s = this.hls.nextLoadLevel
                          , o = this.hls.levels[s];
                        if ((e = this.getLevelsForPathway(a)).length > 0) {
                            this.log('Setting Pathway to "' + a + '"'),
                            this.pathwayId = a,
                            mr(e),
                            this.hls.trigger(S.LEVELS_UPDATED, {
                                levels: e
                            });
                            var l = this.hls.levels[s];
                            o && l && this.levels && (l.attrs["STABLE-VARIANT-ID"] !== o.attrs["STABLE-VARIANT-ID"] && l.bitrate !== o.bitrate && this.log("Unstable Pathways change from bitrate " + o.bitrate + " to " + l.bitrate),
                            this.hls.nextLoadLevel = s);
                            break
                        }
                    }
                }
            }
            ,
            e.getPathwayForGroupId = function(t, e, r) {
                for (var i = this.getLevelsForPathway(r).concat(this.levels || []), n = 0; n < i.length; n++)
                    if (e === xe && i[n].hasAudioGroup(t) || e === Pe && i[n].hasSubtitleGroup(t))
                        return i[n].pathwayId;
                return r
            }
            ,
            e.clonePathways = function(t) {
                var e = this
                  , r = this.levels;
                if (r) {
                    var i = {}
                      , n = {};
                    t.forEach((function(t) {
                        var a = t.ID
                          , s = t["BASE-ID"]
                          , o = t["URI-REPLACEMENT"];
                        if (!r.some((function(t) {
                            return t.pathwayId === a
                        }
                        ))) {
                            var l = e.getLevelsForPathway(s).map((function(t) {
                                var e = new x(t.attrs);
                                e["PATHWAY-ID"] = a;
                                var r = e.AUDIO && e.AUDIO + "_clone_" + a
                                  , s = e.SUBTITLES && e.SUBTITLES + "_clone_" + a;
                                r && (i[e.AUDIO] = r,
                                e.AUDIO = r),
                                s && (n[e.SUBTITLES] = s,
                                e.SUBTITLES = s);
                                var l = qs(t.uri, e["STABLE-VARIANT-ID"], "PER-VARIANT-URIS", o)
                                  , u = new or({
                                    attrs: e,
                                    audioCodec: t.audioCodec,
                                    bitrate: t.bitrate,
                                    height: t.height,
                                    name: t.name,
                                    url: l,
                                    videoCodec: t.videoCodec,
                                    width: t.width
                                });
                                if (t.audioGroups)
                                    for (var h = 1; h < t.audioGroups.length; h++)
                                        u.addGroupId("audio", t.audioGroups[h] + "_clone_" + a);
                                if (t.subtitleGroups)
                                    for (var d = 1; d < t.subtitleGroups.length; d++)
                                        u.addGroupId("text", t.subtitleGroups[d] + "_clone_" + a);
                                return u
                            }
                            ));
                            r.push.apply(r, l),
                            js(e.audioTracks, i, o, a),
                            js(e.subtitleTracks, n, o, a)
                        }
                    }
                    ))
                }
            }
            ,
            e.loadSteeringManifest = function(t) {
                var e, r = this, i = this.hls.config, n = i.loader;
                this.loader && this.loader.destroy(),
                this.loader = new n(i);
                try {
                    e = new self.URL(t)
                } catch (e) {
                    return this.enabled = !1,
                    void this.log("Failed to parse Steering Manifest URI: " + t)
                }
                if ("data:" !== e.protocol) {
                    var a = 0 | (this.hls.bandwidthEstimate || i.abrEwmaDefaultEstimate);
                    e.searchParams.set("_HLS_pathway", this.pathwayId),
                    e.searchParams.set("_HLS_throughput", "" + a)
                }
                var s = {
                    responseType: "json",
                    url: e.href
                }
                  , o = i.steeringManifestLoadPolicy.default
                  , l = o.errorRetry || o.timeoutRetry || {}
                  , u = {
                    loadPolicy: o,
                    timeout: o.maxLoadTimeMs,
                    maxRetry: l.maxNumRetry || 0,
                    retryDelay: l.retryDelayMs || 0,
                    maxRetryDelay: l.maxRetryDelayMs || 0
                }
                  , h = {
                    onSuccess: function(t, i, n, a) {
                        r.log('Loaded steering manifest: "' + e + '"');
                        var s = t.data;
                        if (1 === s.VERSION) {
                            r.updated = performance.now(),
                            r.timeToLoad = s.TTL;
                            var o = s["RELOAD-URI"]
                              , l = s["PATHWAY-CLONES"]
                              , u = s["PATHWAY-PRIORITY"];
                            if (o)
                                try {
                                    r.uri = new self.URL(o,e).href
                                } catch (t) {
                                    return r.enabled = !1,
                                    void r.log("Failed to parse Steering Manifest RELOAD-URI: " + o)
                                }
                            r.scheduleRefresh(r.uri || n.url),
                            l && r.clonePathways(l);
                            var h = {
                                steeringManifest: s,
                                url: e.toString()
                            };
                            r.hls.trigger(S.STEERING_MANIFEST_LOADED, h),
                            u && r.updatePathwayPriority(u)
                        } else
                            r.log("Steering VERSION " + s.VERSION + " not supported!")
                    },
                    onError: function(t, e, i, n) {
                        if (r.log("Error loading steering manifest: " + t.code + " " + t.text + " (" + e.url + ")"),
                        r.stopLoad(),
                        410 === t.code)
                            return r.enabled = !1,
                            void r.log("Steering manifest " + e.url + " no longer available");
                        var a = 1e3 * r.timeToLoad;
                        if (429 !== t.code)
                            r.scheduleRefresh(r.uri || e.url, a);
                        else {
                            var s = r.loader;
                            if ("function" == typeof (null == s ? void 0 : s.getResponseHeader)) {
                                var o = s.getResponseHeader("Retry-After");
                                o && (a = 1e3 * parseFloat(o))
                            }
                            r.log("Steering manifest " + e.url + " rate limited")
                        }
                    },
                    onTimeout: function(t, e, i) {
                        r.log("Timeout loading steering manifest (" + e.url + ")"),
                        r.scheduleRefresh(r.uri || e.url)
                    }
                };
                this.log("Requesting steering manifest: " + e),
                this.loader.load(s, u, h)
            }
            ,
            e.scheduleRefresh = function(t, e) {
                var r = this;
                void 0 === e && (e = 1e3 * this.timeToLoad),
                this.clearTimeout(),
                this.reloadTimer = self.setTimeout((function() {
                    var e, i = null == (e = r.hls) ? void 0 : e.media;
                    !i || i.ended ? r.scheduleRefresh(t, 1e3 * r.timeToLoad) : r.loadSteeringManifest(t)
                }
                ), e)
            }
            ,
            t
        }();
        function js(t, e, r, i) {
            t && Object.keys(e).forEach((function(n) {
                var a = t.filter((function(t) {
                    return t.groupId === n
                }
                )).map((function(t) {
                    var a = o({}, t);
                    return a.details = void 0,
                    a.attrs = new x(a.attrs),
                    a.url = a.attrs.URI = qs(t.url, t.attrs["STABLE-RENDITION-ID"], "PER-RENDITION-URIS", r),
                    a.groupId = a.attrs["GROUP-ID"] = e[n],
                    a.attrs["PATHWAY-ID"] = i,
                    a
                }
                ));
                t.push.apply(t, a)
            }
            ))
        }
        function qs(t, e, r, i) {
            var n, a = i.HOST, s = i.PARAMS, o = i[r];
            e && (n = null == o ? void 0 : o[e]) && (t = n);
            var l = new self.URL(t);
            return a && !n && (l.host = a),
            s && Object.keys(s).sort().forEach((function(t) {
                t && l.searchParams.set(t, s[t])
            }
            )),
            l.href
        }
        var Xs = /^age:\s*[\d.]+\s*$/im
          , zs = function() {
            function t(t) {
                this.xhrSetup = void 0,
                this.requestTimeout = void 0,
                this.retryTimeout = void 0,
                this.retryDelay = void 0,
                this.config = null,
                this.callbacks = null,
                this.context = null,
                this.loader = null,
                this.stats = void 0,
                this.xhrSetup = t && t.xhrSetup || null,
                this.stats = new M,
                this.retryDelay = 0
            }
            var e = t.prototype;
            return e.destroy = function() {
                this.callbacks = null,
                this.abortInternal(),
                this.loader = null,
                this.config = null,
                this.context = null,
                this.xhrSetup = null
            }
            ,
            e.abortInternal = function() {
                var t = this.loader;
                self.clearTimeout(this.requestTimeout),
                self.clearTimeout(this.retryTimeout),
                t && (t.onreadystatechange = null,
                t.onprogress = null,
                4 !== t.readyState && (this.stats.aborted = !0,
                t.abort()))
            }
            ,
            e.abort = function() {
                var t;
                this.abortInternal(),
                null != (t = this.callbacks) && t.onAbort && this.callbacks.onAbort(this.stats, this.context, this.loader)
            }
            ,
            e.load = function(t, e, r) {
                if (this.stats.loading.start)
                    throw new Error("Loader can only be used once.");
                this.stats.loading.start = self.performance.now(),
                this.context = t,
                this.config = e,
                this.callbacks = r,
                this.loadInternal()
            }
            ,
            e.loadInternal = function() {
                var t = this
                  , e = this.config
                  , r = this.context;
                if (e && r) {
                    var i = this.loader = new self.XMLHttpRequest
                      , n = this.stats;
                    n.loading.first = 0,
                    n.loaded = 0,
                    n.aborted = !1;
                    var a = this.xhrSetup;
                    a ? Promise.resolve().then((function() {
                        if (t.loader === i && !t.stats.aborted)
                            return a(i, r.url)
                    }
                    )).catch((function(e) {
                        if (t.loader === i && !t.stats.aborted)
                            return i.open("GET", r.url, !0),
                            a(i, r.url)
                    }
                    )).then((function() {
                        t.loader !== i || t.stats.aborted || t.openAndSendXhr(i, r, e)
                    }
                    )).catch((function(e) {
                        t.callbacks.onError({
                            code: i.status,
                            text: e.message
                        }, r, i, n)
                    }
                    )) : this.openAndSendXhr(i, r, e)
                }
            }
            ,
            e.openAndSendXhr = function(t, e, r) {
                t.readyState || t.open("GET", e.url, !0);
                var i = e.headers
                  , n = r.loadPolicy
                  , a = n.maxTimeToFirstByteMs
                  , s = n.maxLoadTimeMs;
                if (i)
                    for (var o in i)
                        t.setRequestHeader(o, i[o]);
                e.rangeEnd && t.setRequestHeader("Range", "bytes=" + e.rangeStart + "-" + (e.rangeEnd - 1)),
                t.onreadystatechange = this.readystatechange.bind(this),
                t.onprogress = this.loadprogress.bind(this),
                t.responseType = e.responseType,
                self.clearTimeout(this.requestTimeout),
                r.timeout = a && y(a) ? a : s,
                this.requestTimeout = self.setTimeout(this.loadtimeout.bind(this), r.timeout),
                t.send()
            }
            ,
            e.readystatechange = function() {
                var t = this.context
                  , e = this.loader
                  , r = this.stats;
                if (t && e) {
                    var i = e.readyState
                      , n = this.config;
                    if (!r.aborted && i >= 2 && (0 === r.loading.first && (r.loading.first = Math.max(self.performance.now(), r.loading.start),
                    n.timeout !== n.loadPolicy.maxLoadTimeMs && (self.clearTimeout(this.requestTimeout),
                    n.timeout = n.loadPolicy.maxLoadTimeMs,
                    this.requestTimeout = self.setTimeout(this.loadtimeout.bind(this), n.loadPolicy.maxLoadTimeMs - (r.loading.first - r.loading.start)))),
                    4 === i)) {
                        self.clearTimeout(this.requestTimeout),
                        e.onreadystatechange = null,
                        e.onprogress = null;
                        var a = e.status
                          , s = "text" !== e.responseType;
                        if (a >= 200 && a < 300 && (s && e.response || null !== e.responseText)) {
                            r.loading.end = Math.max(self.performance.now(), r.loading.first);
                            var o = s ? e.response : e.responseText
                              , l = "arraybuffer" === e.responseType ? o.byteLength : o.length;
                            if (r.loaded = r.total = l,
                            r.bwEstimate = 8e3 * r.total / (r.loading.end - r.loading.first),
                            !this.callbacks)
                                return;
                            var u = this.callbacks.onProgress;
                            if (u && u(r, t, o, e),
                            !this.callbacks)
                                return;
                            var h = {
                                url: e.responseURL,
                                data: o,
                                code: a
                            };
                            this.callbacks.onSuccess(h, r, t, e)
                        } else {
                            var d = n.loadPolicy.errorRetry;
                            Sr(d, r.retry, !1, {
                                url: t.url,
                                data: void 0,
                                code: a
                            }) ? this.retry(d) : (w.error(a + " while loading " + t.url),
                            this.callbacks.onError({
                                code: a,
                                text: e.statusText
                            }, t, e, r))
                        }
                    }
                }
            }
            ,
            e.loadtimeout = function() {
                if (this.config) {
                    var t = this.config.loadPolicy.timeoutRetry;
                    if (Sr(t, this.stats.retry, !0))
                        this.retry(t);
                    else {
                        var e;
                        w.warn("timeout while loading " + (null == (e = this.context) ? void 0 : e.url));
                        var r = this.callbacks;
                        r && (this.abortInternal(),
                        r.onTimeout(this.stats, this.context, this.loader))
                    }
                }
            }
            ,
            e.retry = function(t) {
                var e = this.context
                  , r = this.stats;
                this.retryDelay = Er(t, r.retry),
                r.retry++,
                w.warn((status ? "HTTP Status " + status : "Timeout") + " while loading " + (null == e ? void 0 : e.url) + ", retrying " + r.retry + "/" + t.maxNumRetry + " in " + this.retryDelay + "ms"),
                this.abortInternal(),
                this.loader = null,
                self.clearTimeout(this.retryTimeout),
                this.retryTimeout = self.setTimeout(this.loadInternal.bind(this), this.retryDelay)
            }
            ,
            e.loadprogress = function(t) {
                var e = this.stats;
                e.loaded = t.loaded,
                t.lengthComputable && (e.total = t.total)
            }
            ,
            e.getCacheAge = function() {
                var t = null;
                if (this.loader && Xs.test(this.loader.getAllResponseHeaders())) {
                    var e = this.loader.getResponseHeader("age");
                    t = e ? parseFloat(e) : null
                }
                return t
            }
            ,
            e.getResponseHeader = function(t) {
                return this.loader && new RegExp("^" + t + ":\\s*[\\d.]+\\s*$","im").test(this.loader.getAllResponseHeaders()) ? this.loader.getResponseHeader(t) : null
            }
            ,
            t
        }()
          , Qs = /(\d+)-(\d+)\/(\d+)/
          , Js = function() {
            function t(t) {
                this.fetchSetup = void 0,
                this.requestTimeout = void 0,
                this.request = null,
                this.response = null,
                this.controller = void 0,
                this.context = null,
                this.config = null,
                this.callbacks = null,
                this.stats = void 0,
                this.loader = null,
                this.fetchSetup = t.fetchSetup || $s,
                this.controller = new self.AbortController,
                this.stats = new M
            }
            var e = t.prototype;
            return e.destroy = function() {
                this.loader = this.callbacks = this.context = this.config = this.request = null,
                this.abortInternal(),
                this.response = null,
                this.fetchSetup = this.controller = this.stats = null
            }
            ,
            e.abortInternal = function() {
                this.controller && !this.stats.loading.end && (this.stats.aborted = !0,
                this.controller.abort())
            }
            ,
            e.abort = function() {
                var t;
                this.abortInternal(),
                null != (t = this.callbacks) && t.onAbort && this.callbacks.onAbort(this.stats, this.context, this.response)
            }
            ,
            e.load = function(t, e, r) {
                var i = this
                  , n = this.stats;
                if (n.loading.start)
                    throw new Error("Loader can only be used once.");
                n.loading.start = self.performance.now();
                var a = function(t, e) {
                    var r = {
                        method: "GET",
                        mode: "cors",
                        credentials: "same-origin",
                        signal: e,
                        headers: new self.Headers(o({}, t.headers))
                    };
                    return t.rangeEnd && r.headers.set("Range", "bytes=" + t.rangeStart + "-" + String(t.rangeEnd - 1)),
                    r
                }(t, this.controller.signal)
                  , s = r.onProgress
                  , l = "arraybuffer" === t.responseType
                  , u = l ? "byteLength" : "length"
                  , h = e.loadPolicy
                  , d = h.maxTimeToFirstByteMs
                  , c = h.maxLoadTimeMs;
                this.context = t,
                this.config = e,
                this.callbacks = r,
                this.request = this.fetchSetup(t, a),
                self.clearTimeout(this.requestTimeout),
                e.timeout = d && y(d) ? d : c,
                this.requestTimeout = self.setTimeout((function() {
                    i.abortInternal(),
                    r.onTimeout(n, t, i.response)
                }
                ), e.timeout),
                self.fetch(this.request).then((function(a) {
                    i.response = i.loader = a;
                    var o = Math.max(self.performance.now(), n.loading.start);
                    if (self.clearTimeout(i.requestTimeout),
                    e.timeout = c,
                    i.requestTimeout = self.setTimeout((function() {
                        i.abortInternal(),
                        r.onTimeout(n, t, i.response)
                    }
                    ), c - (o - n.loading.start)),
                    !a.ok) {
                        var u = a.status
                          , h = a.statusText;
                        throw new to(h || "fetch, bad network response",u,a)
                    }
                    return n.loading.first = o,
                    n.total = function(t) {
                        var e = t.get("Content-Range");
                        if (e) {
                            var r = function(t) {
                                var e = Qs.exec(t);
                                if (e)
                                    return parseInt(e[2]) - parseInt(e[1]) + 1
                            }(e);
                            if (y(r))
                                return r
                        }
                        var i = t.get("Content-Length");
                        if (i)
                            return parseInt(i)
                    }(a.headers) || n.total,
                    s && y(e.highWaterMark) ? i.loadProgressively(a, n, t, e.highWaterMark, s) : l ? a.arrayBuffer() : "json" === t.responseType ? a.json() : a.text()
                }
                )).then((function(a) {
                    var o = i.response;
                    if (!o)
                        throw new Error("loader destroyed");
                    self.clearTimeout(i.requestTimeout),
                    n.loading.end = Math.max(self.performance.now(), n.loading.first);
                    var l = a[u];
                    l && (n.loaded = n.total = l);
                    var h = {
                        url: o.url,
                        data: a,
                        code: o.status
                    };
                    s && !y(e.highWaterMark) && s(n, t, a, o),
                    r.onSuccess(h, n, t, o)
                }
                )).catch((function(e) {
                    if (self.clearTimeout(i.requestTimeout),
                    !n.aborted) {
                        var a = e && e.code || 0
                          , s = e ? e.message : null;
                        r.onError({
                            code: a,
                            text: s
                        }, t, e ? e.details : null, n)
                    }
                }
                ))
            }
            ,
            e.getCacheAge = function() {
                var t = null;
                if (this.response) {
                    var e = this.response.headers.get("age");
                    t = e ? parseFloat(e) : null
                }
                return t
            }
            ,
            e.getResponseHeader = function(t) {
                return this.response ? this.response.headers.get(t) : null
            }
            ,
            e.loadProgressively = function(t, e, r, i, n) {
                void 0 === i && (i = 0);
                var a = new xi
                  , s = t.body.getReader();
                return function o() {
                    return s.read().then((function(s) {
                        if (s.done)
                            return a.dataLength && n(e, r, a.flush(), t),
                            Promise.resolve(new ArrayBuffer(0));
                        var l = s.value
                          , u = l.length;
                        return e.loaded += u,
                        u < i || a.dataLength ? (a.push(l),
                        a.dataLength >= i && n(e, r, a.flush(), t)) : n(e, r, l, t),
                        o()
                    }
                    )).catch((function() {
                        return Promise.reject()
                    }
                    ))
                }()
            }
            ,
            t
        }();
        function $s(t, e) {
            return new self.Request(t.url,e)
        }
        var Zs, to = function(t) {
            function e(e, r, i) {
                var n;
                return (n = t.call(this, e) || this).code = void 0,
                n.details = void 0,
                n.code = r,
                n.details = i,
                n
            }
            return l(e, t),
            e
        }(c(Error)), eo = /\s/, ro = i(i({
            autoStartLoad: !0,
            startPosition: -1,
            defaultAudioCodec: void 0,
            debug: !1,
            capLevelOnFPSDrop: !1,
            capLevelToPlayerSize: !1,
            ignoreDevicePixelRatio: !1,
            preferManagedMediaSource: !0,
            initialLiveManifestSize: 1,
            maxBufferLength: 30,
            backBufferLength: 1 / 0,
            frontBufferFlushThreshold: 1 / 0,
            maxBufferSize: 6e7,
            maxBufferHole: .1,
            highBufferWatchdogPeriod: 2,
            nudgeOffset: .1,
            nudgeMaxRetry: 3,
            maxFragLookUpTolerance: .25,
            liveSyncDurationCount: 3,
            liveMaxLatencyDurationCount: 1 / 0,
            liveSyncDuration: void 0,
            liveMaxLatencyDuration: void 0,
            maxLiveSyncPlaybackRate: 1,
            liveDurationInfinity: !1,
            liveBackBufferLength: null,
            maxMaxBufferLength: 600,
            enableWorker: !0,
            workerPath: null,
            enableSoftwareAES: !0,
            startLevel: void 0,
            startFragPrefetch: !1,
            fpsDroppedMonitoringPeriod: 5e3,
            fpsDroppedMonitoringThreshold: .2,
            appendErrorMaxRetry: 3,
            loader: zs,
            fLoader: void 0,
            pLoader: void 0,
            xhrSetup: void 0,
            licenseXhrSetup: void 0,
            licenseResponseCallback: void 0,
            abrController: jr,
            bufferController: na,
            capLevelController: ts,
            errorController: Pr,
            fpsController: es,
            stretchShortVideoTrack: !1,
            maxAudioFramesDrift: 1,
            forceKeyFrameOnDiscontinuity: !0,
            abrEwmaFastLive: 3,
            abrEwmaSlowLive: 9,
            abrEwmaFastVoD: 3,
            abrEwmaSlowVoD: 9,
            abrEwmaDefaultEstimate: 5e5,
            abrEwmaDefaultEstimateMax: 5e6,
            abrBandWidthFactor: .95,
            abrBandWidthUpFactor: .7,
            abrMaxWithRealBitrate: !1,
            maxStarvationDelay: 4,
            maxLoadingDelay: 4,
            minAutoBitrate: 0,
            emeEnabled: !1,
            widevineLicenseUrl: void 0,
            drmSystems: {},
            drmSystemOptions: {},
            requestMediaKeySystemAccessFunc: ot,
            testBandwidth: !0,
            progressive: !1,
            lowLatencyMode: !0,
            cmcd: void 0,
            enableDateRangeMetadataCues: !0,
            enableEmsgMetadataCues: !0,
            enableID3MetadataCues: !0,
            useMediaCapabilities: !0,
            certLoadPolicy: {
                default: {
                    maxTimeToFirstByteMs: 8e3,
                    maxLoadTimeMs: 2e4,
                    timeoutRetry: null,
                    errorRetry: null
                }
            },
            keyLoadPolicy: {
                default: {
                    maxTimeToFirstByteMs: 8e3,
                    maxLoadTimeMs: 2e4,
                    timeoutRetry: {
                        maxNumRetry: 1,
                        retryDelayMs: 1e3,
                        maxRetryDelayMs: 2e4,
                        backoff: "linear"
                    },
                    errorRetry: {
                        maxNumRetry: 8,
                        retryDelayMs: 1e3,
                        maxRetryDelayMs: 2e4,
                        backoff: "linear"
                    }
                }
            },
            manifestLoadPolicy: {
                default: {
                    maxTimeToFirstByteMs: 1 / 0,
                    maxLoadTimeMs: 2e4,
                    timeoutRetry: {
                        maxNumRetry: 2,
                        retryDelayMs: 0,
                        maxRetryDelayMs: 0
                    },
                    errorRetry: {
                        maxNumRetry: 1,
                        retryDelayMs: 1e3,
                        maxRetryDelayMs: 8e3
                    }
                }
            },
            playlistLoadPolicy: {
                default: {
                    maxTimeToFirstByteMs: 1e4,
                    maxLoadTimeMs: 2e4,
                    timeoutRetry: {
                        maxNumRetry: 2,
                        retryDelayMs: 0,
                        maxRetryDelayMs: 0
                    },
                    errorRetry: {
                        maxNumRetry: 2,
                        retryDelayMs: 1e3,
                        maxRetryDelayMs: 8e3
                    }
                }
            },
            fragLoadPolicy: {
                default: {
                    maxTimeToFirstByteMs: 1e4,
                    maxLoadTimeMs: 12e4,
                    timeoutRetry: {
                        maxNumRetry: 4,
                        retryDelayMs: 0,
                        maxRetryDelayMs: 0
                    },
                    errorRetry: {
                        maxNumRetry: 6,
                        retryDelayMs: 1e3,
                        maxRetryDelayMs: 8e3
                    }
                }
            },
            steeringManifestLoadPolicy: {
                default: {
                    maxTimeToFirstByteMs: 1e4,
                    maxLoadTimeMs: 2e4,
                    timeoutRetry: {
                        maxNumRetry: 2,
                        retryDelayMs: 0,
                        maxRetryDelayMs: 0
                    },
                    errorRetry: {
                        maxNumRetry: 1,
                        retryDelayMs: 1e3,
                        maxRetryDelayMs: 8e3
                    }
                }
            },
            manifestLoadingTimeOut: 1e4,
            manifestLoadingMaxRetry: 1,
            manifestLoadingRetryDelay: 1e3,
            manifestLoadingMaxRetryTimeout: 64e3,
            levelLoadingTimeOut: 1e4,
            levelLoadingMaxRetry: 4,
            levelLoadingRetryDelay: 1e3,
            levelLoadingMaxRetryTimeout: 64e3,
            fragLoadingTimeOut: 2e4,
            fragLoadingMaxRetry: 6,
            fragLoadingRetryDelay: 1e3,
            fragLoadingMaxRetryTimeout: 64e3
        }, {
            cueHandler: {
                newCue: function(t, e, r, i) {
                    for (var n, a, s, o, l, u = [], h = self.VTTCue || self.TextTrackCue, d = 0; d < i.rows.length; d++)
                        if (s = !0,
                        o = 0,
                        l = "",
                        !(n = i.rows[d]).isEmpty()) {
                            for (var c, f = 0; f < n.chars.length; f++)
                                eo.test(n.chars[f].uchar) && s ? o++ : (l += n.chars[f].uchar,
                                s = !1);
                            n.cueStartTime = e,
                            e === r && (r += 1e-4),
                            o >= 16 ? o-- : o++;
                            var g = Pa(l.trim())
                              , v = Ua(e, r, g);
                            null != t && null != (c = t.cues) && c.getCueById(v) || ((a = new h(e,r,g)).id = v,
                            a.line = d + 1,
                            a.align = "left",
                            a.position = 10 + Math.min(80, 10 * Math.floor(8 * o / 32)),
                            u.push(a))
                        }
                    return t && u.length && (u.sort((function(t, e) {
                        return "auto" === t.line || "auto" === e.line ? 0 : t.line > 8 && e.line > 8 ? e.line - t.line : t.line - e.line
                    }
                    )),
                    u.forEach((function(e) {
                        return Ke(t, e)
                    }
                    ))),
                    u
                }
            },
            enableWebVTT: !0,
            enableIMSC1: !0,
            enableCEA708Captions: !0,
            captionsTextTrack1Label: "English",
            captionsTextTrack1LanguageCode: "en",
            captionsTextTrack2Label: "Spanish",
            captionsTextTrack2LanguageCode: "es",
            captionsTextTrack3Label: "Unknown CC",
            captionsTextTrack3LanguageCode: "",
            captionsTextTrack4Label: "Unknown CC",
            captionsTextTrack4LanguageCode: "",
            renderTextTracksNatively: !0
        }), {}, {
            subtitleStreamController: Zn,
            subtitleTrackController: ea,
            timelineController: Ja,
            audioStreamController: Jn,
            audioTrackController: $n,
            emeController: is,
            cmcdController: Ys,
            contentSteeringController: Ws
        });
        function io(t) {
            return t && "object" == typeof t ? Array.isArray(t) ? t.map(io) : Object.keys(t).reduce((function(e, r) {
                return e[r] = io(t[r]),
                e
            }
            ), {}) : t
        }
        function no(t) {
            var e = t.loader;
            e !== Js && e !== zs ? (w.log("[config]: Custom loader detected, cannot enable progressive streaming"),
            t.progressive = !1) : function() {
                if (self.fetch && self.AbortController && self.ReadableStream && self.Request)
                    try {
                        return new self.ReadableStream({}),
                        !0
                    } catch (t) {}
                return !1
            }() && (t.loader = Js,
            t.progressive = !0,
            t.enableSoftwareAES = !0,
            w.log("[config]: Progressive streaming enabled, using FetchLoader"))
        }
        var ao = function(t) {
            function e(e, r) {
                var i;
                return (i = t.call(this, e, "[level-controller]") || this)._levels = [],
                i._firstLevel = -1,
                i._maxAutoLevel = -1,
                i._startLevel = void 0,
                i.currentLevel = null,
                i.currentLevelIndex = -1,
                i.manualLevelIndex = -1,
                i.steering = void 0,
                i.onParsedComplete = void 0,
                i.steering = r,
                i._registerListeners(),
                i
            }
            l(e, t);
            var r = e.prototype;
            return r._registerListeners = function() {
                var t = this.hls;
                t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.MANIFEST_LOADED, this.onManifestLoaded, this),
                t.on(S.LEVEL_LOADED, this.onLevelLoaded, this),
                t.on(S.LEVELS_UPDATED, this.onLevelsUpdated, this),
                t.on(S.FRAG_BUFFERED, this.onFragBuffered, this),
                t.on(S.ERROR, this.onError, this)
            }
            ,
            r._unregisterListeners = function() {
                var t = this.hls;
                t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.MANIFEST_LOADED, this.onManifestLoaded, this),
                t.off(S.LEVEL_LOADED, this.onLevelLoaded, this),
                t.off(S.LEVELS_UPDATED, this.onLevelsUpdated, this),
                t.off(S.FRAG_BUFFERED, this.onFragBuffered, this),
                t.off(S.ERROR, this.onError, this)
            }
            ,
            r.destroy = function() {
                this._unregisterListeners(),
                this.steering = null,
                this.resetLevels(),
                t.prototype.destroy.call(this)
            }
            ,
            r.stopLoad = function() {
                this._levels.forEach((function(t) {
                    t.loadError = 0,
                    t.fragmentError = 0
                }
                )),
                t.prototype.stopLoad.call(this)
            }
            ,
            r.resetLevels = function() {
                this._startLevel = void 0,
                this.manualLevelIndex = -1,
                this.currentLevelIndex = -1,
                this.currentLevel = null,
                this._levels = [],
                this._maxAutoLevel = -1
            }
            ,
            r.onManifestLoading = function(t, e) {
                this.resetLevels()
            }
            ,
            r.onManifestLoaded = function(t, e) {
                var r = this.hls.config.preferManagedMediaSource
                  , i = []
                  , n = {}
                  , a = {}
                  , s = !1
                  , o = !1
                  , l = !1;
                e.levels.forEach((function(t) {
                    var e, u, h = t.attrs, d = t.audioCodec, c = t.videoCodec;
                    -1 !== (null == (e = d) ? void 0 : e.indexOf("mp4a.40.34")) && (Zs || (Zs = /chrome|firefox/i.test(navigator.userAgent)),
                    Zs && (t.audioCodec = d = void 0)),
                    d && (t.audioCodec = d = ve(d, r)),
                    0 === (null == (u = c) ? void 0 : u.indexOf("avc1")) && (c = t.videoCodec = function(t) {
                        for (var e = t.split(","), r = 0; r < e.length; r++) {
                            var i = e[r].split(".");
                            if (i.length > 2) {
                                var n = i.shift() + ".";
                                n += parseInt(i.shift()).toString(16),
                                n += ("000" + parseInt(i.shift()).toString(16)).slice(-4),
                                e[r] = n
                            }
                        }
                        return e.join(",")
                    }(c));
                    var f = t.width
                      , g = t.height
                      , v = t.unknownCodecs;
                    if (s || (s = !(!f || !g)),
                    o || (o = !!c),
                    l || (l = !!d),
                    !(null != v && v.length || d && !le(d, "audio", r) || c && !le(c, "video", r))) {
                        var m = h.CODECS
                          , p = h["FRAME-RATE"]
                          , y = h["HDCP-LEVEL"]
                          , E = h["PATHWAY-ID"]
                          , T = h.RESOLUTION
                          , S = h["VIDEO-RANGE"]
                          , L = (E || ".") + "-" + t.bitrate + "-" + T + "-" + p + "-" + m + "-" + S + "-" + y;
                        if (n[L])
                            if (n[L].uri === t.url || t.attrs["PATHWAY-ID"])
                                n[L].addGroupId("audio", h.AUDIO),
                                n[L].addGroupId("text", h.SUBTITLES);
                            else {
                                var A = a[L] += 1;
                                t.attrs["PATHWAY-ID"] = new Array(A + 1).join(".");
                                var R = new or(t);
                                n[L] = R,
                                i.push(R)
                            }
                        else {
                            var b = new or(t);
                            n[L] = b,
                            a[L] = 1,
                            i.push(b)
                        }
                    }
                }
                )),
                this.filterAndSortMediaOptions(i, e, s, o, l)
            }
            ,
            r.filterAndSortMediaOptions = function(t, e, r, i, n) {
                var a = this
                  , s = []
                  , o = []
                  , l = t;
                if ((r || i) && n && (l = l.filter((function(t) {
                    var e, r = t.videoCodec, i = t.videoRange, n = t.width, a = t.height;
                    return (!!r || !(!n || !a)) && !!(e = i) && er.indexOf(e) > -1
                }
                ))),
                0 !== l.length) {
                    if (e.audioTracks) {
                        var u = this.hls.config.preferManagedMediaSource;
                        so(s = e.audioTracks.filter((function(t) {
                            return !t.audioCodec || le(t.audioCodec, "audio", u)
                        }
                        )))
                    }
                    e.subtitles && so(o = e.subtitles);
                    var h = l.slice(0);
                    l.sort((function(t, e) {
                        if (t.attrs["HDCP-LEVEL"] !== e.attrs["HDCP-LEVEL"])
                            return (t.attrs["HDCP-LEVEL"] || "") > (e.attrs["HDCP-LEVEL"] || "") ? 1 : -1;
                        if (r && t.height !== e.height)
                            return t.height - e.height;
                        if (t.frameRate !== e.frameRate)
                            return t.frameRate - e.frameRate;
                        if (t.videoRange !== e.videoRange)
                            return er.indexOf(t.videoRange) - er.indexOf(e.videoRange);
                        if (t.videoCodec !== e.videoCodec) {
                            var i = de(t.videoCodec)
                              , n = de(e.videoCodec);
                            if (i !== n)
                                return n - i
                        }
                        if (t.uri === e.uri && t.codecSet !== e.codecSet) {
                            var a = ce(t.codecSet)
                              , s = ce(e.codecSet);
                            if (a !== s)
                                return s - a
                        }
                        return t.averageBitrate !== e.averageBitrate ? t.averageBitrate - e.averageBitrate : 0
                    }
                    ));
                    var d = h[0];
                    if (this.steering && (l = this.steering.filterParsedLevels(l)).length !== h.length)
                        for (var c = 0; c < h.length; c++)
                            if (h[c].pathwayId === l[0].pathwayId) {
                                d = h[c];
                                break
                            }
                    this._levels = l;
                    for (var f = 0; f < l.length; f++)
                        if (l[f] === d) {
                            var g;
                            this._firstLevel = f;
                            var v = d.bitrate
                              , m = this.hls.bandwidthEstimate;
                            if (this.log("manifest loaded, " + l.length + " level(s) found, first bitrate: " + v),
                            void 0 === (null == (g = this.hls.userConfig) ? void 0 : g.abrEwmaDefaultEstimate)) {
                                var p = Math.min(v, this.hls.config.abrEwmaDefaultEstimateMax);
                                p > m && m === ro.abrEwmaDefaultEstimate && (this.hls.bandwidthEstimate = p)
                            }
                            break
                        }
                    var y = n && !i
                      , E = {
                        levels: l,
                        audioTracks: s,
                        subtitleTracks: o,
                        sessionData: e.sessionData,
                        sessionKeys: e.sessionKeys,
                        firstLevel: this._firstLevel,
                        stats: e.stats,
                        audio: n,
                        video: i,
                        altAudio: !y && s.some((function(t) {
                            return !!t.url
                        }
                        ))
                    };
                    this.hls.trigger(S.MANIFEST_PARSED, E),
                    (this.hls.config.autoStartLoad || this.hls.forceStartLoad) && this.hls.startLoad(this.hls.config.startPosition)
                } else
                    Promise.resolve().then((function() {
                        if (a.hls) {
                            e.levels.length && a.warn("One or more CODECS in variant not supported: " + JSON.stringify(e.levels[0].attrs));
                            var t = new Error("no level with compatible codecs found in manifest");
                            a.hls.trigger(S.ERROR, {
                                type: L.MEDIA_ERROR,
                                details: A.MANIFEST_INCOMPATIBLE_CODECS_ERROR,
                                fatal: !0,
                                url: e.url,
                                error: t,
                                reason: t.message
                            })
                        }
                    }
                    ))
            }
            ,
            r.onError = function(t, e) {
                !e.fatal && e.context && e.context.type === _e && e.context.level === this.level && this.checkRetry(e)
            }
            ,
            r.onFragBuffered = function(t, e) {
                var r = e.frag;
                if (void 0 !== r && r.type === Fe) {
                    var i = r.elementaryStreams;
                    if (!Object.keys(i).some((function(t) {
                        return !!i[t]
                    }
                    )))
                        return;
                    var n = this._levels[r.level];
                    null != n && n.loadError && (this.log("Resetting level error count of " + n.loadError + " on frag buffered"),
                    n.loadError = 0)
                }
            }
            ,
            r.onLevelLoaded = function(t, e) {
                var r, i, n = e.level, a = e.details, s = this._levels[n];
                if (!s)
                    return this.warn("Invalid level index " + n),
                    void (null != (i = e.deliveryDirectives) && i.skip && (a.deltaUpdateFailed = !0));
                n === this.currentLevelIndex ? (0 === s.fragmentError && (s.loadError = 0),
                this.playlistLoaded(n, e, s.details)) : null != (r = e.deliveryDirectives) && r.skip && (a.deltaUpdateFailed = !0)
            }
            ,
            r.loadPlaylist = function(e) {
                t.prototype.loadPlaylist.call(this);
                var r = this.currentLevelIndex
                  , i = this.currentLevel;
                if (i && this.shouldLoadPlaylist(i)) {
                    var n = i.uri;
                    if (e)
                        try {
                            n = e.addDirectives(n)
                        } catch (t) {
                            this.warn("Could not construct new URL with HLS Delivery Directives: " + t)
                        }
                    var a = i.attrs["PATHWAY-ID"];
                    this.log("Loading level index " + r + (void 0 !== (null == e ? void 0 : e.msn) ? " at sn " + e.msn + " part " + e.part : "") + " with" + (a ? " Pathway " + a : "") + " " + n),
                    this.clearTimer(),
                    this.hls.trigger(S.LEVEL_LOADING, {
                        url: n,
                        level: r,
                        pathwayId: i.attrs["PATHWAY-ID"],
                        id: 0,
                        deliveryDirectives: e || null
                    })
                }
            }
            ,
            r.removeLevel = function(t) {
                var e, r = this, i = this._levels.filter((function(e, i) {
                    return i !== t || (r.steering && r.steering.removeLevel(e),
                    e === r.currentLevel && (r.currentLevel = null,
                    r.currentLevelIndex = -1,
                    e.details && e.details.fragments.forEach((function(t) {
                        return t.level = -1
                    }
                    ))),
                    !1)
                }
                ));
                mr(i),
                this._levels = i,
                this.currentLevelIndex > -1 && null != (e = this.currentLevel) && e.details && (this.currentLevelIndex = this.currentLevel.details.fragments[0].level),
                this.hls.trigger(S.LEVELS_UPDATED, {
                    levels: i
                })
            }
            ,
            r.onLevelsUpdated = function(t, e) {
                var r = e.levels;
                this._levels = r
            }
            ,
            r.checkMaxAutoUpdated = function() {
                var t = this.hls
                  , e = t.autoLevelCapping
                  , r = t.maxAutoLevel
                  , i = t.maxHdcpLevel;
                this._maxAutoLevel !== r && (this._maxAutoLevel = r,
                this.hls.trigger(S.MAX_AUTO_LEVEL_UPDATED, {
                    autoLevelCapping: e,
                    levels: this.levels,
                    maxAutoLevel: r,
                    minAutoLevel: this.hls.minAutoLevel,
                    maxHdcpLevel: i
                }))
            }
            ,
            s(e, [{
                key: "levels",
                get: function() {
                    return 0 === this._levels.length ? null : this._levels
                }
            }, {
                key: "level",
                get: function() {
                    return this.currentLevelIndex
                },
                set: function(t) {
                    var e = this._levels;
                    if (0 !== e.length) {
                        if (t < 0 || t >= e.length) {
                            var r = new Error("invalid level idx")
                              , i = t < 0;
                            if (this.hls.trigger(S.ERROR, {
                                type: L.OTHER_ERROR,
                                details: A.LEVEL_SWITCH_ERROR,
                                level: t,
                                fatal: i,
                                error: r,
                                reason: r.message
                            }),
                            i)
                                return;
                            t = Math.min(t, e.length - 1)
                        }
                        var n = this.currentLevelIndex
                          , a = this.currentLevel
                          , s = a ? a.attrs["PATHWAY-ID"] : void 0
                          , o = e[t]
                          , l = o.attrs["PATHWAY-ID"];
                        if (this.currentLevelIndex = t,
                        this.currentLevel = o,
                        n !== t || !o.details || !a || s !== l) {
                            this.log("Switching to level " + t + " (" + (o.height ? o.height + "p " : "") + (o.videoRange ? o.videoRange + " " : "") + (o.codecSet ? o.codecSet + " " : "") + "@" + o.bitrate + ")" + (l ? " with Pathway " + l : "") + " from level " + n + (s ? " with Pathway " + s : ""));
                            var u = {
                                level: t,
                                attrs: o.attrs,
                                details: o.details,
                                bitrate: o.bitrate,
                                averageBitrate: o.averageBitrate,
                                maxBitrate: o.maxBitrate,
                                realBitrate: o.realBitrate,
                                width: o.width,
                                height: o.height,
                                codecSet: o.codecSet,
                                audioCodec: o.audioCodec,
                                videoCodec: o.videoCodec,
                                audioGroups: o.audioGroups,
                                subtitleGroups: o.subtitleGroups,
                                loaded: o.loaded,
                                loadError: o.loadError,
                                fragmentError: o.fragmentError,
                                name: o.name,
                                id: o.id,
                                uri: o.uri,
                                url: o.url,
                                urlId: 0,
                                audioGroupIds: o.audioGroupIds,
                                textGroupIds: o.textGroupIds
                            };
                            this.hls.trigger(S.LEVEL_SWITCHING, u);
                            var h = o.details;
                            if (!h || h.live) {
                                var d = this.switchParams(o.uri, null == a ? void 0 : a.details, h);
                                this.loadPlaylist(d)
                            }
                        }
                    }
                }
            }, {
                key: "manualLevel",
                get: function() {
                    return this.manualLevelIndex
                },
                set: function(t) {
                    this.manualLevelIndex = t,
                    void 0 === this._startLevel && (this._startLevel = t),
                    -1 !== t && (this.level = t)
                }
            }, {
                key: "firstLevel",
                get: function() {
                    return this._firstLevel
                },
                set: function(t) {
                    this._firstLevel = t
                }
            }, {
                key: "startLevel",
                get: function() {
                    if (void 0 === this._startLevel) {
                        var t = this.hls.config.startLevel;
                        return void 0 !== t ? t : this.hls.firstAutoLevel
                    }
                    return this._startLevel
                },
                set: function(t) {
                    this._startLevel = t
                }
            }, {
                key: "nextLoadLevel",
                get: function() {
                    return -1 !== this.manualLevelIndex ? this.manualLevelIndex : this.hls.nextAutoLevel
                },
                set: function(t) {
                    this.level = t,
                    -1 === this.manualLevelIndex && (this.hls.nextAutoLevel = t)
                }
            }]),
            e
        }(Fr);
        function so(t) {
            var e = {};
            t.forEach((function(t) {
                var r = t.groupId || "";
                t.id = e[r] = e[r] || 0,
                e[r]++
            }
            ))
        }
        var oo = function() {
            function t(t) {
                this.config = void 0,
                this.keyUriToKeyInfo = {},
                this.emeController = null,
                this.config = t
            }
            var e = t.prototype;
            return e.abort = function(t) {
                for (var e in this.keyUriToKeyInfo) {
                    var r = this.keyUriToKeyInfo[e].loader;
                    if (r) {
                        var i;
                        if (t && t !== (null == (i = r.context) ? void 0 : i.frag.type))
                            return;
                        r.abort()
                    }
                }
            }
            ,
            e.detach = function() {
                for (var t in this.keyUriToKeyInfo) {
                    var e = this.keyUriToKeyInfo[t];
                    (e.mediaKeySessionContext || e.decryptdata.isCommonEncryption) && delete this.keyUriToKeyInfo[t]
                }
            }
            ,
            e.destroy = function() {
                for (var t in this.detach(),
                this.keyUriToKeyInfo) {
                    var e = this.keyUriToKeyInfo[t].loader;
                    e && e.destroy()
                }
                this.keyUriToKeyInfo = {}
            }
            ,
            e.createKeyLoadError = function(t, e, r, i, n) {
                return void 0 === e && (e = A.KEY_LOAD_ERROR),
                new fi({
                    type: L.NETWORK_ERROR,
                    details: e,
                    fatal: !1,
                    frag: t,
                    response: n,
                    error: r,
                    networkDetails: i
                })
            }
            ,
            e.loadClear = function(t, e) {
                var r = this;
                if (this.emeController && this.config.emeEnabled)
                    for (var i = t.sn, n = t.cc, a = function() {
                        var t = e[s];
                        if (n <= t.cc && ("initSegment" === i || "initSegment" === t.sn || i < t.sn))
                            return r.emeController.selectKeySystemFormat(t).then((function(e) {
                                t.setKeyFormat(e)
                            }
                            )),
                            1
                    }, s = 0; s < e.length && !a(); s++)
                        ;
            }
            ,
            e.load = function(t) {
                var e = this;
                return !t.decryptdata && t.encrypted && this.emeController ? this.emeController.selectKeySystemFormat(t).then((function(r) {
                    return e.loadInternal(t, r)
                }
                )) : this.loadInternal(t)
            }
            ,
            e.loadInternal = function(t, e) {
                var r, i;
                e && t.setKeyFormat(e);
                var n = t.decryptdata;
                if (!n) {
                    var a = new Error(e ? "Expected frag.decryptdata to be defined after setting format " + e : "Missing decryption data on fragment in onKeyLoading");
                    return Promise.reject(this.createKeyLoadError(t, A.KEY_LOAD_ERROR, a))
                }
                var s = n.uri;
                if (!s)
                    return Promise.reject(this.createKeyLoadError(t, A.KEY_LOAD_ERROR, new Error('Invalid key URI: "' + s + '"')));
                var o, l = this.keyUriToKeyInfo[s];
                if (null != (r = l) && r.decryptdata.key)
                    return n.key = l.decryptdata.key,
                    Promise.resolve({
                        frag: t,
                        keyInfo: l
                    });
                if (null != (i = l) && i.keyLoadPromise)
                    switch (null == (o = l.mediaKeySessionContext) ? void 0 : o.keyStatus) {
                    case void 0:
                    case "status-pending":
                    case "usable":
                    case "usable-in-future":
                        return l.keyLoadPromise.then((function(e) {
                            return n.key = e.keyInfo.decryptdata.key,
                            {
                                frag: t,
                                keyInfo: l
                            }
                        }
                        ))
                    }
                switch (l = this.keyUriToKeyInfo[s] = {
                    decryptdata: n,
                    keyLoadPromise: null,
                    loader: null,
                    mediaKeySessionContext: null
                },
                n.method) {
                case "ISO-23001-7":
                case "SAMPLE-AES":
                case "SAMPLE-AES-CENC":
                case "SAMPLE-AES-CTR":
                    return "identity" === n.keyFormat ? this.loadKeyHTTP(l, t) : this.loadKeyEME(l, t);
                case "AES-128":
                    return this.loadKeyHTTP(l, t);
                default:
                    return Promise.reject(this.createKeyLoadError(t, A.KEY_LOAD_ERROR, new Error('Key supplied with unsupported METHOD: "' + n.method + '"')))
                }
            }
            ,
            e.loadKeyEME = function(t, e) {
                var r = {
                    frag: e,
                    keyInfo: t
                };
                if (this.emeController && this.config.emeEnabled) {
                    var i = this.emeController.loadKey(r);
                    if (i)
                        return (t.keyLoadPromise = i.then((function(e) {
                            return t.mediaKeySessionContext = e,
                            r
                        }
                        ))).catch((function(e) {
                            throw t.keyLoadPromise = null,
                            e
                        }
                        ))
                }
                return Promise.resolve(r)
            }
            ,
            e.loadKeyHTTP = function(t, e) {
                var r = this
                  , n = this.config
                  , a = new (0,
                n.loader)(n);
                return e.keyLoader = t.loader = a,
                t.keyLoadPromise = new Promise((function(s, o) {
                    var l = {
                        keyInfo: t,
                        frag: e,
                        responseType: "arraybuffer",
                        url: t.decryptdata.uri
                    }
                      , u = n.keyLoadPolicy.default
                      , h = {
                        loadPolicy: u,
                        timeout: u.maxLoadTimeMs,
                        maxRetry: 0,
                        retryDelay: 0,
                        maxRetryDelay: 0
                    }
                      , d = {
                        onSuccess: function(t, e, i, n) {
                            var a = i.frag
                              , l = i.keyInfo
                              , u = i.url;
                            if (!a.decryptdata || l !== r.keyUriToKeyInfo[u])
                                return o(r.createKeyLoadError(a, A.KEY_LOAD_ERROR, new Error("after key load, decryptdata unset or changed"), n));
                            l.decryptdata.key = a.decryptdata.key = new Uint8Array(t.data),
                            a.keyLoader = null,
                            l.loader = null,
                            s({
                                frag: a,
                                keyInfo: l
                            })
                        },
                        onError: function(t, n, a, s) {
                            r.resetLoader(n),
                            o(r.createKeyLoadError(e, A.KEY_LOAD_ERROR, new Error("HTTP Error " + t.code + " loading key " + t.text), a, i({
                                url: l.url,
                                data: void 0
                            }, t)))
                        },
                        onTimeout: function(t, i, n) {
                            r.resetLoader(i),
                            o(r.createKeyLoadError(e, A.KEY_LOAD_TIMEOUT, new Error("key loading timed out"), n))
                        },
                        onAbort: function(t, i, n) {
                            r.resetLoader(i),
                            o(r.createKeyLoadError(e, A.INTERNAL_ABORTED, new Error("key loading aborted"), n))
                        }
                    };
                    a.load(l, h, d)
                }
                ))
            }
            ,
            e.resetLoader = function(t) {
                var e = t.frag
                  , r = t.keyInfo
                  , i = t.url
                  , n = r.loader;
                e.keyLoader === n && (e.keyLoader = null,
                r.loader = null),
                delete this.keyUriToKeyInfo[i],
                n && n.destroy()
            }
            ,
            t
        }();
        function lo() {
            return self.SourceBuffer || self.WebKitSourceBuffer
        }
        function uo() {
            if (!se())
                return !1;
            var t = lo();
            return !t || t.prototype && "function" == typeof t.prototype.appendBuffer && "function" == typeof t.prototype.remove
        }
        var ho = function() {
            function t(t, e, r, i) {
                this.config = void 0,
                this.media = null,
                this.fragmentTracker = void 0,
                this.hls = void 0,
                this.nudgeRetry = 0,
                this.stallReported = !1,
                this.stalled = null,
                this.moved = !1,
                this.seeking = !1,
                this.config = t,
                this.media = e,
                this.fragmentTracker = r,
                this.hls = i
            }
            var e = t.prototype;
            return e.destroy = function() {
                this.media = null,
                this.hls = this.fragmentTracker = null
            }
            ,
            e.poll = function(t, e) {
                var r = this.config
                  , i = this.media
                  , n = this.stalled;
                if (null !== i) {
                    var a = i.currentTime
                      , s = i.seeking
                      , o = this.seeking && !s
                      , l = !this.seeking && s;
                    if (this.seeking = s,
                    a === t)
                        if (l || o)
                            this.stalled = null;
                        else if (i.paused && !s || i.ended || 0 === i.playbackRate || !ri.getBuffered(i).length)
                            this.nudgeRetry = 0;
                        else {
                            var u = ri.bufferInfo(i, a, 0)
                              , h = u.nextStart || 0;
                            if (s) {
                                var d = u.len > 2
                                  , c = !h || e && e.start <= a || h - a > 2 && !this.fragmentTracker.getPartialFragment(a);
                                if (d || c)
                                    return;
                                this.moved = !1
                            }
                            if (!this.moved && null !== this.stalled) {
                                var f;
                                if (!(u.len > 0 || h))
                                    return;
                                var g = Math.max(h, u.start || 0) - a
                                  , v = this.hls.levels ? this.hls.levels[this.hls.currentLevel] : null
                                  , m = (null == v || null == (f = v.details) ? void 0 : f.live) ? 2 * v.details.targetduration : 2
                                  , p = this.fragmentTracker.getPartialFragment(a);
                                if (g > 0 && (g <= m || p))
                                    return void (i.paused || this._trySkipBufferHole(p))
                            }
                            var y = self.performance.now();
                            if (null !== n) {
                                var E = y - n;
                                if (s || !(E >= 250) || (this._reportStall(u),
                                this.media)) {
                                    var T = ri.bufferInfo(i, a, r.maxBufferHole);
                                    this._tryFixBufferStall(T, E)
                                }
                            } else
                                this.stalled = y
                        }
                    else if (this.moved = !0,
                    s || (this.nudgeRetry = 0),
                    null !== n) {
                        if (this.stallReported) {
                            var S = self.performance.now() - n;
                            w.warn("playback not stuck anymore @" + a + ", after " + Math.round(S) + "ms"),
                            this.stallReported = !1
                        }
                        this.stalled = null
                    }
                }
            }
            ,
            e._tryFixBufferStall = function(t, e) {
                var r = this.config
                  , i = this.fragmentTracker
                  , n = this.media;
                if (null !== n) {
                    var a = n.currentTime
                      , s = i.getPartialFragment(a);
                    if (s && (this._trySkipBufferHole(s) || !this.media))
                        return;
                    (t.len > r.maxBufferHole || t.nextStart && t.nextStart - a < r.maxBufferHole) && e > 1e3 * r.highBufferWatchdogPeriod && (w.warn("Trying to nudge playhead over buffer-hole"),
                    this.stalled = null,
                    this._tryNudgeBuffer())
                }
            }
            ,
            e._reportStall = function(t) {
                var e = this.hls
                  , r = this.media;
                if (!this.stallReported && r) {
                    this.stallReported = !0;
                    var i = new Error("Playback stalling at @" + r.currentTime + " due to low buffer (" + JSON.stringify(t) + ")");
                    w.warn(i.message),
                    e.trigger(S.ERROR, {
                        type: L.MEDIA_ERROR,
                        details: A.BUFFER_STALLED_ERROR,
                        fatal: !1,
                        error: i,
                        buffer: t.len
                    })
                }
            }
            ,
            e._trySkipBufferHole = function(t) {
                var e = this.config
                  , r = this.hls
                  , i = this.media;
                if (null === i)
                    return 0;
                var n = i.currentTime
                  , a = ri.bufferInfo(i, n, 0)
                  , s = n < a.start ? a.start : a.nextStart;
                if (s) {
                    var o = a.len <= e.maxBufferHole
                      , l = a.len > 0 && a.len < 1 && i.readyState < 3
                      , u = s - n;
                    if (u > 0 && (o || l)) {
                        if (u > e.maxBufferHole) {
                            var h = this.fragmentTracker
                              , d = !1;
                            if (0 === n) {
                                var c = h.getAppendedFrag(0, Fe);
                                c && s < c.end && (d = !0)
                            }
                            if (!d) {
                                var f = t || h.getAppendedFrag(n, Fe);
                                if (f) {
                                    for (var g = !1, v = f.end; v < s; ) {
                                        var m = h.getPartialFragment(v);
                                        if (!m) {
                                            g = !0;
                                            break
                                        }
                                        v += m.duration
                                    }
                                    if (g)
                                        return 0
                                }
                            }
                        }
                        var p = Math.max(s + .05, n + .1);
                        if (w.warn("skipping hole, adjusting currentTime from " + n + " to " + p),
                        this.moved = !0,
                        this.stalled = null,
                        i.currentTime = p,
                        t && !t.gap) {
                            var y = new Error("fragment loaded with buffer holes, seeking from " + n + " to " + p);
                            r.trigger(S.ERROR, {
                                type: L.MEDIA_ERROR,
                                details: A.BUFFER_SEEK_OVER_HOLE,
                                fatal: !1,
                                error: y,
                                reason: y.message,
                                frag: t
                            })
                        }
                        return p
                    }
                }
                return 0
            }
            ,
            e._tryNudgeBuffer = function() {
                var t = this.config
                  , e = this.hls
                  , r = this.media
                  , i = this.nudgeRetry;
                if (null !== r) {
                    var n = r.currentTime;
                    if (this.nudgeRetry++,
                    i < t.nudgeMaxRetry) {
                        var a = n + (i + 1) * t.nudgeOffset
                          , s = new Error("Nudging 'currentTime' from " + n + " to " + a);
                        w.warn(s.message),
                        r.currentTime = a,
                        e.trigger(S.ERROR, {
                            type: L.MEDIA_ERROR,
                            details: A.BUFFER_NUDGE_ON_STALL,
                            error: s,
                            fatal: !1
                        })
                    } else {
                        var o = new Error("Playhead still not moving while enough data buffered @" + n + " after " + t.nudgeMaxRetry + " nudges");
                        w.error(o.message),
                        e.trigger(S.ERROR, {
                            type: L.MEDIA_ERROR,
                            details: A.BUFFER_STALLED_ERROR,
                            error: o,
                            fatal: !0
                        })
                    }
                }
            }
            ,
            t
        }()
          , co = function(t) {
            function e(e, r, i) {
                var n;
                return (n = t.call(this, e, r, i, "[stream-controller]", Fe) || this).audioCodecSwap = !1,
                n.gapController = null,
                n.level = -1,
                n._forceStartLoad = !1,
                n.altAudio = !1,
                n.audioOnly = !1,
                n.fragPlaying = null,
                n.onvplaying = null,
                n.onvseeked = null,
                n.fragLastKbps = 0,
                n.couldBacktrack = !1,
                n.backtrackFragment = null,
                n.audioCodecSwitch = !1,
                n.videoBuffer = null,
                n._registerListeners(),
                n
            }
            l(e, t);
            var r = e.prototype;
            return r._registerListeners = function() {
                var t = this.hls;
                t.on(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.on(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.on(S.LEVEL_LOADING, this.onLevelLoading, this),
                t.on(S.LEVEL_LOADED, this.onLevelLoaded, this),
                t.on(S.FRAG_LOAD_EMERGENCY_ABORTED, this.onFragLoadEmergencyAborted, this),
                t.on(S.ERROR, this.onError, this),
                t.on(S.AUDIO_TRACK_SWITCHING, this.onAudioTrackSwitching, this),
                t.on(S.AUDIO_TRACK_SWITCHED, this.onAudioTrackSwitched, this),
                t.on(S.BUFFER_CREATED, this.onBufferCreated, this),
                t.on(S.BUFFER_FLUSHED, this.onBufferFlushed, this),
                t.on(S.LEVELS_UPDATED, this.onLevelsUpdated, this),
                t.on(S.FRAG_BUFFERED, this.onFragBuffered, this)
            }
            ,
            r._unregisterListeners = function() {
                var t = this.hls;
                t.off(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.off(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.off(S.LEVEL_LOADED, this.onLevelLoaded, this),
                t.off(S.FRAG_LOAD_EMERGENCY_ABORTED, this.onFragLoadEmergencyAborted, this),
                t.off(S.ERROR, this.onError, this),
                t.off(S.AUDIO_TRACK_SWITCHING, this.onAudioTrackSwitching, this),
                t.off(S.AUDIO_TRACK_SWITCHED, this.onAudioTrackSwitched, this),
                t.off(S.BUFFER_CREATED, this.onBufferCreated, this),
                t.off(S.BUFFER_FLUSHED, this.onBufferFlushed, this),
                t.off(S.LEVELS_UPDATED, this.onLevelsUpdated, this),
                t.off(S.FRAG_BUFFERED, this.onFragBuffered, this)
            }
            ,
            r.onHandlerDestroying = function() {
                this._unregisterListeners(),
                t.prototype.onHandlerDestroying.call(this)
            }
            ,
            r.startLoad = function(t) {
                if (this.levels) {
                    var e = this.lastCurrentTime
                      , r = this.hls;
                    if (this.stopLoad(),
                    this.setInterval(100),
                    this.level = -1,
                    !this.startFragRequested) {
                        var i = r.startLevel;
                        -1 === i && (r.config.testBandwidth && this.levels.length > 1 ? (i = 0,
                        this.bitrateTest = !0) : i = r.firstAutoLevel),
                        r.nextLoadLevel = i,
                        this.level = r.loadLevel,
                        this.loadedmetadata = !1
                    }
                    e > 0 && -1 === t && (this.log("Override startPosition with lastCurrentTime @" + e.toFixed(3)),
                    t = e),
                    this.state = Ti,
                    this.nextLoadPosition = this.startPosition = this.lastCurrentTime = t,
                    this.tick()
                } else
                    this._forceStartLoad = !0,
                    this.state = Ei
            }
            ,
            r.stopLoad = function() {
                this._forceStartLoad = !1,
                t.prototype.stopLoad.call(this)
            }
            ,
            r.doTick = function() {
                switch (this.state) {
                case Ci:
                    var t = this.levels
                      , e = this.level
                      , r = null == t ? void 0 : t[e]
                      , i = null == r ? void 0 : r.details;
                    if (i && (!i.live || this.levelLastLoaded === r)) {
                        if (this.waitForCdnTuneIn(i))
                            break;
                        this.state = Ti;
                        break
                    }
                    if (this.hls.nextLoadLevel !== this.level) {
                        this.state = Ti;
                        break
                    }
                    break;
                case Ai:
                    var n, a = self.performance.now(), s = this.retryDate;
                    if (!s || a >= s || null != (n = this.media) && n.seeking) {
                        var o = this.levels
                          , l = this.level
                          , u = null == o ? void 0 : o[l];
                        this.resetStartWhenNotLoaded(u || null),
                        this.state = Ti
                    }
                }
                this.state === Ti && this.doTickIdle(),
                this.onTickEnd()
            }
            ,
            r.onTickEnd = function() {
                t.prototype.onTickEnd.call(this),
                this.checkBuffer(),
                this.checkFragmentChanged()
            }
            ,
            r.doTickIdle = function() {
                var t = this.hls
                  , e = this.levelLastLoaded
                  , r = this.levels
                  , i = this.media;
                if (null !== e && (i || !this.startFragRequested && t.config.startFragPrefetch) && (!this.altAudio || !this.audioOnly)) {
                    var n = t.nextLoadLevel;
                    if (null != r && r[n]) {
                        var a = r[n]
                          , s = this.getMainFwdBufferInfo();
                        if (null !== s) {
                            var o = this.getLevelDetails();
                            if (o && this._streamEnded(s, o)) {
                                var l = {};
                                return this.altAudio && (l.type = "video"),
                                this.hls.trigger(S.BUFFER_EOS, l),
                                void (this.state = Di)
                            }
                            t.loadLevel !== n && -1 === t.manualLevel && this.log("Adapting to level " + n + " from level " + this.level),
                            this.level = t.nextLoadLevel = n;
                            var u = a.details;
                            if (!u || this.state === Ci || u.live && this.levelLastLoaded !== a)
                                return this.level = n,
                                void (this.state = Ci);
                            var h = s.len
                              , d = this.getMaxBufferLength(a.maxBitrate);
                            if (!(h >= d)) {
                                this.backtrackFragment && this.backtrackFragment.start > s.end && (this.backtrackFragment = null);
                                var c = this.backtrackFragment ? this.backtrackFragment.start : s.end
                                  , f = this.getNextFragment(c, u);
                                if (this.couldBacktrack && !this.fragPrevious && f && "initSegment" !== f.sn && this.fragmentTracker.getState(f) !== Jr) {
                                    var g, v = (null != (g = this.backtrackFragment) ? g : f).sn - u.startSN, m = u.fragments[v - 1];
                                    m && f.cc === m.cc && (f = m,
                                    this.fragmentTracker.removeFragment(m))
                                } else
                                    this.backtrackFragment && s.len && (this.backtrackFragment = null);
                                if (f && this.isLoopLoading(f, c)) {
                                    if (!f.gap) {
                                        var p = this.audioOnly && !this.altAudio ? O : N
                                          , y = (p === N ? this.videoBuffer : this.mediaBuffer) || this.media;
                                        y && this.afterBufferFlushed(y, p, Fe)
                                    }
                                    f = this.getNextFragmentLoopLoading(f, u, s, Fe, d)
                                }
                                f && (!f.initSegment || f.initSegment.data || this.bitrateTest || (f = f.initSegment),
                                this.loadFragment(f, a, c))
                            }
                        }
                    }
                }
            }
            ,
            r.loadFragment = function(e, r, i) {
                var n = this.fragmentTracker.getState(e);
                this.fragCurrent = e,
                n === Xr || n === Qr ? "initSegment" === e.sn ? this._loadInitSegment(e, r) : this.bitrateTest ? (this.log("Fragment " + e.sn + " of level " + e.level + " is being downloaded to test bitrate and will not be buffered"),
                this._loadBitrateTestFrag(e, r)) : (this.startFragRequested = !0,
                t.prototype.loadFragment.call(this, e, r, i)) : this.clearTrackerIfNeeded(e)
            }
            ,
            r.getBufferedFrag = function(t) {
                return this.fragmentTracker.getBufferedFrag(t, Fe)
            }
            ,
            r.followingBufferedFrag = function(t) {
                return t ? this.getBufferedFrag(t.end + .5) : null
            }
            ,
            r.immediateLevelSwitch = function() {
                this.abortCurrentFrag(),
                this.flushMainBuffer(0, Number.POSITIVE_INFINITY)
            }
            ,
            r.nextLevelSwitch = function() {
                var t = this.levels
                  , e = this.media;
                if (null != e && e.readyState) {
                    var r, i = this.getAppendedFrag(e.currentTime);
                    i && i.start > 1 && this.flushMainBuffer(0, i.start - 1);
                    var n = this.getLevelDetails();
                    if (null != n && n.live) {
                        var a = this.getMainFwdBufferInfo();
                        if (!a || a.len < 2 * n.targetduration)
                            return
                    }
                    if (!e.paused && t) {
                        var s = t[this.hls.nextLoadLevel]
                          , o = this.fragLastKbps;
                        r = o && this.fragCurrent ? this.fragCurrent.duration * s.maxBitrate / (1e3 * o) + 1 : 0
                    } else
                        r = 0;
                    var l = this.getBufferedFrag(e.currentTime + r);
                    if (l) {
                        var u = this.followingBufferedFrag(l);
                        if (u) {
                            this.abortCurrentFrag();
                            var h = u.maxStartPTS ? u.maxStartPTS : u.start
                              , d = u.duration
                              , c = Math.max(l.end, h + Math.min(Math.max(d - this.config.maxFragLookUpTolerance, d * (this.couldBacktrack ? .5 : .125)), d * (this.couldBacktrack ? .75 : .25)));
                            this.flushMainBuffer(c, Number.POSITIVE_INFINITY)
                        }
                    }
                }
            }
            ,
            r.abortCurrentFrag = function() {
                var t = this.fragCurrent;
                switch (this.fragCurrent = null,
                this.backtrackFragment = null,
                t && (t.abortRequests(),
                this.fragmentTracker.removeFragment(t)),
                this.state) {
                case Si:
                case Li:
                case Ai:
                case bi:
                case ki:
                    this.state = Ti
                }
                this.nextLoadPosition = this.getLoadPosition()
            }
            ,
            r.flushMainBuffer = function(e, r) {
                t.prototype.flushMainBuffer.call(this, e, r, this.altAudio ? "video" : null)
            }
            ,
            r.onMediaAttached = function(e, r) {
                t.prototype.onMediaAttached.call(this, e, r);
                var i = r.media;
                this.onvplaying = this.onMediaPlaying.bind(this),
                this.onvseeked = this.onMediaSeeked.bind(this),
                i.addEventListener("playing", this.onvplaying),
                i.addEventListener("seeked", this.onvseeked),
                this.gapController = new ho(this.config,i,this.fragmentTracker,this.hls)
            }
            ,
            r.onMediaDetaching = function() {
                var e = this.media;
                e && this.onvplaying && this.onvseeked && (e.removeEventListener("playing", this.onvplaying),
                e.removeEventListener("seeked", this.onvseeked),
                this.onvplaying = this.onvseeked = null,
                this.videoBuffer = null),
                this.fragPlaying = null,
                this.gapController && (this.gapController.destroy(),
                this.gapController = null),
                t.prototype.onMediaDetaching.call(this)
            }
            ,
            r.onMediaPlaying = function() {
                this.tick()
            }
            ,
            r.onMediaSeeked = function() {
                var t = this.media
                  , e = t ? t.currentTime : null;
                y(e) && this.log("Media seeked to " + e.toFixed(3));
                var r = this.getMainFwdBufferInfo();
                null !== r && 0 !== r.len ? this.tick() : this.warn('Main forward buffer length on "seeked" event ' + (r ? r.len : "empty") + ")")
            }
            ,
            r.onManifestLoading = function() {
                this.log("Trigger BUFFER_RESET"),
                this.hls.trigger(S.BUFFER_RESET, void 0),
                this.fragmentTracker.removeAllFragments(),
                this.couldBacktrack = !1,
                this.startPosition = this.lastCurrentTime = this.fragLastKbps = 0,
                this.levels = this.fragPlaying = this.backtrackFragment = this.levelLastLoaded = null,
                this.altAudio = this.audioOnly = this.startFragRequested = !1
            }
            ,
            r.onManifestParsed = function(t, e) {
                var r, i, n = !1, a = !1;
                e.levels.forEach((function(t) {
                    var e = t.audioCodec;
                    e && (n = n || -1 !== e.indexOf("mp4a.40.2"),
                    a = a || -1 !== e.indexOf("mp4a.40.5"))
                }
                )),
                this.audioCodecSwitch = n && a && !("function" == typeof (null == (i = lo()) || null == (r = i.prototype) ? void 0 : r.changeType)),
                this.audioCodecSwitch && this.log("Both AAC/HE-AAC audio found in levels; declaring level codec as HE-AAC"),
                this.levels = e.levels,
                this.startFragRequested = !1
            }
            ,
            r.onLevelLoading = function(t, e) {
                var r = this.levels;
                if (r && this.state === Ti) {
                    var i = r[e.level];
                    (!i.details || i.details.live && this.levelLastLoaded !== i || this.waitForCdnTuneIn(i.details)) && (this.state = Ci)
                }
            }
            ,
            r.onLevelLoaded = function(t, e) {
                var r, i = this.levels, n = e.level, a = e.details, s = a.totalduration;
                if (i) {
                    this.log("Level " + n + " loaded [" + a.startSN + "," + a.endSN + "]" + (a.lastPartSn ? "[part-" + a.lastPartSn + "-" + a.lastPartIndex + "]" : "") + ", cc [" + a.startCC + ", " + a.endCC + "] duration:" + s);
                    var o = i[n]
                      , l = this.fragCurrent;
                    !l || this.state !== Li && this.state !== Ai || l.level !== e.level && l.loader && this.abortCurrentFrag();
                    var u = 0;
                    if (a.live || null != (r = o.details) && r.live) {
                        var h;
                        if (this.checkLiveUpdate(a),
                        a.deltaUpdateFailed)
                            return;
                        u = this.alignPlaylists(a, o.details, null == (h = this.levelLastLoaded) ? void 0 : h.details)
                    }
                    if (o.details = a,
                    this.levelLastLoaded = o,
                    this.hls.trigger(S.LEVEL_UPDATED, {
                        details: a,
                        level: n
                    }),
                    this.state === Ci) {
                        if (this.waitForCdnTuneIn(a))
                            return;
                        this.state = Ti
                    }
                    this.startFragRequested ? a.live && this.synchronizeToLiveEdge(a) : this.setStartPosition(a, u),
                    this.tick()
                } else
                    this.warn("Levels were reset while loading level " + n)
            }
            ,
            r._handleFragmentLoadProgress = function(t) {
                var e, r = t.frag, i = t.part, n = t.payload, a = this.levels;
                if (a) {
                    var s = a[r.level]
                      , o = s.details;
                    if (!o)
                        return this.warn("Dropping fragment " + r.sn + " of level " + r.level + " after level details were reset"),
                        void this.fragmentTracker.removeFragment(r);
                    var l = s.videoCodec
                      , u = o.PTSKnown || !o.live
                      , h = null == (e = r.initSegment) ? void 0 : e.data
                      , d = this._getAudioCodec(s)
                      , c = this.transmuxer = this.transmuxer || new qn(this.hls,Fe,this._handleTransmuxComplete.bind(this),this._handleTransmuxerFlush.bind(this))
                      , f = i ? i.index : -1
                      , g = -1 !== f
                      , v = new ii(r.level,r.sn,r.stats.chunkCount,n.byteLength,f,g)
                      , m = this.initPTS[r.cc];
                    c.push(n, h, d, l, r, i, o.totalduration, u, v, m)
                } else
                    this.warn("Levels were reset while fragment load was in progress. Fragment " + r.sn + " of level " + r.level + " will not be buffered")
            }
            ,
            r.onAudioTrackSwitching = function(t, e) {
                var r = this.altAudio;
                if (!e.url) {
                    if (this.mediaBuffer !== this.media) {
                        this.log("Switching on main audio, use media.buffered to schedule main fragment loading"),
                        this.mediaBuffer = this.media;
                        var i = this.fragCurrent;
                        i && (this.log("Switching to main audio track, cancel main fragment load"),
                        i.abortRequests(),
                        this.fragmentTracker.removeFragment(i)),
                        this.resetTransmuxer(),
                        this.resetLoadingState()
                    } else
                        this.audioOnly && this.resetTransmuxer();
                    var n = this.hls;
                    r && (n.trigger(S.BUFFER_FLUSHING, {
                        startOffset: 0,
                        endOffset: Number.POSITIVE_INFINITY,
                        type: null
                    }),
                    this.fragmentTracker.removeAllFragments()),
                    n.trigger(S.AUDIO_TRACK_SWITCHED, e)
                }
            }
            ,
            r.onAudioTrackSwitched = function(t, e) {
                var r = e.id
                  , i = !!this.hls.audioTracks[r].url;
                if (i) {
                    var n = this.videoBuffer;
                    n && this.mediaBuffer !== n && (this.log("Switching on alternate audio, use video.buffered to schedule main fragment loading"),
                    this.mediaBuffer = n)
                }
                this.altAudio = i,
                this.tick()
            }
            ,
            r.onBufferCreated = function(t, e) {
                var r, i, n = e.tracks, a = !1;
                for (var s in n) {
                    var o = n[s];
                    if ("main" === o.id) {
                        if (i = s,
                        r = o,
                        "video" === s) {
                            var l = n[s];
                            l && (this.videoBuffer = l.buffer)
                        }
                    } else
                        a = !0
                }
                a && r ? (this.log("Alternate track found, use " + i + ".buffered to schedule main fragment loading"),
                this.mediaBuffer = r.buffer) : this.mediaBuffer = this.media
            }
            ,
            r.onFragBuffered = function(t, e) {
                var r = e.frag
                  , i = e.part;
                if (!r || r.type === Fe) {
                    if (this.fragContextChanged(r))
                        return this.warn("Fragment " + r.sn + (i ? " p: " + i.index : "") + " of level " + r.level + " finished buffering, but was aborted. state: " + this.state),
                        void (this.state === ki && (this.state = Ti));
                    var n = i ? i.stats : r.stats;
                    this.fragLastKbps = Math.round(8 * n.total / (n.buffering.end - n.loading.first)),
                    "initSegment" !== r.sn && (this.fragPrevious = r),
                    this.fragBufferedComplete(r, i)
                }
            }
            ,
            r.onError = function(t, e) {
                var r;
                if (e.fatal)
                    this.state = Ii;
                else
                    switch (e.details) {
                    case A.FRAG_GAP:
                    case A.FRAG_PARSING_ERROR:
                    case A.FRAG_DECRYPT_ERROR:
                    case A.FRAG_LOAD_ERROR:
                    case A.FRAG_LOAD_TIMEOUT:
                    case A.KEY_LOAD_ERROR:
                    case A.KEY_LOAD_TIMEOUT:
                        this.onFragmentOrKeyLoadError(Fe, e);
                        break;
                    case A.LEVEL_LOAD_ERROR:
                    case A.LEVEL_LOAD_TIMEOUT:
                    case A.LEVEL_PARSING_ERROR:
                        e.levelRetry || this.state !== Ci || (null == (r = e.context) ? void 0 : r.type) !== _e || (this.state = Ti);
                        break;
                    case A.BUFFER_APPEND_ERROR:
                    case A.BUFFER_FULL_ERROR:
                        if (!e.parent || "main" !== e.parent)
                            return;
                        if (e.details === A.BUFFER_APPEND_ERROR)
                            return void this.resetLoadingState();
                        this.reduceLengthAndFlushBuffer(e) && this.flushMainBuffer(0, Number.POSITIVE_INFINITY);
                        break;
                    case A.INTERNAL_EXCEPTION:
                        this.recoverWorkerError(e)
                    }
            }
            ,
            r.checkBuffer = function() {
                var t = this.media
                  , e = this.gapController;
                if (t && e && t.readyState) {
                    if (this.loadedmetadata || !ri.getBuffered(t).length) {
                        var r = this.state !== Ti ? this.fragCurrent : null;
                        e.poll(this.lastCurrentTime, r)
                    }
                    this.lastCurrentTime = t.currentTime
                }
            }
            ,
            r.onFragLoadEmergencyAborted = function() {
                this.state = Ti,
                this.loadedmetadata || (this.startFragRequested = !1,
                this.nextLoadPosition = this.startPosition),
                this.tickImmediate()
            }
            ,
            r.onBufferFlushed = function(t, e) {
                var r = e.type;
                if (r !== O || this.audioOnly && !this.altAudio) {
                    var i = (r === N ? this.videoBuffer : this.mediaBuffer) || this.media;
                    this.afterBufferFlushed(i, r, Fe),
                    this.tick()
                }
            }
            ,
            r.onLevelsUpdated = function(t, e) {
                this.level > -1 && this.fragCurrent && (this.level = this.fragCurrent.level),
                this.levels = e.levels
            }
            ,
            r.swapAudioCodec = function() {
                this.audioCodecSwap = !this.audioCodecSwap
            }
            ,
            r.seekToStartPos = function() {
                var t = this.media;
                if (t) {
                    var e = t.currentTime
                      , r = this.startPosition;
                    if (r >= 0 && e < r) {
                        if (t.seeking)
                            return void this.log("could not seek to " + r + ", already seeking at " + e);
                        var i = ri.getBuffered(t)
                          , n = (i.length ? i.start(0) : 0) - r;
                        n > 0 && (n < this.config.maxBufferHole || n < this.config.maxFragLookUpTolerance) && (this.log("adjusting start position by " + n + " to match buffer start"),
                        r += n,
                        this.startPosition = r),
                        this.log("seek to target start position " + r + " from current time " + e),
                        t.currentTime = r
                    }
                }
            }
            ,
            r._getAudioCodec = function(t) {
                var e = this.config.defaultAudioCodec || t.audioCodec;
                return this.audioCodecSwap && e && (this.log("Swapping audio codec"),
                e = -1 !== e.indexOf("mp4a.40.5") ? "mp4a.40.2" : "mp4a.40.5"),
                e
            }
            ,
            r._loadBitrateTestFrag = function(t, e) {
                var r = this;
                t.bitrateTest = !0,
                this._doFragLoad(t, e).then((function(i) {
                    var n = r.hls;
                    if (i && !r.fragContextChanged(t)) {
                        e.fragmentError = 0,
                        r.state = Ti,
                        r.startFragRequested = !1,
                        r.bitrateTest = !1;
                        var a = t.stats;
                        a.parsing.start = a.parsing.end = a.buffering.start = a.buffering.end = self.performance.now(),
                        n.trigger(S.FRAG_LOADED, i),
                        t.bitrateTest = !1
                    }
                }
                ))
            }
            ,
            r._handleTransmuxComplete = function(t) {
                var e, r = "main", i = this.hls, n = t.remuxResult, a = t.chunkMeta, s = this.getCurrentContext(a);
                if (s) {
                    var o = s.frag
                      , l = s.part
                      , u = s.level
                      , h = n.video
                      , d = n.text
                      , c = n.id3
                      , f = n.initSegment
                      , g = u.details
                      , v = this.altAudio ? void 0 : n.audio;
                    if (this.fragContextChanged(o))
                        this.fragmentTracker.removeFragment(o);
                    else {
                        if (this.state = bi,
                        f) {
                            if (null != f && f.tracks) {
                                var m = o.initSegment || o;
                                this._bufferInitSegment(u, f.tracks, m, a),
                                i.trigger(S.FRAG_PARSING_INIT_SEGMENT, {
                                    frag: m,
                                    id: r,
                                    tracks: f.tracks
                                })
                            }
                            var p = f.initPTS
                              , E = f.timescale;
                            y(p) && (this.initPTS[o.cc] = {
                                baseTime: p,
                                timescale: E
                            },
                            i.trigger(S.INIT_PTS_FOUND, {
                                frag: o,
                                id: r,
                                initPTS: p,
                                timescale: E
                            }))
                        }
                        if (h && g && "initSegment" !== o.sn) {
                            var T = g.fragments[o.sn - 1 - g.startSN]
                              , L = o.sn === g.startSN
                              , A = !T || o.cc > T.cc;
                            if (!1 !== n.independent) {
                                var R = h.startPTS
                                  , b = h.endPTS
                                  , k = h.startDTS
                                  , D = h.endDTS;
                                if (l)
                                    l.elementaryStreams[h.type] = {
                                        startPTS: R,
                                        endPTS: b,
                                        startDTS: k,
                                        endDTS: D
                                    };
                                else if (h.firstKeyFrame && h.independent && 1 === a.id && !A && (this.couldBacktrack = !0),
                                h.dropped && h.independent) {
                                    var I = this.getMainFwdBufferInfo()
                                      , w = (I ? I.end : this.getLoadPosition()) + this.config.maxBufferHole
                                      , C = h.firstKeyFramePTS ? h.firstKeyFramePTS : R;
                                    if (!L && w < C - this.config.maxBufferHole && !A)
                                        return void this.backtrack(o);
                                    A && (o.gap = !0),
                                    o.setElementaryStreamInfo(h.type, o.start, b, o.start, D, !0)
                                } else
                                    L && R > 2 && (o.gap = !0);
                                o.setElementaryStreamInfo(h.type, R, b, k, D),
                                this.backtrackFragment && (this.backtrackFragment = o),
                                this.bufferFragmentData(h, o, l, a, L || A)
                            } else {
                                if (!L && !A)
                                    return void this.backtrack(o);
                                o.gap = !0
                            }
                        }
                        if (v) {
                            var _ = v.startPTS
                              , x = v.endPTS
                              , P = v.startDTS
                              , F = v.endDTS;
                            l && (l.elementaryStreams[O] = {
                                startPTS: _,
                                endPTS: x,
                                startDTS: P,
                                endDTS: F
                            }),
                            o.setElementaryStreamInfo(O, _, x, P, F),
                            this.bufferFragmentData(v, o, l, a)
                        }
                        if (g && null != c && null != (e = c.samples) && e.length) {
                            var M = {
                                id: r,
                                frag: o,
                                details: g,
                                samples: c.samples
                            };
                            i.trigger(S.FRAG_PARSING_METADATA, M)
                        }
                        if (g && d) {
                            var N = {
                                id: r,
                                frag: o,
                                details: g,
                                samples: d.samples
                            };
                            i.trigger(S.FRAG_PARSING_USERDATA, N)
                        }
                    }
                } else
                    this.resetWhenMissingContext(a)
            }
            ,
            r._bufferInitSegment = function(t, e, r, i) {
                var n = this;
                if (this.state === bi) {
                    this.audioOnly = !!e.audio && !e.video,
                    this.altAudio && !this.audioOnly && delete e.audio;
                    var a = e.audio
                      , s = e.video
                      , o = e.audiovideo;
                    if (a) {
                        var l = t.audioCodec
                          , u = navigator.userAgent.toLowerCase();
                        if (this.audioCodecSwitch) {
                            l && (l = -1 !== l.indexOf("mp4a.40.5") ? "mp4a.40.2" : "mp4a.40.5");
                            var h = a.metadata;
                            h && "channelCount"in h && 1 !== (h.channelCount || 1) && -1 === u.indexOf("firefox") && (l = "mp4a.40.5")
                        }
                        l && -1 !== l.indexOf("mp4a.40.5") && -1 !== u.indexOf("android") && "audio/mpeg" !== a.container && (l = "mp4a.40.2",
                        this.log("Android: force audio codec to " + l)),
                        t.audioCodec && t.audioCodec !== l && this.log('Swapping manifest audio codec "' + t.audioCodec + '" for "' + l + '"'),
                        a.levelCodec = l,
                        a.id = "main",
                        this.log("Init audio buffer, container:" + a.container + ", codecs[selected/level/parsed]=[" + (l || "") + "/" + (t.audioCodec || "") + "/" + a.codec + "]")
                    }
                    s && (s.levelCodec = t.videoCodec,
                    s.id = "main",
                    this.log("Init video buffer, container:" + s.container + ", codecs[level/parsed]=[" + (t.videoCodec || "") + "/" + s.codec + "]")),
                    o && this.log("Init audiovideo buffer, container:" + o.container + ", codecs[level/parsed]=[" + t.codecs + "/" + o.codec + "]"),
                    this.hls.trigger(S.BUFFER_CODECS, e),
                    Object.keys(e).forEach((function(t) {
                        var a = e[t].initSegment;
                        null != a && a.byteLength && n.hls.trigger(S.BUFFER_APPENDING, {
                            type: t,
                            data: a,
                            frag: r,
                            part: null,
                            chunkMeta: i,
                            parent: r.type
                        })
                    }
                    )),
                    this.tickImmediate()
                }
            }
            ,
            r.getMainFwdBufferInfo = function() {
                return this.getFwdBufferInfo(this.mediaBuffer ? this.mediaBuffer : this.media, Fe)
            }
            ,
            r.backtrack = function(t) {
                this.couldBacktrack = !0,
                this.backtrackFragment = t,
                this.resetTransmuxer(),
                this.flushBufferGap(t),
                this.fragmentTracker.removeFragment(t),
                this.fragPrevious = null,
                this.nextLoadPosition = t.start,
                this.state = Ti
            }
            ,
            r.checkFragmentChanged = function() {
                var t = this.media
                  , e = null;
                if (t && t.readyState > 1 && !1 === t.seeking) {
                    var r = t.currentTime;
                    if (ri.isBuffered(t, r) ? e = this.getAppendedFrag(r) : ri.isBuffered(t, r + .1) && (e = this.getAppendedFrag(r + .1)),
                    e) {
                        this.backtrackFragment = null;
                        var i = this.fragPlaying
                          , n = e.level;
                        i && e.sn === i.sn && i.level === n || (this.fragPlaying = e,
                        this.hls.trigger(S.FRAG_CHANGED, {
                            frag: e
                        }),
                        i && i.level === n || this.hls.trigger(S.LEVEL_SWITCHED, {
                            level: n
                        }))
                    }
                }
            }
            ,
            s(e, [{
                key: "nextLevel",
                get: function() {
                    var t = this.nextBufferedFrag;
                    return t ? t.level : -1
                }
            }, {
                key: "currentFrag",
                get: function() {
                    var t = this.media;
                    return t ? this.fragPlaying || this.getAppendedFrag(t.currentTime) : null
                }
            }, {
                key: "currentProgramDateTime",
                get: function() {
                    var t = this.media;
                    if (t) {
                        var e = t.currentTime
                          , r = this.currentFrag;
                        if (r && y(e) && y(r.programDateTime)) {
                            var i = r.programDateTime + 1e3 * (e - r.start);
                            return new Date(i)
                        }
                    }
                    return null
                }
            }, {
                key: "currentLevel",
                get: function() {
                    var t = this.currentFrag;
                    return t ? t.level : -1
                }
            }, {
                key: "nextBufferedFrag",
                get: function() {
                    var t = this.currentFrag;
                    return t ? this.followingBufferedFrag(t) : null
                }
            }, {
                key: "forceStartLoad",
                get: function() {
                    return this._forceStartLoad
                }
            }]),
            e
        }(_i)
          , fo = function() {
            function t(e) {
                void 0 === e && (e = {}),
                this.config = void 0,
                this.userConfig = void 0,
                this.coreComponents = void 0,
                this.networkControllers = void 0,
                this.started = !1,
                this._emitter = new Vn,
                this._autoLevelCapping = -1,
                this._maxHdcpLevel = null,
                this.abrController = void 0,
                this.bufferController = void 0,
                this.capLevelController = void 0,
                this.latencyController = void 0,
                this.levelController = void 0,
                this.streamController = void 0,
                this.audioTrackController = void 0,
                this.subtitleTrackController = void 0,
                this.emeController = void 0,
                this.cmcdController = void 0,
                this._media = null,
                this.url = null,
                this.triggeringException = void 0,
                I(e.debug || !1, "Hls instance");
                var r = this.config = function(t, e) {
                    if ((e.liveSyncDurationCount || e.liveMaxLatencyDurationCount) && (e.liveSyncDuration || e.liveMaxLatencyDuration))
                        throw new Error("Illegal hls.js config: don't mix up liveSyncDurationCount/liveMaxLatencyDurationCount and liveSyncDuration/liveMaxLatencyDuration");
                    if (void 0 !== e.liveMaxLatencyDurationCount && (void 0 === e.liveSyncDurationCount || e.liveMaxLatencyDurationCount <= e.liveSyncDurationCount))
                        throw new Error('Illegal hls.js config: "liveMaxLatencyDurationCount" must be greater than "liveSyncDurationCount"');
                    if (void 0 !== e.liveMaxLatencyDuration && (void 0 === e.liveSyncDuration || e.liveMaxLatencyDuration <= e.liveSyncDuration))
                        throw new Error('Illegal hls.js config: "liveMaxLatencyDuration" must be greater than "liveSyncDuration"');
                    var r = io(t)
                      , n = ["TimeOut", "MaxRetry", "RetryDelay", "MaxRetryTimeout"];
                    return ["manifest", "level", "frag"].forEach((function(t) {
                        var i = ("level" === t ? "playlist" : t) + "LoadPolicy"
                          , a = void 0 === e[i]
                          , s = [];
                        n.forEach((function(n) {
                            var o = t + "Loading" + n
                              , l = e[o];
                            if (void 0 !== l && a) {
                                s.push(o);
                                var u = r[i].default;
                                switch (e[i] = {
                                    default: u
                                },
                                n) {
                                case "TimeOut":
                                    u.maxLoadTimeMs = l,
                                    u.maxTimeToFirstByteMs = l;
                                    break;
                                case "MaxRetry":
                                    u.errorRetry.maxNumRetry = l,
                                    u.timeoutRetry.maxNumRetry = l;
                                    break;
                                case "RetryDelay":
                                    u.errorRetry.retryDelayMs = l,
                                    u.timeoutRetry.retryDelayMs = l;
                                    break;
                                case "MaxRetryTimeout":
                                    u.errorRetry.maxRetryDelayMs = l,
                                    u.timeoutRetry.maxRetryDelayMs = l
                                }
                            }
                        }
                        )),
                        s.length && w.warn('hls.js config: "' + s.join('", "') + '" setting(s) are deprecated, use "' + i + '": ' + JSON.stringify(e[i]))
                    }
                    )),
                    i(i({}, r), e)
                }(t.DefaultConfig, e);
                this.userConfig = e,
                r.progressive && no(r);
                var n = r.abrController
                  , a = r.bufferController
                  , s = r.capLevelController
                  , o = r.errorController
                  , l = r.fpsController
                  , u = new o(this)
                  , h = this.abrController = new n(this)
                  , d = this.bufferController = new a(this)
                  , c = this.capLevelController = new s(this)
                  , f = new l(this)
                  , g = new Be(this)
                  , v = new $e(this)
                  , m = r.contentSteeringController
                  , p = m ? new m(this) : null
                  , y = this.levelController = new ao(this,p)
                  , E = new $r(this)
                  , T = new oo(this.config)
                  , L = this.streamController = new co(this,E,T);
                c.setStreamController(L),
                f.setStreamController(L);
                var A = [g, y, L];
                p && A.splice(1, 0, p),
                this.networkControllers = A;
                var R = [h, d, c, f, v, E];
                this.audioTrackController = this.createController(r.audioTrackController, A);
                var b = r.audioStreamController;
                b && A.push(new b(this,E,T)),
                this.subtitleTrackController = this.createController(r.subtitleTrackController, A);
                var k = r.subtitleStreamController;
                k && A.push(new k(this,E,T)),
                this.createController(r.timelineController, R),
                T.emeController = this.emeController = this.createController(r.emeController, R),
                this.cmcdController = this.createController(r.cmcdController, R),
                this.latencyController = this.createController(Ze, R),
                this.coreComponents = R,
                A.push(u);
                var D = u.onErrorOut;
                "function" == typeof D && this.on(S.ERROR, D, u)
            }
            t.isMSESupported = function() {
                return uo()
            }
            ,
            t.isSupported = function() {
                return function() {
                    if (!uo())
                        return !1;
                    var t = se();
                    return "function" == typeof (null == t ? void 0 : t.isTypeSupported) && (["avc1.42E01E,mp4a.40.2", "av01.0.01M.08", "vp09.00.50.08"].some((function(e) {
                        return t.isTypeSupported(he(e, "video"))
                    }
                    )) || ["mp4a.40.2", "fLaC"].some((function(e) {
                        return t.isTypeSupported(he(e, "audio"))
                    }
                    )))
                }()
            }
            ,
            t.getMediaSource = function() {
                return se()
            }
            ;
            var e = t.prototype;
            return e.createController = function(t, e) {
                if (t) {
                    var r = new t(this);
                    return e && e.push(r),
                    r
                }
                return null
            }
            ,
            e.on = function(t, e, r) {
                void 0 === r && (r = this),
                this._emitter.on(t, e, r)
            }
            ,
            e.once = function(t, e, r) {
                void 0 === r && (r = this),
                this._emitter.once(t, e, r)
            }
            ,
            e.removeAllListeners = function(t) {
                this._emitter.removeAllListeners(t)
            }
            ,
            e.off = function(t, e, r, i) {
                void 0 === r && (r = this),
                this._emitter.off(t, e, r, i)
            }
            ,
            e.listeners = function(t) {
                return this._emitter.listeners(t)
            }
            ,
            e.emit = function(t, e, r) {
                return this._emitter.emit(t, e, r)
            }
            ,
            e.trigger = function(t, e) {
                if (this.config.debug)
                    return this.emit(t, t, e);
                try {
                    return this.emit(t, t, e)
                } catch (e) {
                    if (w.error("An internal error happened while handling event " + t + '. Error message: "' + e.message + '". Here is a stacktrace:', e),
                    !this.triggeringException) {
                        this.triggeringException = !0;
                        var r = t === S.ERROR;
                        this.trigger(S.ERROR, {
                            type: L.OTHER_ERROR,
                            details: A.INTERNAL_EXCEPTION,
                            fatal: r,
                            event: t,
                            error: e
                        }),
                        this.triggeringException = !1
                    }
                }
                return !1
            }
            ,
            e.listenerCount = function(t) {
                return this._emitter.listenerCount(t)
            }
            ,
            e.destroy = function() {
                w.log("destroy"),
                this.trigger(S.DESTROYING, void 0),
                this.detachMedia(),
                this.removeAllListeners(),
                this._autoLevelCapping = -1,
                this.url = null,
                this.networkControllers.forEach((function(t) {
                    return t.destroy()
                }
                )),
                this.networkControllers.length = 0,
                this.coreComponents.forEach((function(t) {
                    return t.destroy()
                }
                )),
                this.coreComponents.length = 0;
                var t = this.config;
                t.xhrSetup = t.fetchSetup = void 0,
                this.userConfig = null
            }
            ,
            e.attachMedia = function(t) {
                w.log("attachMedia"),
                this._media = t,
                this.trigger(S.MEDIA_ATTACHING, {
                    media: t
                })
            }
            ,
            e.detachMedia = function() {
                w.log("detachMedia"),
                this.trigger(S.MEDIA_DETACHING, void 0),
                this._media = null
            }
            ,
            e.loadSource = function(t) {
                this.stopLoad();
                var e = this.media
                  , r = this.url
                  , i = this.url = p.buildAbsoluteURL(self.location.href, t, {
                    alwaysNormalize: !0
                });
                this._autoLevelCapping = -1,
                this._maxHdcpLevel = null,
                w.log("loadSource:" + i),
                e && r && (r !== i || this.bufferController.hasSourceTypes()) && (this.detachMedia(),
                this.attachMedia(e)),
                this.trigger(S.MANIFEST_LOADING, {
                    url: t
                })
            }
            ,
            e.startLoad = function(t) {
                void 0 === t && (t = -1),
                w.log("startLoad(" + t + ")"),
                this.started = !0,
                this.networkControllers.forEach((function(e) {
                    e.startLoad(t)
                }
                ))
            }
            ,
            e.stopLoad = function() {
                w.log("stopLoad"),
                this.started = !1,
                this.networkControllers.forEach((function(t) {
                    t.stopLoad()
                }
                ))
            }
            ,
            e.resumeBuffering = function() {
                this.started && this.networkControllers.forEach((function(t) {
                    "fragmentLoader"in t && t.startLoad(-1)
                }
                ))
            }
            ,
            e.pauseBuffering = function() {
                this.networkControllers.forEach((function(t) {
                    "fragmentLoader"in t && t.stopLoad()
                }
                ))
            }
            ,
            e.swapAudioCodec = function() {
                w.log("swapAudioCodec"),
                this.streamController.swapAudioCodec()
            }
            ,
            e.recoverMediaError = function() {
                w.log("recoverMediaError");
                var t = this._media;
                this.detachMedia(),
                t && this.attachMedia(t)
            }
            ,
            e.removeLevel = function(t) {
                this.levelController.removeLevel(t)
            }
            ,
            e.setAudioOption = function(t) {
                var e;
                return null == (e = this.audioTrackController) ? void 0 : e.setAudioOption(t)
            }
            ,
            e.setSubtitleOption = function(t) {
                var e;
                return null == (e = this.subtitleTrackController) || e.setSubtitleOption(t),
                null
            }
            ,
            s(t, [{
                key: "levels",
                get: function() {
                    var t = this.levelController.levels;
                    return t || []
                }
            }, {
                key: "currentLevel",
                get: function() {
                    return this.streamController.currentLevel
                },
                set: function(t) {
                    w.log("set currentLevel:" + t),
                    this.levelController.manualLevel = t,
                    this.streamController.immediateLevelSwitch()
                }
            }, {
                key: "nextLevel",
                get: function() {
                    return this.streamController.nextLevel
                },
                set: function(t) {
                    w.log("set nextLevel:" + t),
                    this.levelController.manualLevel = t,
                    this.streamController.nextLevelSwitch()
                }
            }, {
                key: "loadLevel",
                get: function() {
                    return this.levelController.level
                },
                set: function(t) {
                    w.log("set loadLevel:" + t),
                    this.levelController.manualLevel = t
                }
            }, {
                key: "nextLoadLevel",
                get: function() {
                    return this.levelController.nextLoadLevel
                },
                set: function(t) {
                    this.levelController.nextLoadLevel = t
                }
            }, {
                key: "firstLevel",
                get: function() {
                    return Math.max(this.levelController.firstLevel, this.minAutoLevel)
                },
                set: function(t) {
                    w.log("set firstLevel:" + t),
                    this.levelController.firstLevel = t
                }
            }, {
                key: "startLevel",
                get: function() {
                    var t = this.levelController.startLevel;
                    return -1 === t && this.abrController.forcedAutoLevel > -1 ? this.abrController.forcedAutoLevel : t
                },
                set: function(t) {
                    w.log("set startLevel:" + t),
                    -1 !== t && (t = Math.max(t, this.minAutoLevel)),
                    this.levelController.startLevel = t
                }
            }, {
                key: "capLevelToPlayerSize",
                get: function() {
                    return this.config.capLevelToPlayerSize
                },
                set: function(t) {
                    var e = !!t;
                    e !== this.config.capLevelToPlayerSize && (e ? this.capLevelController.startCapping() : (this.capLevelController.stopCapping(),
                    this.autoLevelCapping = -1,
                    this.streamController.nextLevelSwitch()),
                    this.config.capLevelToPlayerSize = e)
                }
            }, {
                key: "autoLevelCapping",
                get: function() {
                    return this._autoLevelCapping
                },
                set: function(t) {
                    this._autoLevelCapping !== t && (w.log("set autoLevelCapping:" + t),
                    this._autoLevelCapping = t,
                    this.levelController.checkMaxAutoUpdated())
                }
            }, {
                key: "bandwidthEstimate",
                get: function() {
                    var t = this.abrController.bwEstimator;
                    return t ? t.getEstimate() : NaN
                },
                set: function(t) {
                    this.abrController.resetEstimator(t)
                }
            }, {
                key: "ttfbEstimate",
                get: function() {
                    var t = this.abrController.bwEstimator;
                    return t ? t.getEstimateTTFB() : NaN
                }
            }, {
                key: "maxHdcpLevel",
                get: function() {
                    return this._maxHdcpLevel
                },
                set: function(t) {
                    (function(t) {
                        return tr.indexOf(t) > -1
                    }
                    )(t) && this._maxHdcpLevel !== t && (this._maxHdcpLevel = t,
                    this.levelController.checkMaxAutoUpdated())
                }
            }, {
                key: "autoLevelEnabled",
                get: function() {
                    return -1 === this.levelController.manualLevel
                }
            }, {
                key: "manualLevel",
                get: function() {
                    return this.levelController.manualLevel
                }
            }, {
                key: "minAutoLevel",
                get: function() {
                    var t = this.levels
                      , e = this.config.minAutoBitrate;
                    if (!t)
                        return 0;
                    for (var r = t.length, i = 0; i < r; i++)
                        if (t[i].maxBitrate >= e)
                            return i;
                    return 0
                }
            }, {
                key: "maxAutoLevel",
                get: function() {
                    var t, e = this.levels, r = this.autoLevelCapping, i = this.maxHdcpLevel;
                    if (t = -1 === r && null != e && e.length ? e.length - 1 : r,
                    i)
                        for (var n = t; n--; ) {
                            var a = e[n].attrs["HDCP-LEVEL"];
                            if (a && a <= i)
                                return n
                        }
                    return t
                }
            }, {
                key: "firstAutoLevel",
                get: function() {
                    return this.abrController.firstAutoLevel
                }
            }, {
                key: "nextAutoLevel",
                get: function() {
                    return this.abrController.nextAutoLevel
                },
                set: function(t) {
                    this.abrController.nextAutoLevel = t
                }
            }, {
                key: "playingDate",
                get: function() {
                    return this.streamController.currentProgramDateTime
                }
            }, {
                key: "mainForwardBufferInfo",
                get: function() {
                    return this.streamController.getMainFwdBufferInfo()
                }
            }, {
                key: "allAudioTracks",
                get: function() {
                    var t = this.audioTrackController;
                    return t ? t.allAudioTracks : []
                }
            }, {
                key: "audioTracks",
                get: function() {
                    var t = this.audioTrackController;
                    return t ? t.audioTracks : []
                }
            }, {
                key: "audioTrack",
                get: function() {
                    var t = this.audioTrackController;
                    return t ? t.audioTrack : -1
                },
                set: function(t) {
                    var e = this.audioTrackController;
                    e && (e.audioTrack = t)
                }
            }, {
                key: "allSubtitleTracks",
                get: function() {
                    var t = this.subtitleTrackController;
                    return t ? t.allSubtitleTracks : []
                }
            }, {
                key: "subtitleTracks",
                get: function() {
                    var t = this.subtitleTrackController;
                    return t ? t.subtitleTracks : []
                }
            }, {
                key: "subtitleTrack",
                get: function() {
                    var t = this.subtitleTrackController;
                    return t ? t.subtitleTrack : -1
                },
                set: function(t) {
                    var e = this.subtitleTrackController;
                    e && (e.subtitleTrack = t)
                }
            }, {
                key: "media",
                get: function() {
                    return this._media
                }
            }, {
                key: "subtitleDisplay",
                get: function() {
                    var t = this.subtitleTrackController;
                    return !!t && t.subtitleDisplay
                },
                set: function(t) {
                    var e = this.subtitleTrackController;
                    e && (e.subtitleDisplay = t)
                }
            }, {
                key: "lowLatencyMode",
                get: function() {
                    return this.config.lowLatencyMode
                },
                set: function(t) {
                    this.config.lowLatencyMode = t
                }
            }, {
                key: "liveSyncPosition",
                get: function() {
                    return this.latencyController.liveSyncPosition
                }
            }, {
                key: "latency",
                get: function() {
                    return this.latencyController.latency
                }
            }, {
                key: "maxLatency",
                get: function() {
                    return this.latencyController.maxLatency
                }
            }, {
                key: "targetLatency",
                get: function() {
                    return this.latencyController.targetLatency
                }
            }, {
                key: "drift",
                get: function() {
                    return this.latencyController.drift
                }
            }, {
                key: "forceStartLoad",
                get: function() {
                    return this.streamController.forceStartLoad
                }
            }], [{
                key: "version",
                get: function() {
                    return "1.5.17"
                }
            }, {
                key: "Events",
                get: function() {
                    return S
                }
            }, {
                key: "ErrorTypes",
                get: function() {
                    return L
                }
            }, {
                key: "ErrorDetails",
                get: function() {
                    return A
                }
            }, {
                key: "DefaultConfig",
                get: function() {
                    return t.defaultConfig ? t.defaultConfig : ro
                },
                set: function(e) {
                    t.defaultConfig = e
                }
            }]),
            t
        }();
        return fo.defaultConfig = void 0,
        fo
    }
    ,
    "object" == typeof exports && "undefined" != typeof module ? module.exports = i() : "function" == typeof define && define.amd ? define(i) : (r = "undefined" != typeof globalThis ? globalThis : r || self).Hls = i()
}(!1);
